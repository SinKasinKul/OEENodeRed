[
    {
        "id": "654ceb9908184e3c",
        "type": "tab",
        "label": "Project SMT",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5b32b871d6bb2fd9",
        "type": "tab",
        "label": "Maintenance",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c7ed0efb6d85cb7d",
        "type": "tab",
        "label": "Technician",
        "disabled": false,
        "info": ""
    },
    {
        "id": "189ee51bc6bd3bad",
        "type": "tab",
        "label": "Register Tracking",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2e63c3c6c3e92a36",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 4,
        "width": 13,
        "height": 1
    },
    {
        "id": "89bbfa4c34a6de27",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 7,
        "width": 7,
        "height": 1
    },
    {
        "id": "9230f52f55c71550",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "061a3eac5d5f3237",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 11,
        "width": 12,
        "height": 1
    },
    {
        "id": "15d83e6d5a180af9",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "f64655efc2ad21f3",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 14,
        "width": 20,
        "height": 1
    },
    {
        "id": "75235b225ff30748",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "2cdc950955c760ce",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 17,
        "width": 3,
        "height": 1
    },
    {
        "id": "27b5435b2b84f16c",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "c8fd2c739b7c5e8a",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 19,
        "width": 3,
        "height": 1
    },
    {
        "id": "faf0702f2b6948cf",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "1a31e1ba1bfcf691",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 21,
        "width": 3,
        "height": 1
    },
    {
        "id": "bfd080acac00d2db",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "fcd41c2155a39a32",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 23,
        "width": 3,
        "height": 1
    },
    {
        "id": "734852aeda89dd18",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "b72525703e81950b",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 27,
        "width": 17,
        "height": 1
    },
    {
        "id": "c29a74852ccfd340",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "7771af0ca1a26045",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 30,
        "width": 16,
        "height": 1
    },
    {
        "id": "a1b55e2e0756621f",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "c7989292cf3414e9",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 32,
        "width": 16,
        "height": 1
    },
    {
        "id": "e76be614c9599ef5",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 33,
        "width": 1,
        "height": 1
    },
    {
        "id": "e5a5c2be69a7affd",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "62230057b36f6339",
        "order": 36,
        "width": 17,
        "height": 1
    },
    {
        "id": "e382025e3a495c06",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 5,
        "width": 8,
        "height": 1
    },
    {
        "id": "d62a2305ac8796f8",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "23702e659076dab1",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 9,
        "width": 6,
        "height": 1
    },
    {
        "id": "75b75cb795d89637",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "bb71b95901022de3",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 13,
        "width": 16,
        "height": 1
    },
    {
        "id": "d06035f3dc43b4b8",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "90b73808ae9570bf",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 16,
        "width": 3,
        "height": 1
    },
    {
        "id": "7653c648f7f1919c",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "e5acc9b89ec67604",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 18,
        "width": 3,
        "height": 1
    },
    {
        "id": "e7f76d925ab7e52c",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "e078f3eb4cee719d",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 20,
        "width": 3,
        "height": 1
    },
    {
        "id": "c7e4efbaf96009bb",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "28dee5241db21567",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 22,
        "width": 3,
        "height": 1
    },
    {
        "id": "1421deeb981f58c8",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "7e387a8e1cb2b5b1",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 26,
        "width": 4,
        "height": 1
    },
    {
        "id": "fed36797ae52a66c",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 29,
        "width": 2,
        "height": 1
    },
    {
        "id": "584f0c1da485942b",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 30,
        "width": 1,
        "height": 1
    },
    {
        "id": "f7f4554fc162fe9c",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 32,
        "width": 5,
        "height": 1
    },
    {
        "id": "9acb40ca34e7a7cd",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 34,
        "width": 2,
        "height": 1
    },
    {
        "id": "e84ee4054eb86671",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 35,
        "width": 1,
        "height": 1
    },
    {
        "id": "e05352a5ca96ef4a",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 36,
        "width": 5,
        "height": 1
    },
    {
        "id": "bd9e4b7025c856ed",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 37,
        "width": 2,
        "height": 1
    },
    {
        "id": "1ece3ac3159dea97",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 38,
        "width": 1,
        "height": 1
    },
    {
        "id": "c5b018234a2ccf2c",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 42,
        "width": 2,
        "height": 1
    },
    {
        "id": "ade2e44077b3269f",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "9474cc27a50b4b1a",
        "order": 45,
        "width": 3,
        "height": 1
    },
    {
        "id": "7d4f5b26fad5e479",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 2,
        "width": 21,
        "height": 1
    },
    {
        "id": "d8b8b2f21fec96c9",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "d5aa5aeb500681a4",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "68dec55169929bcc",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "5c8be0ab81a0856d",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "b82670040602ecf1",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "f2ecfd7e0f4762fb",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "97d77d71a1160aa0",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "5390aed1febf07e7",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "50dea0ebfd37cad9",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "9cc27d17219dd3ae",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 15,
        "width": 15,
        "height": 1
    },
    {
        "id": "65b8ad1bb904d617",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "44614019b9873520",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 18,
        "width": 13,
        "height": 1
    },
    {
        "id": "189056733c9816d7",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "8c57b5d73768fd3a",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 20,
        "width": 13,
        "height": 1
    },
    {
        "id": "e687be72b6c0e960",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "ed6c4e3e97bf3442",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "c05044e1b249f9f7",
        "order": 24,
        "width": 17,
        "height": 1
    },
    {
        "id": "4cd510db.88fc48",
        "type": "ui_group",
        "name": "Detail",
        "tab": "c08ed831.29afb",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b1608af4.f56c58",
        "type": "ui_group",
        "name": "OEE",
        "tab": "c08ed831.29afb",
        "order": 1,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "11bb5de1.c6db42",
        "type": "ui_group",
        "name": "Production Output",
        "tab": "c08ed831.29afb",
        "order": 3,
        "disp": false,
        "width": "16",
        "collapse": false
    },
    {
        "id": "7fc3e3e5.61e93c",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "MSSQL229",
        "server": "200.100.100.229",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "STBL_Counter_LOG",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "50",
        "parseJSON": true,
        "enableArithAbort": true
    },
    {
        "id": "24971256.5d07c6",
        "type": "ui_group",
        "name": "Menu",
        "tab": "c08ed831.29afb",
        "order": 4,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "64a947e8.aad318",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "MSSQL228",
        "server": "200.100.100.228",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "STBL_MAIN",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "100",
        "parseJSON": true,
        "enableArithAbort": true
    },
    {
        "id": "ff8907a89493fb52",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "229 Send DT",
        "server": "200.100.100.229",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "STBL_Counter_LOG",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": true,
        "enableArithAbort": true
    },
    {
        "id": "1afc4d72.0904bb",
        "type": "ui_group",
        "name": "Table Report",
        "tab": "c08ed831.29afb",
        "order": 5,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "2781072e7707b6f3",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "SQL 228",
        "server": "200.100.100.228",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "STBL_PLAN",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "30000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": true,
        "enableArithAbort": true
    },
    {
        "id": "62230057b36f6339",
        "type": "ui_group",
        "name": "Maintenance Entry",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "26",
        "collapse": false
    },
    {
        "id": "9474cc27a50b4b1a",
        "type": "ui_group",
        "name": "Request",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "26",
        "collapse": false
    },
    {
        "id": "c05044e1b249f9f7",
        "type": "ui_group",
        "name": "Change Over",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "26",
        "collapse": false
    },
    {
        "id": "c08ed831.29afb",
        "type": "ui_tab",
        "name": "OEE Thai SIIX Co.,Ltd.",
        "icon": "info",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ee41de2f437bc892",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "10bfa723322dbd8d",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 4,
        "width": 13,
        "height": 1
    },
    {
        "id": "56a543a5a60ad814",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 7,
        "width": 7,
        "height": 1
    },
    {
        "id": "8825db5c233d7c0e",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "0ed6316466fcc976",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 11,
        "width": 12,
        "height": 1
    },
    {
        "id": "5e2cbcd816d3d577",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "9f379de30a1e0778",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 14,
        "width": 20,
        "height": 1
    },
    {
        "id": "164172d60e4dc5fc",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "164a1b618c1ec9e1",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 17,
        "width": 3,
        "height": 1
    },
    {
        "id": "5a0850236db18ecb",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "ee3b55b54e43e552",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 19,
        "width": 3,
        "height": 1
    },
    {
        "id": "a37e0fdb0d63489c",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "da1da7e2402d830b",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 21,
        "width": 3,
        "height": 1
    },
    {
        "id": "e2eac3ab14cf75dd",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "b0b7a2c5bd7efa88",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 23,
        "width": 3,
        "height": 1
    },
    {
        "id": "8fc508db6f7a0f33",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 24,
        "width": 26,
        "height": 1
    },
    {
        "id": "fef6cbba313a8677",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "1d6348ff13e0a642",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 28,
        "width": 6,
        "height": 1
    },
    {
        "id": "d219235cdf344f44",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 31,
        "width": 2,
        "height": 1
    },
    {
        "id": "a6cf6dc0351f822e",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 33,
        "width": 6,
        "height": 1
    },
    {
        "id": "c80661613b21875d",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 35,
        "width": 2,
        "height": 1
    },
    {
        "id": "06af894f88617784",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 36,
        "width": 6,
        "height": 1
    },
    {
        "id": "ce0548bb055a3c19",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 37,
        "width": 2,
        "height": 1
    },
    {
        "id": "26e926ca7b2e0a55",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 39,
        "width": 1,
        "height": 1
    },
    {
        "id": "310cc0692dcbfb3d",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 41,
        "width": 6,
        "height": 1
    },
    {
        "id": "ecb97d7b867bbbc1",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 43,
        "width": 1,
        "height": 1
    },
    {
        "id": "c212ba4a117bd555",
        "type": "ui_spacer",
        "z": "5b32b871d6bb2fd9",
        "name": "spacer",
        "group": "361d6ee7b1848896",
        "order": 45,
        "width": 2,
        "height": 1
    },
    {
        "id": "1be1e7eab6193824",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "MSSQL229 Maintenance",
        "server": "200.100.100.229",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "STBL_MAINTENNANCE",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": true,
        "enableArithAbort": true
    },
    {
        "id": "361d6ee7b1848896",
        "type": "ui_group",
        "name": "Maintenance Entry",
        "tab": "5ce4a79f427bbcac",
        "order": 1,
        "disp": true,
        "width": "26",
        "collapse": false
    },
    {
        "id": "f5526a14a967110c",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "MSSQL229 Maintenance",
        "server": "200.100.100.229",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "STBL_MAINTENNANCE",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": true,
        "enableArithAbort": true
    },
    {
        "id": "5ce4a79f427bbcac",
        "type": "ui_tab",
        "name": "Maintenance",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a932a0ac97efd678",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 5,
        "width": 8,
        "height": 1
    },
    {
        "id": "69df053453eba526",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "65f44e476e93ba14",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 9,
        "width": 16,
        "height": 1
    },
    {
        "id": "56bdb4a3d78713f9",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "052da481cb7b8ee6",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "1c6267a84c5d6346",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "29612d868fbfb100",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "0ba3c6388c0b7326",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "e3935a024865c447",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "a2712f41f14fb491",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 17,
        "width": 2,
        "height": 1
    },
    {
        "id": "79c2935f3a18e3d0",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 18,
        "width": 2,
        "height": 1
    },
    {
        "id": "e78d08ae805208c5",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 19,
        "width": 2,
        "height": 1
    },
    {
        "id": "53fa8f5085a7bc30",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 22,
        "width": 5,
        "height": 1
    },
    {
        "id": "a88dfe60ce35be75",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 23,
        "width": 10,
        "height": 1
    },
    {
        "id": "057aab75bec7f0ae",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 25,
        "width": 5,
        "height": 1
    },
    {
        "id": "ad7c1d7257928667",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 26,
        "width": 2,
        "height": 1
    },
    {
        "id": "bb356995cdd3ec1d",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 29,
        "width": 4,
        "height": 1
    },
    {
        "id": "83cb80bea0e6f24f",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 32,
        "width": 2,
        "height": 1
    },
    {
        "id": "240f457dc1853114",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 33,
        "width": 2,
        "height": 1
    },
    {
        "id": "d12e80e2cfe69c5f",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 35,
        "width": 4,
        "height": 1
    },
    {
        "id": "721f2bbdbbe9197f",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 37,
        "width": 2,
        "height": 1
    },
    {
        "id": "a5b5c9b2b616c84d",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 38,
        "width": 2,
        "height": 1
    },
    {
        "id": "914f661f0320a90e",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 39,
        "width": 4,
        "height": 1
    },
    {
        "id": "c6f71a413947dae5",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 40,
        "width": 2,
        "height": 1
    },
    {
        "id": "2cfa6b28258eac75",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 41,
        "width": 2,
        "height": 1
    },
    {
        "id": "2562b2cdbe6a86f8",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 45,
        "width": 2,
        "height": 1
    },
    {
        "id": "0d511a9f1928c8e9",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "fbc0b65ecfcd7e53",
        "order": 48,
        "width": 2,
        "height": 1
    },
    {
        "id": "1948f3d76cfadb40",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "b796a349f2424f4e",
        "order": 4,
        "width": 11,
        "height": 1
    },
    {
        "id": "475aa0ea8fcf9afe",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "b796a349f2424f4e",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "42bcd8a14414369e",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "b796a349f2424f4e",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "369e4a9bec162953",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "b796a349f2424f4e",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "c31da30132149df3",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "b796a349f2424f4e",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "464649d79ee72049",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "b796a349f2424f4e",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "e57e63070b6d4331",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "b796a349f2424f4e",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "c5fec2e2080e8947",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "b796a349f2424f4e",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "c0f1289c101022bd",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "b796a349f2424f4e",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "1d1d60eb25033e2c",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "b796a349f2424f4e",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "c693cacd063d12c3",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "b796a349f2424f4e",
        "order": 16,
        "width": 12,
        "height": 1
    },
    {
        "id": "38c75a454542dab3",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "b796a349f2424f4e",
        "order": 17,
        "width": 2,
        "height": 1
    },
    {
        "id": "2dc61935c5f1d91d",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "b796a349f2424f4e",
        "order": 18,
        "width": 12,
        "height": 1
    },
    {
        "id": "8a832b71cba8ed42",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "b796a349f2424f4e",
        "order": 19,
        "width": 3,
        "height": 1
    },
    {
        "id": "230926749f03b4f2",
        "type": "ui_spacer",
        "z": "c7ed0efb6d85cb7d",
        "name": "spacer",
        "group": "b796a349f2424f4e",
        "order": 22,
        "width": 15,
        "height": 1
    },
    {
        "id": "fbc0b65ecfcd7e53",
        "type": "ui_group",
        "name": "Request",
        "tab": "0ed3e6db5e530d0b",
        "order": 1,
        "disp": true,
        "width": "26",
        "collapse": false
    },
    {
        "id": "b796a349f2424f4e",
        "type": "ui_group",
        "name": "Change Over",
        "tab": "0ed3e6db5e530d0b",
        "order": 2,
        "disp": true,
        "width": "26",
        "collapse": false
    },
    {
        "id": "bb1c9c69ee6bdadb",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "MSSQL229 Maintenance",
        "server": "200.100.100.229",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "STBL_MAINTENNANCE",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": true,
        "enableArithAbort": true
    },
    {
        "id": "0ed3e6db5e530d0b",
        "type": "ui_tab",
        "name": "Technician",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dde64d7488454a4b",
        "type": "ui_group",
        "name": "Register Tracking",
        "tab": "b6039276d1173695",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b6039276d1173695",
        "type": "ui_tab",
        "name": "Register Tracking",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ca212ce29061f8cb",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "MSSQL229 Maintenance",
        "server": "200.100.100.229",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "STBL_MAINTENNANCE",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": true,
        "enableArithAbort": true
    },
    {
        "id": "c9f731be87d8027a",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "229 Send DT",
        "server": "200.100.100.229",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "STBL_Counter_LOG",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": true,
        "enableArithAbort": true
    },
    {
        "id": "2f7a7717b0c1e26a",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "b1608af4.f56c58",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "82bc2e37e0c6c768",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "b1608af4.f56c58",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "cf4f7ba35e9c738e",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "1afc4d72.0904bb",
        "order": 4,
        "width": 27,
        "height": 1
    },
    {
        "id": "2bd98eec90694950",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "1afc4d72.0904bb",
        "order": 9,
        "width": 22,
        "height": 1
    },
    {
        "id": "393bcfc64b32848e",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "1afc4d72.0904bb",
        "order": 11,
        "width": 20,
        "height": 1
    },
    {
        "id": "aad386419898c308",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "1afc4d72.0904bb",
        "order": 14,
        "width": 10,
        "height": 1
    },
    {
        "id": "05ec970aec8052e3",
        "type": "ui_spacer",
        "z": "654ceb9908184e3c",
        "name": "spacer",
        "group": "1afc4d72.0904bb",
        "order": 15,
        "width": 30,
        "height": 1
    },
    {
        "id": "a7d5db7959d79490",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "4cd510db.88fc48",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "lBStartDate",
        "label": "Start Date ::",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1910,
        "y": 380,
        "wires": []
    },
    {
        "id": "fb5a9907ae58a06c",
        "type": "inject",
        "z": "654ceb9908184e3c",
        "name": "counter",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "Time",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 160,
        "y": 1020,
        "wires": [
            [
                "2e1cc80dc72d5d6f",
                "cc6d6e7a688294c0",
                "1279f7b74f6dd872",
                "1801f4929538b703"
            ]
        ],
        "icon": "font-awesome/fa-arrow-right",
        "info": "This is counter DEMO"
    },
    {
        "id": "65a6dea59ba71eb7",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "b1608af4.f56c58",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "tBActQty",
        "label": "ACT Output",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1980,
        "y": 660,
        "wires": []
    },
    {
        "id": "df6af6440e0eec82",
        "type": "ui_chart",
        "z": "654ceb9908184e3c",
        "name": "",
        "group": "11bb5de1.c6db42",
        "order": 4,
        "width": 16,
        "height": 4,
        "label": "Achieve Target(%)/ Hours.",
        "chartType": "bar",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#0080ff",
            "#c0c0c0",
            "#0080ff",
            "#0080ff",
            "#0080ff",
            "#0080ff",
            "#0080ff",
            "#0080ff",
            "#0080ff"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2320,
        "y": 580,
        "wires": [
            []
        ],
        "icon": "node-red-contrib-ui-statechart/statechart.png"
    },
    {
        "id": "21d32a21df103754",
        "type": "function",
        "z": "654ceb9908184e3c",
        "d": true,
        "name": "QtyBarChartDay",
        "func": "let vPriece = flow.get('vPriece');\n\nlet cQty19 = flow.get('cQty19');\ncQty19 = (cQty19 === undefined) ? 0: cQty19; \nlet cQty20 = flow.get('cQty20');\ncQty20 = (cQty20 === undefined) ? 0: cQty20;\nlet cQty21 = flow.get('cQty21');\ncQty21 = (cQty21 === undefined) ? 0: cQty21;\nlet cQty22 = flow.get('cQty22');\ncQty22 = (cQty22 === undefined) ? 0: cQty22;\nlet cQty23 = flow.get('cQty23');\ncQty23 = (cQty23 === undefined) ? 0: cQty23;\nlet cQty00 = flow.get('cQty00');\ncQty00 = (cQty00 === undefined) ? 0: cQty00;\nlet cQty01 = flow.get('cQty01');\ncQty01 = (cQty01 === undefined) ? 0: cQty01;\nlet cQty02 = flow.get('cQty02');\ncQty02 = (cQty02 === undefined) ? 0: cQty02;\nlet cQty03 = flow.get('cQty03');\ncQty03 = (cQty03 === undefined) ? 0: cQty03;\nlet cQty04 = flow.get('cQty04');\ncQty04 = (cQty04 === undefined) ? 0: cQty04;\nlet cQty05 = flow.get('cQty05');\ncQty05 = (cQty05 === undefined) ? 0: cQty05;\nlet cQty06 = flow.get('cQty06');\ncQty06 = (cQty06 === undefined) ? 0: cQty06;\nlet cQty07 = flow.get('cQty07');\ncQty07 = (cQty07 === undefined) ? 0: cQty07;\nlet cQty08 = flow.get('cQty08');\ncQty08 = (cQty08 === undefined) ? 0: cQty08;\nlet cQty09 = flow.get('cQty09');\ncQty09 = (cQty09 === undefined) ? 0: cQty09;\nlet cQty10 = flow.get('cQty10');\ncQty10 = (cQty10 === undefined) ? 0: cQty10;\nlet cQty11 = flow.get('cQty11');\ncQty11 = (cQty11 === undefined) ? 0: cQty11;\nlet cQty12 = flow.get('cQty12');\ncQty12 = (cQty12 === undefined) ? 0: cQty12;\nlet cQty13 = flow.get('cQty13');\ncQty13 = (cQty13 === undefined) ? 0: cQty13;\nlet cQty14 = flow.get('cQty14');\ncQty14 = (cQty14 === undefined) ? 0: cQty14;\nlet cQty15 = flow.get('cQty15');\ncQty15 = (cQty15 === undefined) ? 0: cQty15;\nlet cQty16 = flow.get('cQty16');\ncQty16 = (cQty16 === undefined) ? 0: cQty16;\nlet cQty17 = flow.get('cQty17');\ncQty17 = (cQty17 === undefined) ? 0: cQty17;\nlet cQty18 = flow.get('cQty18');\ncQty18 = (cQty18 === undefined) ? 0: cQty18;\n\nlet vSerial = \"Qty: \";\nvar BarChart = [\n    {\n        \"series\" : [vSerial],\n        \"data\": [[cQty19,cQty20,cQty21,cQty22,cQty23,cQty00,cQty01,cQty02,cQty03,cQty04,cQty05,cQty06,cQty07,cQty08,cQty09,cQty10,cQty11,cQty12,cQty13,cQty14,cQty15,cQty16,cQty17,cQty18]],\n        \"labels\" : [\"19\",\"20\",\"21\",\"22\",\"23\",\"00\",\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\"]\n    }\n]\n\nmsg.payload = BarChart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "1fe313b8d2cb4a9f",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SecCounter",
        "func": "var vWork = msg.payload;\nlet vAlert = flow.get('vAlert');\n//var QtyCount = 1;\n\nvar Accum = flow.get('AccumDT');\n    Accum = (Accum === undefined) ? 0: Accum;\n\nif(vWork < 300){\n    msg.payload = 1;\n    flow.set('vAlert',1);\n    //QtyCount = 1;\n}\nelse if(vWork > 300 && vAlert == 0)\n{\n    msg.payload = 0;\n    //QtyCount = 0;\n    Accum = Accum + 1;\n    flow.set('AccumDT', Accum);\n}\nelse\n{\n    msg.payload = 2;\n    //QtyCount = 0;\n    Accum = Accum + 1;\n    flow.set('AccumDT', Accum);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 960,
        "wires": [
            [
                "e74e90c8d88fad3a"
            ]
        ]
    },
    {
        "id": "6b1cdf32b808e275",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL Main Line Data",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 1160,
        "y": 260,
        "wires": [
            [
                "fa24184cb045a3a6",
                "2a2b8cff3b79b9cc",
                "710c524fadf618ec"
            ]
        ]
    },
    {
        "id": "56d984508334d190",
        "type": "inject",
        "z": "654ceb9908184e3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Started!",
        "payloadType": "str",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "2d471d6b99bfd4a4",
                "f5a118badaaa7616",
                "1ae2631c0756485a"
            ]
        ]
    },
    {
        "id": "571f7976f28dd439",
        "type": "ui_text_input",
        "z": "654ceb9908184e3c",
        "name": "tBTracking",
        "label": "Tracking",
        "tooltip": "",
        "group": "24971256.5d07c6",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "8bf758d38df8f3f0"
            ]
        ]
    },
    {
        "id": "8bf758d38df8f3f0",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL Chk_Model_Seiban",
        "func": "var vTracking = msg.payload.substring(0,10);\n\nif(vTracking.length >= 10 || vTracking == 'New Model' || vTracking == 'Plan Stop')\n{\nvar vSQLTexe = \"EXEC [siix_check_serial].[dbo].[Chk_Model_Seiban] \\'\" + vTracking + \"\\'\";\nmsg.payload = vSQLTexe;\n\nflow.set('vTracking',vTracking);\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 400,
        "wires": [
            [
                "7184eff30ca2e700",
                "fb147e2a42c3320f"
            ]
        ]
    },
    {
        "id": "7184eff30ca2e700",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "64a947e8.aad318",
        "name": "GET_Model",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 570,
        "y": 400,
        "wires": [
            [
                "52af9cd76550fb21"
            ]
        ]
    },
    {
        "id": "17e05dd96a2fc578",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "GetLineData",
        "func": "flow.set('vLineGet',msg.payload[0].Line);\nflow.set('vStartDateGet',msg.payload[0].StartDate);\nmsg.payload = \"Get Load\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 720,
        "wires": [
            [
                "9281e5b83ee97490",
                "b7fd47b49e5e25e5",
                "e295a88c81da4965",
                "b8af3a54111ddf3f",
                "77ae0a717c989197",
                "98f19579d4b5de37",
                "e92490adaea79414"
            ]
        ]
    },
    {
        "id": "d151e1ae523f0b13",
        "type": "inject",
        "z": "654ceb9908184e3c",
        "name": "Re-load data 30 Sec.",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 160,
        "y": 280,
        "wires": [
            [
                "abcad3e448848502",
                "0546c48fb58a775d"
            ]
        ]
    },
    {
        "id": "bfeed4250462619f",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL STBL_OEE_GET_LINE_DETAIL",
        "func": "vLine = flow.get('vLine');\n//msg.payload = vLine;\nlet vProcess = 'Reflow'\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OEE_GET_LINE_DETAIL] \" + \"\\'\" + vLine + \"\\'\" + \",\\'\" + vProcess + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 260,
        "wires": [
            [
                "6b1cdf32b808e275"
            ]
        ]
    },
    {
        "id": "fbdce374f7318ca8",
        "type": "function",
        "z": "654ceb9908184e3c",
        "d": true,
        "name": "tBCountQty",
        "func": "//var vQty =  flow.get('vTQty');//msg.payload[0].Qty;\nlet vPriece = flow.get('vPriece');\n\nlet cQty19 = flow.get('calQty19');\ncQty19 = (cQty19 === undefined) ? 0: Math.ceil(cQty19 * vPriece);\nlet cQty20 = flow.get('calQty20');\ncQty20 = (cQty20 === undefined) ? 0: Math.ceil(cQty20 * vPriece);\nlet cQty21 = flow.get('calQty21');\ncQty21 = (cQty21 === undefined) ? 0: Math.ceil(cQty21 * vPriece);\nlet cQty22 = flow.get('calQty22');\ncQty22 = (cQty22 === undefined) ? 0: Math.ceil(cQty22 * vPriece);\nlet cQty23 = flow.get('calQty23');\ncQty23 = (cQty23 === undefined) ? 0: Math.ceil(cQty23 * vPriece);\nlet cQty00 = flow.get('calQty00');\ncQty00 = (cQty00 === undefined) ? 0: Math.ceil(cQty00 * vPriece);\nlet cQty01 = flow.get('calQty01');\ncQty01 = (cQty01 === undefined) ? 0: Math.ceil(cQty01 * vPriece);\nlet cQty02 = flow.get('calQty02');\ncQty02 = (cQty02 === undefined) ? 0: Math.ceil(cQty02 * vPriece);\nlet cQty03 = flow.get('calQty03');\ncQty03 = (cQty03 === undefined) ? 0: Math.ceil(cQty03 * vPriece);\nlet cQty04 = flow.get('calQty04');\ncQty04 = (cQty04 === undefined) ? 0: Math.ceil(cQty04 * vPriece);\nlet cQty05 = flow.get('calQty05');\ncQty05 = (cQty05 === undefined) ? 0: Math.ceil(cQty05 * vPriece);\nlet cQty06 = flow.get('calQty06');\ncQty06 = (cQty06 === undefined) ? 0: Math.ceil(cQty06 * vPriece);\nlet cQty07 = flow.get('calQty07');\ncQty07 = (cQty07 === undefined) ? 0: Math.ceil(cQty07 * vPriece);\nlet cQty08 = flow.get('calQty08');\ncQty08 = (cQty08 === undefined) ? 0: Math.ceil(cQty08 * vPriece);\nlet cQty09 = flow.get('calQty09');\ncQty09 = (cQty09 === undefined) ? 0: Math.ceil(cQty09 * vPriece);\nlet cQty10 = flow.get('calQty10');\ncQty10 = (cQty10 === undefined) ? 0: Math.ceil(cQty10 * vPriece);\nlet cQty11 = flow.get('calQty11');\ncQty11 = (cQty11 === undefined) ? 0: Math.ceil(cQty11 * vPriece);\nlet cQty12 = flow.get('calQty12');\ncQty12 = (cQty12 === undefined) ? 0: Math.ceil(cQty12 * vPriece);\nlet cQty13 = flow.get('calQty13');\ncQty13 = (cQty13 === undefined) ? 0: Math.ceil(cQty13 * vPriece);\nlet cQty14 = flow.get('calQty14');\ncQty14 = (cQty14 === undefined) ? 0: Math.ceil(cQty14 * vPriece);\nlet cQty15 = flow.get('calQty15');\ncQty15 = (cQty15 === undefined) ? 0: Math.ceil(cQty15 * vPriece);\nlet cQty16 = flow.get('calQty16');\ncQty16 = (cQty16 === undefined) ? 0: Math.ceil(cQty16 * vPriece);\nlet cQty17 = flow.get('calQty17');\ncQty17 = (cQty17 === undefined) ? 0: Math.ceil(cQty17 * vPriece);\nlet cQty18 = flow.get('calQty18');\ncQty18 = (cQty18 === undefined) ? 0: Math.ceil(cQty18 * vPriece);\n\nlet vQty = Number(cQty19) + Number(cQty20) + Number(cQty21) + Number(cQty22) + Number(cQty23) + Number(cQty00) + Number(cQty01) + Number(cQty02) + Number(cQty03) + Number(cQty04) + Number(cQty05) + Number(cQty06) + \n       Number(cQty07) + Number(cQty08) + Number(cQty09) + Number(cQty10) + Number(cQty11) + Number(cQty12) + Number(cQty13) + Number(cQty14) + Number(cQty15) + Number(cQty16) + Number(cQty17) + Number(cQty18);\n\nflow.set('vACTQTY',vQty);\n\nmsg.payload = vQty;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "90b161fba310dcf1",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "d": true,
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 3380,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "352644c7f8aab67f",
        "type": "function",
        "z": "654ceb9908184e3c",
        "d": true,
        "name": "SQL SP STBL_OEE_GET_RT_DATE",
        "func": "var vLine = flow.get('vLineGet');\nvar vStartDate = flow.get('vStartDateGet');\nlet vPrecess = 'Reflow';\nlet vSide = flow.get('vSide');\n\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OEE_GET_RT_DATE_SIDE_ALL] \" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + vPrecess + \"\\'\";\n\nmsg.payload = t; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3130,
        "y": 660,
        "wires": [
            [
                "90b161fba310dcf1"
            ]
        ]
    },
    {
        "id": "2d471d6b99bfd4a4",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set Value Line Name",
        "func": "flow.set('vLine','Line-19');\nflow.set('vTLine','Line-19');\nflow.set('vAlert',0);\nflow.set('vTotalDT',0);\nflow.set('vTotalPlanStop',0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 100,
        "wires": [
            [
                "1fea0bdde5bd23f6",
                "8d3756de54f5c65a"
            ]
        ]
    },
    {
        "id": "36809e411b31db27",
        "type": "ui_table",
        "z": "654ceb9908184e3c",
        "group": "1afc4d72.0904bb",
        "name": "Hourly Data",
        "order": 1,
        "width": 30,
        "height": 6,
        "columns": [
            {
                "field": "Model",
                "title": "Model",
                "width": "14%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Side",
                "title": "Side",
                "width": "3%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "19",
                "title": "19",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "20",
                "title": "20",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "21",
                "title": "21",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "22",
                "title": "22",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "23",
                "title": "23",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "00",
                "title": "00",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "01",
                "title": "01",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "02",
                "title": "02",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "03",
                "title": "03",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "04",
                "title": "04",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "05",
                "title": "05",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "06",
                "title": "06",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "07",
                "title": "07",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "08",
                "title": "08",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "09",
                "title": "09",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "10",
                "title": "10",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "11",
                "title": "11",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "12",
                "title": "12",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "13",
                "title": "13",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "14",
                "title": "14",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "15",
                "title": "15",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "16",
                "title": "16",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "17",
                "title": "17",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "18",
                "title": "18",
                "width": "3%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Total",
                "title": "Total",
                "width": "6%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ITEMCODE",
                "title": "ItemCD",
                "width": "6%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1830,
        "y": 820,
        "wires": []
    },
    {
        "id": "fa24184cb045a3a6",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Get Data Main",
        "func": "flow.set('vTLine',msg.payload[0].Line);\nflow.set('vTModel',msg.payload[0].Model);\nflow.set('vTQty',msg.payload[0].Qty);\nflow.set('vTQtyOK',msg.payload[0].OKQty);\nflow.set('vTQtyFC',msg.payload[0].NGQty);\nflow.set('vTClycleTime',msg.payload[0].ClycleTime);\nflow.set('vTStartDate',msg.payload[0].StartDate);\nflow.set('vTUpdateDate',msg.payload[0].UpdateDate);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 240,
        "wires": [
            [
                "aaa9605fd599e092",
                "2f2b3fe690cf8c81"
            ]
        ]
    },
    {
        "id": "bf43f9c413eb66a5",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "tBStartDate",
        "func": "var vStartDate = flow.get('vTStartDate');\nmsg.payload = vStartDate;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1730,
        "y": 380,
        "wires": [
            [
                "a7d5db7959d79490"
            ]
        ]
    },
    {
        "id": "a37d358a84924515",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "UseFull Data",
        "func": "var vRow = msg.payload.length;\nvar vData = msg.payload;\n\nflow.set('cUseFull00',0);\nflow.set('cUseFull01',0);\nflow.set('cUseFull02',0);\nflow.set('cUseFull03',0);\nflow.set('cUseFull04',0);\nflow.set('cUseFull05',0);\nflow.set('cUseFull06',0);\nflow.set('cUseFull07',0);\nflow.set('cUseFull08',0);\nflow.set('cUseFull09',0);\nflow.set('cUseFull10',0);\nflow.set('cUseFull11',0);\nflow.set('cUseFull12',0);\nflow.set('cUseFull13',0);\nflow.set('cUseFull14',0);\nflow.set('cUseFull15',0);\nflow.set('cUseFull16',0);\nflow.set('cUseFull17',0);\nflow.set('cUseFull18',0);\nflow.set('cUseFull19',0);\nflow.set('cUseFull20',0);\nflow.set('cUseFull21',0);\nflow.set('cUseFull22',0);\nflow.set('cUseFull23',0);\n\nfor(let i = 0;i < vRow; i++)\n{\n    if(vData[i].Hour == 0){flow.set('cUseFull00',vData[i].Use_Full);}\n    if(vData[i].Hour == 1){flow.set('cUseFull01',vData[i].Use_Full);}\n    if(vData[i].Hour == 2){flow.set('cUseFull02',vData[i].Use_Full);}\n    if(vData[i].Hour == 3){flow.set('cUseFull03',vData[i].Use_Full);}\n    if(vData[i].Hour == 4){flow.set('cUseFull04',vData[i].Use_Full);}\n    if(vData[i].Hour == 5){flow.set('cUseFull05',vData[i].Use_Full);}\n    if(vData[i].Hour == 6){flow.set('cUseFull06',vData[i].Use_Full);}\n    if(vData[i].Hour == 7){flow.set('cUseFull07',vData[i].Use_Full);}\n    if(vData[i].Hour == 8){flow.set('cUseFull08',vData[i].Use_Full);}\n    if(vData[i].Hour == 9){flow.set('cUseFull09',vData[i].Use_Full);}\n    if(vData[i].Hour == 10){flow.set('cUseFull10',vData[i].Use_Full);}\n    if(vData[i].Hour == 11){flow.set('cUseFull11',vData[i].Use_Full);}\n    if(vData[i].Hour == 12){flow.set('cUseFull12',vData[i].Use_Full);}\n    if(vData[i].Hour == 13){flow.set('cUseFull13',vData[i].Use_Full);}\n    if(vData[i].Hour == 14){flow.set('cUseFull14',vData[i].Use_Full);}\n    if(vData[i].Hour == 15){flow.set('cUseFull15',vData[i].Use_Full);}\n    if(vData[i].Hour == 16){flow.set('cUseFull16',vData[i].Use_Full);}\n    if(vData[i].Hour == 17){flow.set('cUseFull17',vData[i].Use_Full);}\n    if(vData[i].Hour == 18){flow.set('cUseFull18',vData[i].Use_Full);}\n    if(vData[i].Hour == 19){flow.set('cUseFull19',vData[i].Use_Full);}\n    if(vData[i].Hour == 20){flow.set('cUseFull20',vData[i].Use_Full);}\n    if(vData[i].Hour == 21){flow.set('cUseFull21',vData[i].Use_Full);}\n    if(vData[i].Hour == 22){flow.set('cUseFull22',vData[i].Use_Full);}\n    if(vData[i].Hour == 23){flow.set('cUseFull23',vData[i].Use_Full);}\n}\n\nflow.set('cQty00',0);\nflow.set('cQty01',0);\nflow.set('cQty02',0);\nflow.set('cQty03',0);\nflow.set('cQty04',0);\nflow.set('cQty05',0);\nflow.set('cQty06',0);\nflow.set('cQty07',0);\nflow.set('cQty08',0);\nflow.set('cQty09',0);\nflow.set('cQty10',0);\nflow.set('cQty11',0);\nflow.set('cQty12',0);\nflow.set('cQty13',0);\nflow.set('cQty14',0);\nflow.set('cQty15',0);\nflow.set('cQty16',0);\nflow.set('cQty17',0);\nflow.set('cQty18',0);\nflow.set('cQty19',0);\nflow.set('cQty20',0);\nflow.set('cQty21',0);\nflow.set('cQty22',0);\nflow.set('cQty23',0);\n\nfor(let i = 0;i < vRow; i++)\n{\n    if(vData[i].Hour == 0){flow.set('cQty00',vData[i].Use_Full);}\n    if(vData[i].Hour == 1){flow.set('cQty01',vData[i].Use_Full);}\n    if(vData[i].Hour == 2){flow.set('cQty02',vData[i].Use_Full);}\n    if(vData[i].Hour == 3){flow.set('cQty03',vData[i].Use_Full);}\n    if(vData[i].Hour == 4){flow.set('cQty04',vData[i].Use_Full);}\n    if(vData[i].Hour == 5){flow.set('cQty05',vData[i].Use_Full);}\n    if(vData[i].Hour == 6){flow.set('cQty06',vData[i].Use_Full);}\n    if(vData[i].Hour == 7){flow.set('cQty07',vData[i].Use_Full);}\n    if(vData[i].Hour == 8){flow.set('cQty08',vData[i].Use_Full);}\n    if(vData[i].Hour == 9){flow.set('cQty09',vData[i].Use_Full);}\n    if(vData[i].Hour == 10){flow.set('cQty10',vData[i].Use_Full);}\n    if(vData[i].Hour == 11){flow.set('cQty11',vData[i].Use_Full);}\n    if(vData[i].Hour == 12){flow.set('cQty12',vData[i].Use_Full);}\n    if(vData[i].Hour == 13){flow.set('cQty13',vData[i].Use_Full);}\n    if(vData[i].Hour == 14){flow.set('cQty14',vData[i].Use_Full);}\n    if(vData[i].Hour == 15){flow.set('cQty15',vData[i].Use_Full);}\n    if(vData[i].Hour == 16){flow.set('cQty16',vData[i].Use_Full);}\n    if(vData[i].Hour == 17){flow.set('cQty17',vData[i].Use_Full);}\n    if(vData[i].Hour == 18){flow.set('cQty18',vData[i].Use_Full);}\n    if(vData[i].Hour == 19){flow.set('cQty19',vData[i].Use_Full);}\n    if(vData[i].Hour == 20){flow.set('cQty20',vData[i].Use_Full);}\n    if(vData[i].Hour == 21){flow.set('cQty21',vData[i].Use_Full);}\n    if(vData[i].Hour == 22){flow.set('cQty22',vData[i].Use_Full);}\n    if(vData[i].Hour == 23){flow.set('cQty23',vData[i].Use_Full);}\n}\n\n//msg.payload = vData[12].Use_Full;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 660,
        "wires": [
            [
                "393e844e6ba79ab9"
            ]
        ]
    },
    {
        "id": "1ae2631c0756485a",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set Values 0",
        "func": "\n    flow.set('cQty07',0);\n    flow.set('cQty08',0);\n    flow.set('cQty09',0);\n    flow.set('cQty10',0);\n    flow.set('cQty11',0);\n    flow.set('cQty12',0);\n    flow.set('cQty13',0);\n    flow.set('cQty14',0);\n    flow.set('cQty15',0);\n    flow.set('cQty16',0);\n    flow.set('cQty17',0);\n    flow.set('cQty18',0);\n    flow.set('cQty19',0);\n    flow.set('cQty20',0);\n    flow.set('cQty21',0);\n    flow.set('cQty22',0);\n    flow.set('cQty23',0);\n    flow.set('cQty00',0);\n    flow.set('cQty01',0);\n    flow.set('cQty02',0);\n    flow.set('cQty03',0);\n    flow.set('cQty04',0);\n    flow.set('cQty05',0);\n    flow.set('cQty06',0);\n\n    flow.set('cDTCO07',0);\n    flow.set('cDTCO08',0);\n    flow.set('cDTCO09',0);\n    flow.set('cDTCO10',0);\n    flow.set('cDTCO11',0);\n    flow.set('cDTCO12',0);\n    flow.set('cDTCO13',0);\n    flow.set('cDTCO14',0);\n    flow.set('cDTCO15',0);\n    flow.set('cDTCO16',0);\n    flow.set('cDTCO17',0);\n    flow.set('cDTCO18',0);\n    flow.set('cDTCO19',0);\n    flow.set('cDTCO20',0);\n    flow.set('cDTCO21',0);\n    flow.set('cDTCO22',0);\n    flow.set('cDTCO23',0);\n    flow.set('cDTCO00',0);\n    flow.set('cDTCO01',0);\n    flow.set('cDTCO02',0);\n    flow.set('cDTCO03',0);\n    flow.set('cDTCO04',0);\n    flow.set('cDTCO05',0);\n    flow.set('cDTCO06',0);\n    \n    flow.set('cDTMT07',0);\n    flow.set('cDTMT08',0);\n    flow.set('cDTMT09',0);\n    flow.set('cDTMT10',0);\n    flow.set('cDTMT11',0);\n    flow.set('cDTMT12',0);\n    flow.set('cDTMT13',0);\n    flow.set('cDTMT14',0);\n    flow.set('cDTMT15',0);\n    flow.set('cDTMT16',0);\n    flow.set('cDTMT17',0);\n    flow.set('cDTMT18',0);\n    flow.set('cDTMT19',0);\n    flow.set('cDTMT20',0);\n    flow.set('cDTMT21',0);\n    flow.set('cDTMT22',0);\n    flow.set('cDTMT23',0);\n    flow.set('cDTMT00',0);\n    flow.set('cDTMT01',0);\n    flow.set('cDTMT02',0);\n    flow.set('cDTMT03',0);\n    flow.set('cDTMT04',0);\n    flow.set('cDTMT05',0);\n    flow.set('cDTMT06',0);\n    \n    flow.set('cDTWM07',0);\n    flow.set('cDTWM08',0);\n    flow.set('cDTWM09',0);\n    flow.set('cDTWM10',0);\n    flow.set('cDTWM11',0);\n    flow.set('cDTWM12',0);\n    flow.set('cDTWM13',0);\n    flow.set('cDTWM14',0);\n    flow.set('cDTWM15',0);\n    flow.set('cDTWM16',0);\n    flow.set('cDTWM17',0);\n    flow.set('cDTWM18',0);\n    flow.set('cDTWM19',0);\n    flow.set('cDTWM20',0);\n    flow.set('cDTWM21',0);\n    flow.set('cDTWM22',0);\n    flow.set('cDTWM23',0);\n    flow.set('cDTWM00',0);\n    flow.set('cDTWM01',0);\n    flow.set('cDTWM02',0);\n    flow.set('cDTWM03',0);\n    flow.set('cDTWM04',0);\n    flow.set('cDTWM05',0);\n    flow.set('cDTWM06',0);\n    \n    flow.set('cDTQI07',0);\n    flow.set('cDTQI08',0);\n    flow.set('cDTQI09',0);\n    flow.set('cDTQI10',0);\n    flow.set('cDTQI11',0);\n    flow.set('cDTQI12',0);\n    flow.set('cDTQI13',0);\n    flow.set('cDTQI14',0);\n    flow.set('cDTQI15',0);\n    flow.set('cDTQI16',0);\n    flow.set('cDTQI17',0);\n    flow.set('cDTQI18',0);\n    flow.set('cDTQI19',0);\n    flow.set('cDTQI20',0);\n    flow.set('cDTQI21',0);\n    flow.set('cDTQI22',0);\n    flow.set('cDTQI23',0);\n    flow.set('cDTQI00',0);\n    flow.set('cDTQI01',0);\n    flow.set('cDTQI02',0);\n    flow.set('cDTQI03',0);\n    flow.set('cDTQI04',0);\n    flow.set('cDTQI05',0);\n    flow.set('cDTQI06',0);\n    \n    flow.set('cDTPS07',0);\n    flow.set('cDTPS08',0);\n    flow.set('cDTPS09',0);\n    flow.set('cDTPS10',0);\n    flow.set('cDTPS11',0);\n    flow.set('cDTPS12',0);\n    flow.set('cDTPS13',0);\n    flow.set('cDTPS14',0);\n    flow.set('cDTPS15',0);\n    flow.set('cDTPS16',0);\n    flow.set('cDTPS17',0);\n    flow.set('cDTPS18',0);\n    flow.set('cDTPS19',0);\n    flow.set('cDTPS20',0);\n    flow.set('cDTPS21',0);\n    flow.set('cDTPS22',0);\n    flow.set('cDTPS23',0);\n    flow.set('cDTPS00',0);\n    flow.set('cDTPS01',0);\n    flow.set('cDTPS02',0);\n    flow.set('cDTPS03',0);\n    flow.set('cDTPS04',0);\n    flow.set('cDTPS05',0);\n    flow.set('cDTPS06',0);\n\n    flow.set('cDTNM07',0);\n    flow.set('cDTNM08',0);\n    flow.set('cDTNM09',0);\n    flow.set('cDTNM10',0);\n    flow.set('cDTNM11',0);\n    flow.set('cDTNM12',0);\n    flow.set('cDTNM13',0);\n    flow.set('cDTNM14',0);\n    flow.set('cDTNM15',0);\n    flow.set('cDTNM16',0);\n    flow.set('cDTNM17',0);\n    flow.set('cDTNM18',0);\n    flow.set('cDTNM19',0);\n    flow.set('cDTNM20',0);\n    flow.set('cDTNM21',0);\n    flow.set('cDTNM22',0);\n    flow.set('cDTNM23',0);\n    flow.set('cDTNM00',0);\n    flow.set('cDTNM01',0);\n    flow.set('cDTNM02',0);\n    flow.set('cDTNM03',0);\n    flow.set('cDTNM04',0);\n    flow.set('cDTNM05',0);\n    flow.set('cDTNM06',0);\n    \n    //--------------------------//\n    \n    flow.set('ccDTCO07',0);\n    flow.set('ccDTCO08',0);\n    flow.set('ccDTCO09',0);\n    flow.set('ccDTCO10',0);\n    flow.set('ccDTCO11',0);\n    flow.set('ccDTCO12',0);\n    flow.set('ccDTCO13',0);\n    flow.set('ccDTCO14',0);\n    flow.set('ccDTCO15',0);\n    flow.set('ccDTCO16',0);\n    flow.set('ccDTCO17',0);\n    flow.set('ccDTCO18',0);\n    flow.set('ccDTCO19',0);\n    flow.set('ccDTCO20',0);\n    flow.set('ccDTCO21',0);\n    flow.set('ccDTCO22',0);\n    flow.set('ccDTCO23',0);\n    flow.set('ccDTCO00',0);\n    flow.set('ccDTCO01',0);\n    flow.set('ccDTCO02',0);\n    flow.set('ccDTCO03',0);\n    flow.set('ccDTCO04',0);\n    flow.set('ccDTCO05',0);\n    flow.set('ccDTCO06',0);\n    \n    flow.set('ccDTMT07',0);\n    flow.set('ccDTMT08',0);\n    flow.set('ccDTMT09',0);\n    flow.set('ccDTMT10',0);\n    flow.set('ccDTMT11',0);\n    flow.set('ccDTMT12',0);\n    flow.set('ccDTMT13',0);\n    flow.set('ccDTMT14',0);\n    flow.set('ccDTMT15',0);\n    flow.set('ccDTMT16',0);\n    flow.set('ccDTMT17',0);\n    flow.set('ccDTMT18',0);\n    flow.set('ccDTMT19',0);\n    flow.set('ccDTMT20',0);\n    flow.set('ccDTMT21',0);\n    flow.set('ccDTMT22',0);\n    flow.set('ccDTMT23',0);\n    flow.set('ccDTMT00',0);\n    flow.set('ccDTMT01',0);\n    flow.set('ccDTMT02',0);\n    flow.set('ccDTMT03',0);\n    flow.set('ccDTMT04',0);\n    flow.set('ccDTMT05',0);\n    flow.set('ccDTMT06',0);\n    \n    flow.set('ccDTWM07',0);\n    flow.set('ccDTWM08',0);\n    flow.set('ccDTWM09',0);\n    flow.set('ccDTWM10',0);\n    flow.set('ccDTWM11',0);\n    flow.set('ccDTWM12',0);\n    flow.set('ccDTWM13',0);\n    flow.set('ccDTWM14',0);\n    flow.set('ccDTWM15',0);\n    flow.set('ccDTWM16',0);\n    flow.set('ccDTWM17',0);\n    flow.set('ccDTWM18',0);\n    flow.set('ccDTWM19',0);\n    flow.set('ccDTWM20',0);\n    flow.set('ccDTWM21',0);\n    flow.set('ccDTWM22',0);\n    flow.set('ccDTWM23',0);\n    flow.set('ccDTWM00',0);\n    flow.set('ccDTWM01',0);\n    flow.set('ccDTWM02',0);\n    flow.set('ccDTWM03',0);\n    flow.set('ccDTWM04',0);\n    flow.set('ccDTWM05',0);\n    flow.set('ccDTWM06',0);\n    \n    flow.set('ccDTQI07',0);\n    flow.set('ccDTQI08',0);\n    flow.set('ccDTQI09',0);\n    flow.set('ccDTQI10',0);\n    flow.set('ccDTQI11',0);\n    flow.set('ccDTQI12',0);\n    flow.set('ccDTQI13',0);\n    flow.set('ccDTQI14',0);\n    flow.set('ccDTQI15',0);\n    flow.set('ccDTQI16',0);\n    flow.set('ccDTQI17',0);\n    flow.set('ccDTQI18',0);\n    flow.set('ccDTQI19',0);\n    flow.set('ccDTQI20',0);\n    flow.set('ccDTQI21',0);\n    flow.set('ccDTQI22',0);\n    flow.set('ccDTQI23',0);\n    flow.set('ccDTQI00',0);\n    flow.set('ccDTQI01',0);\n    flow.set('ccDTQI02',0);\n    flow.set('ccDTQI03',0);\n    flow.set('ccDTQI04',0);\n    flow.set('ccDTQI05',0);\n    flow.set('ccDTQI06',0);\n    \n    flow.set('ccDTPS07',0);\n    flow.set('ccDTPS08',0);\n    flow.set('ccDTPS09',0);\n    flow.set('ccDTPS10',0);\n    flow.set('ccDTPS11',0);\n    flow.set('ccDTPS12',0);\n    flow.set('ccDTPS13',0);\n    flow.set('ccDTPS14',0);\n    flow.set('ccDTPS15',0);\n    flow.set('ccDTPS16',0);\n    flow.set('ccDTPS17',0);\n    flow.set('ccDTPS18',0);\n    flow.set('ccDTPS19',0);\n    flow.set('ccDTPS20',0);\n    flow.set('ccDTPS21',0);\n    flow.set('ccDTPS22',0);\n    flow.set('ccDTPS23',0);\n    flow.set('ccDTPS00',0);\n    flow.set('ccDTPS01',0);\n    flow.set('ccDTPS02',0);\n    flow.set('ccDTPS03',0);\n    flow.set('ccDTPS04',0);\n    flow.set('ccDTPS05',0);\n    flow.set('ccDTPS06',0);\n    \n    flow.set('ccDTNM07',0);\n    flow.set('ccDTNM08',0);\n    flow.set('ccDTNM09',0);\n    flow.set('ccDTNM10',0);\n    flow.set('ccDTNM11',0);\n    flow.set('ccDTNM12',0);\n    flow.set('ccDTNM13',0);\n    flow.set('ccDTNM14',0);\n    flow.set('ccDTNM15',0);\n    flow.set('ccDTNM16',0);\n    flow.set('ccDTNM17',0);\n    flow.set('ccDTNM18',0);\n    flow.set('ccDTNM19',0);\n    flow.set('ccDTNM20',0);\n    flow.set('ccDTNM21',0);\n    flow.set('ccDTNM22',0);\n    flow.set('ccDTNM23',0);\n    flow.set('ccDTNM00',0);\n    flow.set('ccDTNM01',0);\n    flow.set('ccDTNM02',0);\n    flow.set('ccDTNM03',0);\n    flow.set('ccDTNM04',0);\n    flow.set('ccDTNM05',0);\n    flow.set('ccDTNM06',0);\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "3ed08f33f860fcb4",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "4cd510db.88fc48",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "lBUpdateDate",
        "label": "Update Date ::",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1920,
        "y": 420,
        "wires": []
    },
    {
        "id": "3a8aed1d3ac42a0e",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "tBUpdateDate",
        "func": "var vTUpdateDate = flow.get('vTUpdateDate');\nmsg.payload = vTUpdateDate;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1740,
        "y": 420,
        "wires": [
            [
                "3ed08f33f860fcb4"
            ]
        ]
    },
    {
        "id": "03f6fa30cce90996",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "tBDiffDate",
        "func": "var msg = {};\nvar msg1 = {};\nvar vTUpdateDate = flow.get('vTUpdateDate');\nmsg.payload = vTUpdateDate;\n\nvar t1 = new Date();\nvar t2 = new Date(vTUpdateDate);\nvar dif = t1.getTime() - t2.getTime();\n\nvar Seconds_from_T1_to_T2 = dif / 1000;\nvar Seconds_Between_Dates = Math.abs(Seconds_from_T1_to_T2);\nvar Sec = Math.ceil(Seconds_Between_Dates);\n\nif(Sec >= 60){\n    SecT = Math.ceil(Sec / 60);\n    SecT = SecT + \" Min.\";\n}\nelse{\n    SecT = Sec + \" sec.\";\n}\n\n\nmsg.payload = Sec;\nmsg1.payload = SecT;\n\nreturn [msg,msg1];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 920,
        "wires": [
            [
                "b6379ec220cfcc64"
            ],
            [
                "a7cc121391024e06"
            ]
        ]
    },
    {
        "id": "a7cc121391024e06",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "4cd510db.88fc48",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "lBWaitTime",
        "label": "Wait Time ::",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 450,
        "y": 960,
        "wires": []
    },
    {
        "id": "b6379ec220cfcc64",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set DownTime",
        "func": "var vSecCounter = msg.playload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 920,
        "wires": [
            [
                "1fe313b8d2cb4a9f"
            ]
        ]
    },
    {
        "id": "2f2d8bf002eedfb7",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "4cd510db.88fc48",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "lBAccumDownTime",
        "label": "Accum Down Time ::",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 690,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e74e90c8d88fad3a",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Accum Down Time",
        "func": "var Accum = flow.get('AccumDT');\nmsg.payload = Accum;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1000,
        "wires": [
            [
                "2f2d8bf002eedfb7"
            ]
        ]
    },
    {
        "id": "290a8964c271b071",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "tBActCT",
        "func": "let vTClycleTime =  flow.get('vTClycleTime');//msg.payload[0].Qty;\nlet vPriece = flow.get('vPriece');\n\nvTClycleTime = Number(vTClycleTime) / Number(vPriece);\n\nmsg.payload = vTClycleTime.toFixed(2);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 340,
        "wires": [
            [
                "82347982e006d2b4"
            ]
        ]
    },
    {
        "id": "82347982e006d2b4",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "4cd510db.88fc48",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "tBActCT",
        "label": "Actual CT :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1900,
        "y": 340,
        "wires": []
    },
    {
        "id": "bde575a66b179fe9",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "11bb5de1.c6db42",
        "order": 2,
        "width": 8,
        "height": 1,
        "name": "tBModel",
        "label": "Model :: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 1900,
        "y": 300,
        "wires": []
    },
    {
        "id": "bbe4d35e1390d19b",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "tBModel",
        "func": "var vTModel =  flow.get('vTModel');//msg.payload[0].Qty;\nmsg.payload = vTModel;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1720,
        "y": 300,
        "wires": [
            [
                "bde575a66b179fe9"
            ]
        ]
    },
    {
        "id": "8d3756de54f5c65a",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "tBLine",
        "func": "var vTLine =  flow.get('vTLine');//msg.payload[0].Qty;\nmsg.payload = vTLine;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 100,
        "wires": [
            [
                "d4ed5e188779aee9"
            ]
        ]
    },
    {
        "id": "d4ed5e188779aee9",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "b1608af4.f56c58",
        "order": 1,
        "width": 2,
        "height": 2,
        "name": "tBLine",
        "label": "Line",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 890,
        "y": 60,
        "wires": []
    },
    {
        "id": "216086e2f89ac4d2",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Setting STD CT",
        "func": "let vCT = flow.get('vCT');\nlet vPriece = flow.get('vPriece');\n\nlet vSTDCT = Number(vCT) * Number(vPriece);\nvSTDCT = vSTDCT.toFixed(2);\n\nmsg.payload = vSTDCT;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 540,
        "wires": [
            [
                "39b042fcf3eac119"
            ]
        ]
    },
    {
        "id": "dfe31d79e6c9bc21",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "b1608af4.f56c58",
        "order": 2,
        "width": 2,
        "height": 2,
        "name": "tBSTDCT",
        "label": "STD CT",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 2100,
        "y": 540,
        "wires": []
    },
    {
        "id": "39b042fcf3eac119",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set STD CT Text",
        "func": "var vSDTCT = flow.get('vSTDCT');\nmsg.payload = vSDTCT;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1930,
        "y": 540,
        "wires": [
            [
                "dfe31d79e6c9bc21"
            ]
        ]
    },
    {
        "id": "419e044f49d2262c",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "b1608af4.f56c58",
        "order": 3,
        "width": 3,
        "height": 2,
        "name": "tBTarget Output",
        "label": "Target (pcs.)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1860,
        "y": 200,
        "wires": []
    },
    {
        "id": "ea75642228c401cf",
        "type": "ui_button",
        "z": "654ceb9908184e3c",
        "name": "bTWaitMaterial",
        "group": "24971256.5d07c6",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "<B>Wait Material</B>",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 260,
        "y": 1780,
        "wires": [
            [
                "6478eb3a22abcf57"
            ]
        ]
    },
    {
        "id": "a7b1048b997c1659",
        "type": "ui_button",
        "z": "654ceb9908184e3c",
        "name": "bTQualityIssue",
        "group": "24971256.5d07c6",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "<B>Quality Issue</B>",
        "tooltip": "",
        "color": "",
        "bgcolor": "Purple",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 260,
        "y": 1960,
        "wires": [
            [
                "b795c15f4fc7d795"
            ]
        ]
    },
    {
        "id": "d4417dbd4ef75eda",
        "type": "ui_button",
        "z": "654ceb9908184e3c",
        "name": "bTChangeOver",
        "group": "24971256.5d07c6",
        "order": 10,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "<B>Change Over</B>",
        "tooltip": "",
        "color": "black",
        "bgcolor": "yellow",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 260,
        "y": 2100,
        "wires": [
            [
                "39c6c21438bac6c7"
            ]
        ]
    },
    {
        "id": "c929dca2dca16ae7",
        "type": "ui_gauge",
        "z": "654ceb9908184e3c",
        "name": "gBAvailability",
        "group": "11bb5de1.c6db42",
        "order": 6,
        "width": 5,
        "height": 4,
        "gtype": "gage",
        "title": "Availability",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ff0f0f",
            "#e6e600",
            "#42ff02"
        ],
        "seg1": "50",
        "seg2": "85",
        "x": 1830,
        "y": 900,
        "wires": []
    },
    {
        "id": "da2d093f8284c07b",
        "type": "ui_gauge",
        "z": "654ceb9908184e3c",
        "name": "gRPerformance",
        "group": "11bb5de1.c6db42",
        "order": 7,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Performance",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ff0000",
            "#e6e600",
            "#00ff00"
        ],
        "seg1": "50",
        "seg2": "90",
        "className": "",
        "x": 1840,
        "y": 860,
        "wires": []
    },
    {
        "id": "43f44c85e4ecb673",
        "type": "ui_gauge",
        "z": "654ceb9908184e3c",
        "name": "gRQuality",
        "group": "11bb5de1.c6db42",
        "order": 8,
        "width": 5,
        "height": 4,
        "gtype": "gage",
        "title": "Quality",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ff0000",
            "#e6e600",
            "#00ff00"
        ],
        "seg1": "",
        "seg2": "",
        "x": 2480,
        "y": 860,
        "wires": []
    },
    {
        "id": "366246f1864ae96c",
        "type": "ui_chart",
        "z": "654ceb9908184e3c",
        "name": "",
        "group": "11bb5de1.c6db42",
        "order": 5,
        "width": 16,
        "height": 5,
        "label": "Downtime",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Sec.",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffff00",
            "#ff8040",
            "#0000ff",
            "#800080",
            "#ff0000",
            "#ff5151",
            "#c0c0c0",
            "#ff0000",
            "#ff0000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1940,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "686d4a4e5e079756",
        "type": "ui_gauge",
        "z": "654ceb9908184e3c",
        "name": "",
        "group": "b1608af4.f56c58",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "donut",
        "title": "Maintenance",
        "label": "Times",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "80",
        "x": 1770,
        "y": 1060,
        "wires": []
    },
    {
        "id": "c65a4c5964d5dfa3",
        "type": "ui_gauge",
        "z": "654ceb9908184e3c",
        "name": "",
        "group": "b1608af4.f56c58",
        "order": 10,
        "width": 2,
        "height": 2,
        "gtype": "donut",
        "title": "Wait Material",
        "label": "Times",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "80",
        "x": 1770,
        "y": 1100,
        "wires": []
    },
    {
        "id": "b0b3ca549b838e0c",
        "type": "ui_gauge",
        "z": "654ceb9908184e3c",
        "name": "",
        "group": "b1608af4.f56c58",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "donut",
        "title": "Quality Issue",
        "label": "Times",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1770,
        "y": 1140,
        "wires": []
    },
    {
        "id": "82ec8487b75ad500",
        "type": "ui_gauge",
        "z": "654ceb9908184e3c",
        "name": "",
        "group": "b1608af4.f56c58",
        "order": 12,
        "width": 2,
        "height": 2,
        "gtype": "donut",
        "title": "Change Over",
        "label": "Times",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1780,
        "y": 1020,
        "wires": []
    },
    {
        "id": "5019019eec074890",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set Values GR Top Bar 0",
        "func": "flow.set('vTM',0);\nflow.set('vWM',0);\nflow.set('vQI',0);\nflow.set('vCO',0);\nflow.set('vBT',0);\nflow.set('AccumDT',0);\n\nmsg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 1080,
        "wires": [
            [
                "ada74056d05bf254"
            ]
        ]
    },
    {
        "id": "a34fd23536567514",
        "type": "ui_gauge",
        "z": "654ceb9908184e3c",
        "name": "",
        "group": "24971256.5d07c6",
        "order": 11,
        "width": 8,
        "height": 3,
        "gtype": "gage",
        "title": "OEE Tracking",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ff0000",
            "#e6e600",
            "#00ff00"
        ],
        "seg1": "50",
        "seg2": "80",
        "className": "",
        "x": 2500,
        "y": 900,
        "wires": []
    },
    {
        "id": "ed17b35cb57704de",
        "type": "ui_template",
        "z": "654ceb9908184e3c",
        "group": "1afc4d72.0904bb",
        "name": "",
        "order": 16,
        "width": 0,
        "height": 0,
        "format": "<html>\n    <style>\n.md-toolbar-tools {\n    font-size: 30px;\n    letter-spacing: .005em;\n    box-sizing: border-box;\n    font-weight: 400;\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    width: 100%;\n    height: 64px;\n    max-height: 64px;\n    padding: 0 16px;\n    margin: 0;\n}\n:root {\n    --nr-dashboard-pageBackgroundColor: #092e69;\n    --nr-dashboard-pageTitlebarBackgroundColor: #097479;\n    --nr-dashboard-pageSidebarBackgroundColor: #092e69;\n    --nr-dashboard-groupTextColor: #0eb8c0;\n    --nr-dashboard-groupBackgroundColor: #333333;\n    --nr-dashboard-groupBorderColor: #555555;\n    --nr-dashboard-widgetTextColor: #eeeeee;\n    --nr-dashboard-widgetBackgroundColor: #097479;\n    --nr-dashboard-widgetBorderColor: #333333;\n    --nr-dashboard-widgetColor: #097479;\n    --nr-dashboard-widgetBgndColor: #333333;\n}\nbody.md-default-theme, body, html.md-default-theme, html {\n    color: rgba(0,0,0,0.87);\n    background-color: #092e69;\n}\n}\n</style>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 160,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "2edb9325916dae07",
        "type": "ui_template",
        "z": "654ceb9908184e3c",
        "group": "1afc4d72.0904bb",
        "name": "",
        "order": 18,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //console.log('Position 1');\n        //console.dir(scope);\n        scope.$watch('msg', function(msg) {\n            //console.log('Position 1');\n            //console.dir(msg);\n            var vChk = msg.payload;\n            if(vChk === 0){\n                var vS = new Date();\n                var vSS = vS.getSeconds();\n                if((vSS % 2) == 0){\n                    document.getElementById(\"nr-dashboard-toolbar\").style.backgroundColor = \"red\"; \n                    document.getElementById(\"OEE_Thai_SIIX_Co.,Ltd._Production_Output_cards\").style.backgroundColor = \"red\"; \n                }\n                else{\n                    document.getElementById(\"nr-dashboard-toolbar\").style.backgroundColor = \"gray\";\n                    document.getElementById(\"OEE_Thai_SIIX_Co.,Ltd._Production_Output_cards\").style.backgroundColor = \"gray\"; \n                }\n            }\n            else if(vChk === 1){\n                document.getElementById(\"nr-dashboard-toolbar\").style.backgroundColor = \"green\"; \n                document.getElementById(\"OEE_Thai_SIIX_Co.,Ltd._Production_Output_cards\").style.backgroundColor = \"green\";\n            }else {\n                document.getElementById(\"nr-dashboard-toolbar\").style.backgroundColor = \"orange\"; \n                document.getElementById(\"OEE_Thai_SIIX_Co.,Ltd._Production_Output_cards\").style.backgroundColor = \"orange\";\n                //DeepPink\n            }\n        \n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1120,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "6cb3252fb576edd0",
        "type": "http request",
        "z": "654ceb9908184e3c",
        "name": "Line Noti MT",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1350,
        "y": 1440,
        "wires": [
            [
                "a3693c24b5eaf3fe"
            ]
        ]
    },
    {
        "id": "8be56b8d40e3a521",
        "type": "http request",
        "z": "654ceb9908184e3c",
        "name": "Line Noti WM",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1290,
        "y": 1860,
        "wires": [
            [
                "a3693c24b5eaf3fe"
            ]
        ]
    },
    {
        "id": "1f0b135eff2514af",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "WM Line",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\n\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\n\nvar vStatus = \"Wait Material\";\nmsg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer faq1r52b8xPbjpFp2AvYx50xrb19x3FnSXTvFWTutAJ'};\nmsg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nLine::\" + vLine + \"\\nStatus::\" + vStatus + \"\\n\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 1860,
        "wires": [
            [
                "8be56b8d40e3a521"
            ]
        ]
    },
    {
        "id": "79366cc10bf889c1",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "QI Line",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\n\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\n\nvar vStatus = \"Quality Issue\";\nmsg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer lsYvxgnWE8gvpFjNo7iTMUMW2Y3llIcGDlt3c3bp9cv'};\nmsg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nLine::\" + vLine + \"\\nStatus::\" + vStatus + \"\\n\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1160,
        "y": 2040,
        "wires": [
            [
                "2058553afc93e9cf"
            ]
        ]
    },
    {
        "id": "2058553afc93e9cf",
        "type": "http request",
        "z": "654ceb9908184e3c",
        "name": "Line Noti QI",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1330,
        "y": 2040,
        "wires": [
            [
                "a3693c24b5eaf3fe"
            ]
        ]
    },
    {
        "id": "0c184ca416ad17b6",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "CO Line",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\n\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\n\nvar vStatus = \"Change Over\";\nmsg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer a9z3uYeAJ4sUKwwifRFyW2XjfzNgS5xKtfEStlW0Fw6'};\nmsg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nLine::\" + vLine + \"\\nStatus::\" + vStatus + \"\\n\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1160,
        "y": 2180,
        "wires": [
            [
                "03a33ab44e68f7d6"
            ]
        ]
    },
    {
        "id": "03a33ab44e68f7d6",
        "type": "http request",
        "z": "654ceb9908184e3c",
        "name": "Line Noti CO",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1330,
        "y": 2180,
        "wires": [
            [
                "a3693c24b5eaf3fe"
            ]
        ]
    },
    {
        "id": "55a7e929d4a5606d",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "24971256.5d07c6",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "lBStatus",
        "label": "Status :: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 1640,
        "y": 1240,
        "wires": []
    },
    {
        "id": "cbbf615190a11b86",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set Issue",
        "func": "let vS = msg.payload;//flow.get('vAlert');\nvar msg1 = {};\nlet vStatus = \"\";\n\nswitch(vS) {\n    case 0 :\n        msg.payload = \"Stop\";\n        msg1.payload = 0;\n        vStatus = \"Stop\";\n    break;\n    case 1 :\n        msg.payload = \"Normal\";\n        msg1.payload = 1;\n        vStatus = \"Normal\";\n    break;\n    case 2 :\n        msg.payload = \"Maintenance\";\n        msg1.payload = 2;\n        vStatus = \"Maintenance\";\n    break;\n    case 3 :\n        msg.payload = \"Wait Material\";\n        msg1.payload = 3;\n        vStatus = \"Stop\";\n    break;\n    case 4 :\n        msg.payload = \"Quality Issue\";\n        msg1.payload = 4;\n        vStatus = \"Quality Issue\";\n    break;\n    case 5 :\n        msg.payload = \"Change Over\";\n        msg1.payload = 5;\n        vStatus = \"Change Over\";\n    break;\n    case 6 :\n        msg.payload = \"Brakes Time\";\n        msg1.payload = 6;\n        vStatus = \"Brakes Time\";\n    break;\n    case 7 :\n        msg.payload = \"Plan Stop\";\n        msg1.payload = 7;\n        vStatus = \"Plan Stop\";\n    break;\n    case 8 :\n        msg.payload = \"New Model\";\n        msg1.payload = 8;\n        vStatus = \"New Model\";\n    break;\n}\n\nflow.set(\"vNotiStatus\",vStatus);\n\nreturn [msg,msg1];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 1280,
        "wires": [
            [
                "55a7e929d4a5606d",
                "c9988504b9d5db07"
            ],
            [
                "4fa273dde9689668"
            ]
        ]
    },
    {
        "id": "aaa9605fd599e092",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Cal STDOutput&TotalTime",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\n\nlet vPriece = flow.get('vPriece');\nlet vTStartDate = flow.get('vTStartDate');\n\nconst months = {\n  0: '01',\n  1: '02',\n  2: '03',\n  3: '04',\n  4: '05',\n  5: '06',\n  6: '07',\n  7: '08',\n  8: '09',\n  9: '10',\n  10: '11',\n  11: '12'\n}\nvar msg1 = {};\nlet vSDTCT = flow.get('vSTDCT');\nlet lDD = Number(DD);\n\nvar vStartDate = YY + \"-\" + months[MM] + \"-\" + lDD + \" 19:00:00\"; \n//var vStartDate = vTStartDate;\nvar vTUpdateDate = flow.get('vTUpdateDate');\n\nlet tC = new Date(vStartDate);\nlet tS = new Date(vTStartDate);\n\nlet ttC = new Date();\nttC = tC.setDate(tC.getDate() + (-1));\nttC = new Date(ttC);\n\nlet t1 = (tC > tS) ? tC : tS;\nlet t2 = new Date();\n\nlet dif = t2.getTime() - t1.getTime();\n\nlet Seconds_from_T1_to_T2 = dif / 1000;\nlet Seconds_Between_Dates = Math.abs(Seconds_from_T1_to_T2);\nlet Sec = Math.ceil(Seconds_Between_Dates);\n\nlet vTarget =  Math.ceil(Sec/vSDTCT);\n\nflow.set('vTotalTime',Sec);\nflow.set('vTarget',vTarget);\nmsg.payload = vTarget;\n//msg1.payload = t1;\n\nreturn msg;//[msg,msg1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 200,
        "wires": [
            [
                "419e044f49d2262c"
            ]
        ]
    },
    {
        "id": "786ca2b78ee2fcb0",
        "type": "ui_gauge",
        "z": "654ceb9908184e3c",
        "name": "gRLosses",
        "group": "b1608af4.f56c58",
        "order": 8,
        "width": 2,
        "height": 2,
        "gtype": "donut",
        "title": "Losses",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ffff00",
            "#ff8000",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "50",
        "className": "",
        "x": 2260,
        "y": 700,
        "wires": []
    },
    {
        "id": "088798d457a7ea2f",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Cal Losses",
        "func": "let vACTQTY = flow.get('vACTQTY');\nlet vTarget = flow.get('vTarget');\n\nlet vYL = ((Number(vTarget) - Number(vACTQTY))/Number(vTarget)) * 100;\n\nif(vYL <= 0){\n    vYL = 0;\n}\n\nmsg.payload = vYL.toFixed(2);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1990,
        "y": 700,
        "wires": [
            [
                "786ca2b78ee2fcb0"
            ]
        ]
    },
    {
        "id": "a454bb40e75db741",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Chart DownTime",
        "func": "let vPriece = flow.get('vPriece');\n\nlet cQty19 = flow.get('cQty19');\ncQty19 = (cQty19 === undefined) ? 0: Math.ceil(cQty19 * vPriece); \nlet cQty20 = flow.get('cQty20');\ncQty20 = (cQty20 === undefined) ? 0: Math.ceil(cQty20 * vPriece);\nlet cQty21 = flow.get('cQty21');\ncQty21 = (cQty21 === undefined) ? 0: Math.ceil(cQty21 * vPriece);\nlet cQty22 = flow.get('cQty22');\ncQty22 = (cQty22 === undefined) ? 0: Math.ceil(cQty22 * vPriece);\nlet cQty23 = flow.get('cQty23');\ncQty23 = (cQty23 === undefined) ? 0: Math.ceil(cQty23 * vPriece);\nlet cQty00 = flow.get('cQty00');\ncQty00 = (cQty00 === undefined) ? 0: Math.ceil(cQty00 * vPriece);\nlet cQty01 = flow.get('cQty01');\ncQty01 = (cQty01 === undefined) ? 0: Math.ceil(cQty01 * vPriece);\nlet cQty02 = flow.get('cQty02');\ncQty02 = (cQty02 === undefined) ? 0: Math.ceil(cQty02 * vPriece);\nlet cQty03 = flow.get('cQty03');\ncQty03 = (cQty03 === undefined) ? 0: Math.ceil(cQty03 * vPriece);\nlet cQty04 = flow.get('cQty04');\ncQty04 = (cQty04 === undefined) ? 0: Math.ceil(cQty04 * vPriece);\nlet cQty05 = flow.get('cQty05');\ncQty05 = (cQty05 === undefined) ? 0: Math.ceil(cQty05 * vPriece);\nlet cQty06 = flow.get('cQty06');\ncQty06 = (cQty06 === undefined) ? 0: Math.ceil(cQty06 * vPriece);\nlet cQty07 = flow.get('cQty07');\ncQty07 = (cQty07 === undefined) ? 0: Math.ceil(cQty07 * vPriece);\nlet cQty08 = flow.get('cQty08');\ncQty08 = (cQty08 === undefined) ? 0: Math.ceil(cQty08 * vPriece);\nlet cQty09 = flow.get('cQty09');\ncQty09 = (cQty09 === undefined) ? 0: Math.ceil(cQty09 * vPriece);\nlet cQty10 = flow.get('cQty10');\ncQty10 = (cQty10 === undefined) ? 0: Math.ceil(cQty10 * vPriece);\nlet cQty11 = flow.get('cQty11');\ncQty11 = (cQty11 === undefined) ? 0: Math.ceil(cQty11 * vPriece);\nlet cQty12 = flow.get('cQty12');\ncQty12 = (cQty12 === undefined) ? 0: Math.ceil(cQty12 * vPriece);\nlet cQty13 = flow.get('cQty13');\ncQty13 = (cQty13 === undefined) ? 0: Math.ceil(cQty13 * vPriece);\nlet cQty14 = flow.get('cQty14');\ncQty14 = (cQty14 === undefined) ? 0: Math.ceil(cQty14 * vPriece);\nlet cQty15 = flow.get('cQty15');\ncQty15 = (cQty15 === undefined) ? 0: Math.ceil(cQty15 * vPriece);\nlet cQty16 = flow.get('cQty16');\ncQty16 = (cQty16 === undefined) ? 0: Math.ceil(cQty16 * vPriece);\nlet cQty17 = flow.get('cQty17');\ncQty17 = (cQty17 === undefined) ? 0: Math.ceil(cQty17 * vPriece);\nlet cQty18 = flow.get('cQty18');\ncQty18 = (cQty18 === undefined) ? 0: Math.ceil(cQty18 * vPriece);\n\nlet cDTCO19 = flow.get('cDTCO19');\ncDTCO19 = (cDTCO19 === undefined) ? 0: cDTCO19; \nlet cDTCO20 = flow.get('cDTCO20');\ncDTCO20 = (cDTCO20 === undefined) ? 0: cDTCO20;\nlet cDTCO21 = flow.get('cDTCO21');\ncDTCO21 = (cDTCO21 === undefined) ? 0: cDTCO21;\nlet cDTCO22 = flow.get('cDTCO22');\ncDTCO22 = (cDTCO22 === undefined) ? 0: cDTCO22;\nlet cDTCO23 = flow.get('cDTCO23');\ncDTCO23 = (cDTCO23 === undefined) ? 0: cDTCO23;\nlet cDTCO00 = flow.get('cDTCO00');\ncDTCO00 = (cDTCO00 === undefined) ? 0: cDTCO00;\nlet cDTCO01 = flow.get('cDTCO01');\ncDTCO01 = (cDTCO01 === undefined) ? 0: cDTCO01;\nlet cDTCO02 = flow.get('cDTCO02');\ncDTCO02 = (cDTCO02 === undefined) ? 0: cDTCO02;\nlet cDTCO03 = flow.get('cDTCO03');\ncDTCO03 = (cDTCO03 === undefined) ? 0: cDTCO03;\nlet cDTCO04 = flow.get('cDTCO04');\ncDTCO04 = (cDTCO04 === undefined) ? 0: cDTCO04;\nlet cDTCO05 = flow.get('cDTCO05');\ncDTCO05 = (cDTCO05 === undefined) ? 0: cDTCO05;\nlet cDTCO06 = flow.get('cDTCO06');\ncDTCO06 = (cDTCO06 === undefined) ? 0: cDTCO06;\nlet cDTCO07 = flow.get('cDTCO07');\ncDTCO07 = (cDTCO07 === undefined) ? 0: cDTCO07;\nlet cDTCO08 = flow.get('cDTCO08');\ncDTCO08 = (cDTCO08 === undefined) ? 0: cDTCO08;\nlet cDTCO09 = flow.get('cDTCO09');\ncDTCO09 = (cDTCO09 === undefined) ? 0: cDTCO09;\nlet cDTCO10 = flow.get('cDTCO10');\ncDTCO10 = (cDTCO10 === undefined) ? 0: cDTCO10;\nlet cDTCO11 = flow.get('cDTCO11');\ncDTCO11 = (cDTCO11 === undefined) ? 0: cDTCO11;\nlet cDTCO12 = flow.get('cDTCO12');\ncDTCO12 = (cDTCO12 === undefined) ? 0: cDTCO12;\nlet cDTCO13 = flow.get('cDTCO13');\ncDTCO13 = (cDTCO13 === undefined) ? 0: cDTCO13;\nlet cDTCO14 = flow.get('cDTCO14');\ncDTCO14 = (cDTCO14 === undefined) ? 0: cDTCO14;\nlet cDTCO15 = flow.get('cDTCO15');\ncDTCO15 = (cDTCO15 === undefined) ? 0: cDTCO15;\nlet cDTCO16 = flow.get('cDTCO16');\ncDTCO16 = (cDTCO16 === undefined) ? 0: cDTCO16;\nlet cDTCO17 = flow.get('cDTCO17');\ncDTCO17 = (cDTCO17 === undefined) ? 0: cDTCO17;\nlet cDTCO18 = flow.get('cDTCO18');\ncDTCO18 = (cDTCO18 === undefined) ? 0: cDTCO18;\n\nlet cDTMT19 = flow.get('cDTMT19');\ncDTMT19 = (cDTMT19 === undefined) ? 0: cDTMT19; \nlet cDTMT20 = flow.get('cDTMT20');\ncDTMT20 = (cDTMT20 === undefined) ? 0: cDTMT20;\nlet cDTMT21 = flow.get('cDTMT21');\ncDTMT21 = (cDTMT21 === undefined) ? 0: cDTMT21;\nlet cDTMT22 = flow.get('cDTMT22');\ncDTMT22 = (cDTMT22 === undefined) ? 0: cDTMT22;\nlet cDTMT23 = flow.get('cDTMT23');\ncDTMT23 = (cDTMT23 === undefined) ? 0: cDTMT23;\nlet cDTMT00 = flow.get('cDTMT00');\ncDTMT00 = (cDTMT00 === undefined) ? 0: cDTMT00;\nlet cDTMT01 = flow.get('cDTMT01');\ncDTMT01 = (cDTMT01 === undefined) ? 0: cDTMT01;\nlet cDTMT02 = flow.get('cDTMT02');\ncDTMT02 = (cDTMT02 === undefined) ? 0: cDTMT02;\nlet cDTMT03 = flow.get('cDTMT03');\ncDTMT03 = (cDTMT03 === undefined) ? 0: cDTMT03;\nlet cDTMT04 = flow.get('cDTMT04');\ncDTMT04 = (cDTMT04 === undefined) ? 0: cDTMT04;\nlet cDTMT05 = flow.get('cDTMT05');\ncDTMT05 = (cDTMT05 === undefined) ? 0: cDTMT05;\nlet cDTMT06 = flow.get('cDTMT06');\ncDTMT06 = (cDTMT06 === undefined) ? 0: cDTMT06;\nlet cDTMT07 = flow.get('cDTMT07');\ncDTMT07 = (cDTMT07 === undefined) ? 0: cDTMT07;\nlet cDTMT08 = flow.get('cDTMT08');\ncDTMT08 = (cDTMT08 === undefined) ? 0: cDTMT08;\nlet cDTMT09 = flow.get('cDTMT09');\ncDTMT09 = (cDTMT09 === undefined) ? 0: cDTMT09;\nlet cDTMT10 = flow.get('cDTMT10');\ncDTMT10 = (cDTMT10 === undefined) ? 0: cDTMT10;\nlet cDTMT11 = flow.get('cDTMT11');\ncDTMT11 = (cDTMT11 === undefined) ? 0: cDTMT11;\nlet cDTMT12 = flow.get('cDTMT12');\ncDTMT12 = (cDTMT12 === undefined) ? 0: cDTMT12;\nlet cDTMT13 = flow.get('cDTMT13');\ncDTMT13 = (cDTMT13 === undefined) ? 0: cDTMT13;\nlet cDTMT14 = flow.get('cDTMT14');\ncDTMT14 = (cDTMT14 === undefined) ? 0: cDTMT14;\nlet cDTMT15 = flow.get('cDTMT15');\ncDTMT15 = (cDTMT15 === undefined) ? 0: cDTMT15;\nlet cDTMT16 = flow.get('cDTMT16');\ncDTMT16 = (cDTMT16 === undefined) ? 0: cDTMT16;\nlet cDTMT17 = flow.get('cDTMT17');\ncDTMT17 = (cDTMT17 === undefined) ? 0: cDTMT17;\nlet cDTMT18 = flow.get('cDTMT18');\ncDTMT18 = (cDTMT18 === undefined) ? 0: cDTMT18;\n\nlet cDTWM19 = flow.get('cDTWM19');\ncDTWM19 = (cDTWM19 === undefined) ? 0: cDTWM19; \nlet cDTWM20 = flow.get('cDTWM20');\ncDTWM20 = (cDTWM20 === undefined) ? 0: cDTWM20;\nlet cDTWM21 = flow.get('cDTWM21');\ncDTWM21 = (cDTWM21 === undefined) ? 0: cDTWM21;\nlet cDTWM22 = flow.get('cDTWM22');\ncDTWM22 = (cDTWM22 === undefined) ? 0: cDTWM22;\nlet cDTWM23 = flow.get('cDTWM23');\ncDTWM23 = (cDTWM23 === undefined) ? 0: cDTWM23;\nlet cDTWM00 = flow.get('cDTWM00');\ncDTWM00 = (cDTWM00 === undefined) ? 0: cDTWM00;\nlet cDTWM01 = flow.get('cDTWM01');\ncDTWM01 = (cDTWM01 === undefined) ? 0: cDTWM01;\nlet cDTWM02 = flow.get('cDTWM02');\ncDTWM02 = (cDTWM02 === undefined) ? 0: cDTWM02;\nlet cDTWM03 = flow.get('cDTWM03');\ncDTWM03 = (cDTWM03 === undefined) ? 0: cDTWM03;\nlet cDTWM04 = flow.get('cDTWM04');\ncDTWM04 = (cDTWM04 === undefined) ? 0: cDTWM04;\nlet cDTWM05 = flow.get('cDTWM05');\ncDTWM05 = (cDTWM05 === undefined) ? 0: cDTWM05;\nlet cDTWM06 = flow.get('cDTWM06');\ncDTWM06 = (cDTWM06 === undefined) ? 0: cDTWM06;\nlet cDTWM07 = flow.get('cDTWM07');\ncDTWM07 = (cDTWM07 === undefined) ? 0: cDTWM07;\nlet cDTWM08 = flow.get('cDTWM08');\ncDTWM08 = (cDTWM08 === undefined) ? 0: cDTWM08;\nlet cDTWM09 = flow.get('cDTWM09');\ncDTWM09 = (cDTWM09 === undefined) ? 0: cDTWM09;\nlet cDTWM10 = flow.get('cDTWM10');\ncDTWM10 = (cDTWM10 === undefined) ? 0: cDTWM10;\nlet cDTWM11 = flow.get('cDTWM11');\ncDTWM11 = (cDTWM11 === undefined) ? 0: cDTWM11;\nlet cDTWM12 = flow.get('cDTWM12');\ncDTWM12 = (cDTWM12 === undefined) ? 0: cDTWM12;\nlet cDTWM13 = flow.get('cDTWM13');\ncDTWM13 = (cDTWM13 === undefined) ? 0: cDTWM13;\nlet cDTWM14 = flow.get('cDTWM14');\ncDTWM14 = (cDTWM14 === undefined) ? 0: cDTWM14;\nlet cDTWM15 = flow.get('cDTWM15');\ncDTWM15 = (cDTWM15 === undefined) ? 0: cDTWM15;\nlet cDTWM16 = flow.get('cDTWM16');\ncDTWM16 = (cDTWM16 === undefined) ? 0: cDTWM16;\nlet cDTWM17 = flow.get('cDTWM17');\ncDTWM17 = (cDTWM17 === undefined) ? 0: cDTWM17;\nlet cDTWM18 = flow.get('cDTWM18');\ncDTWM18 = (cDTWM18 === undefined) ? 0: cDTWM18;\n\nlet cDTQI19 = flow.get('cDTQI19');\ncDTQI19 = (cDTQI19 === undefined) ? 0: cDTQI19; \nlet cDTQI20 = flow.get('cDTQI20');\ncDTQI20 = (cDTQI20 === undefined) ? 0: cDTQI20;\nlet cDTQI21 = flow.get('cDTQI21');\ncDTQI21 = (cDTQI21 === undefined) ? 0: cDTQI21;\nlet cDTQI22 = flow.get('cDTQI22');\ncDTQI22 = (cDTQI22 === undefined) ? 0: cDTQI22;\nlet cDTQI23 = flow.get('cDTQI23');\ncDTQI23 = (cDTQI23 === undefined) ? 0: cDTQI23;\nlet cDTQI00 = flow.get('cDTQI00');\ncDTQI00 = (cDTQI00 === undefined) ? 0: cDTQI00;\nlet cDTQI01 = flow.get('cDTQI01');\ncDTQI01 = (cDTQI01 === undefined) ? 0: cDTQI01;\nlet cDTQI02 = flow.get('cDTQI02');\ncDTQI02 = (cDTQI02 === undefined) ? 0: cDTQI02;\nlet cDTQI03 = flow.get('cDTQI03');\ncDTQI03 = (cDTQI03 === undefined) ? 0: cDTQI03;\nlet cDTQI04 = flow.get('cDTQI04');\ncDTQI04 = (cDTQI04 === undefined) ? 0: cDTQI04;\nlet cDTQI05 = flow.get('cDTQI05');\ncDTQI05 = (cDTQI05 === undefined) ? 0: cDTQI05;\nlet cDTQI06 = flow.get('cDTQI06');\ncDTQI06 = (cDTQI06 === undefined) ? 0: cDTQI06;\nlet cDTQI07 = flow.get('cDTQI07');\ncDTQI07 = (cDTQI07 === undefined) ? 0: cDTQI07;\nlet cDTQI08 = flow.get('cDTQI08');\ncDTQI08 = (cDTQI08 === undefined) ? 0: cDTQI08;\nlet cDTQI09 = flow.get('cDTQI09');\ncDTQI09 = (cDTQI09 === undefined) ? 0: cDTQI09;\nlet cDTQI10 = flow.get('cDTQI10');\ncDTQI10 = (cDTQI10 === undefined) ? 0: cDTQI10;\nlet cDTQI11 = flow.get('cDTQI11');\ncDTQI11 = (cDTQI11 === undefined) ? 0: cDTQI11;\nlet cDTQI12 = flow.get('cDTQI12');\ncDTQI12 = (cDTQI12 === undefined) ? 0: cDTQI12;\nlet cDTQI13 = flow.get('cDTQI13');\ncDTQI13 = (cDTQI13 === undefined) ? 0: cDTQI13;\nlet cDTQI14 = flow.get('cDTQI14');\ncDTQI14 = (cDTQI14 === undefined) ? 0: cDTQI14;\nlet cDTQI15 = flow.get('cDTQI15');\ncDTQI15 = (cDTQI15 === undefined) ? 0: cDTQI15;\nlet cDTQI16 = flow.get('cDTQI16');\ncDTQI16 = (cDTQI16 === undefined) ? 0: cDTQI16;\nlet cDTQI17 = flow.get('cDTQI17');\ncDTQI17 = (cDTQI17 === undefined) ? 0: cDTQI17;\nlet cDTQI18 = flow.get('cDTQI18');\ncDTQI18 = (cDTQI18 === undefined) ? 0: cDTQI18;\n\nlet vSDTCT = flow.get('vSTDCT');\n\nlet cDTUN19 = flow.get('cDTUN19');\ncDTUN19 = (cDTUN19 === undefined || flow.get('cQty19') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty19') * vPriece) * vSDTCT)) - (cDTCO19 + cDTWM19 + cDTMT19 + cDTQI19); \ncDTUN19 = (cDTUN19 < 0) ? 0 : cDTUN19;\nlet cDTUN20 = flow.get('cDTUN20');\ncDTUN20 = (cDTUN20 === undefined || flow.get('cQty20') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty20') * vPriece) * vSDTCT)) - (cDTCO20 + cDTWM20 + cDTMT20 + cDTQI20);\ncDTUN20 = (cDTUN20 < 0) ? 0 : cDTUN20;\nlet cDTUN21 = flow.get('cDTUN21');\ncDTUN21 = (cDTUN21 === undefined || flow.get('cQty21') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty21') * vPriece) * vSDTCT)) - (cDTCO21 + cDTWM21 + cDTMT21 + cDTQI21);\ncDTUN21 = (cDTUN21 < 0) ? 0 : cDTUN21;\nlet cDTUN22 = flow.get('cDTUN22');\ncDTUN22 = (cDTUN22 === undefined || flow.get('cQty22') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty22') * vPriece) * vSDTCT)) - (cDTCO22 + cDTWM22 + cDTMT22 + cDTQI22);\ncDTUN22 = (cDTUN22 < 0) ? 0 : cDTUN22;\nlet cDTUN23 = flow.get('cDTUN23');\ncDTUN23 = (cDTUN23 === undefined || flow.get('cQty23') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty23') * vPriece) * vSDTCT)) - (cDTCO23 + cDTWM23 + cDTMT23 + cDTQI23);\ncDTUN23 = (cDTUN23 < 0) ? 0 : cDTUN23;\nlet cDTUN00 = flow.get('cDTUN00');\ncDTUN00 = (cDTUN00 === undefined || flow.get('cQty00') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty00') * vPriece) * vSDTCT)) - (cDTCO00 + cDTWM00 + cDTMT00 + cDTQI00);\ncDTUN00 = (cDTUN00 < 0) ? 0 : cDTUN00;\nlet cDTUN01 = flow.get('cDTUN01');\ncDTUN01 = (cDTUN01 === undefined || flow.get('cQty01') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty01') * vPriece) * vSDTCT)) - (cDTCO01 + cDTWM01 + cDTMT01 + cDTQI01);\ncDTUN01 = (cDTUN01 < 0) ? 0 : cDTUN01;\nlet cDTUN02 = flow.get('cDTUN02');\ncDTUN02 = (cDTUN02 === undefined || flow.get('cQty02') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty02') * vPriece) * vSDTCT)) - (cDTCO02 + cDTWM02 + cDTMT02 + cDTQI02);\ncDTUN02 = (cDTUN02 < 0) ? 0 : cDTUN02;\nlet cDTUN03 = flow.get('cDTUN03');\ncDTUN03 = (cDTUN03 === undefined || flow.get('cQty03') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty03') * vPriece) * vSDTCT)) - (cDTCO03 + cDTWM03 + cDTMT03 + cDTQI03);\ncDTUN03 = (cDTUN03 < 0) ? 0 : cDTUN03;\nlet cDTUN04 = flow.get('cDTUN04');\ncDTUN04 = (cDTUN04 === undefined || flow.get('cQty04') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty04') * vPriece) * vSDTCT)) - (cDTCO04 + cDTWM04 + cDTMT04 + cDTQI04);\ncDTUN04 = (cDTUN04 < 0) ? 0 : cDTUN04;\nlet cDTUN05 = flow.get('cDTUN05');\ncDTUN05 = (cDTUN05 === undefined || flow.get('cQty05') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty05') * vPriece) * vSDTCT)) - (cDTCO05 + cDTWM05 + cDTMT05 + cDTQI05);\ncDTUN05 = (cDTUN05 < 0) ? 0 : cDTUN05;\nlet cDTUN06 = flow.get('cDTUN06');\ncDTUN06 = (cDTUN06 === undefined || flow.get('cQty06') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty06') * vPriece) * vSDTCT)) - (cDTCO06 + cDTWM06 + cDTMT06 + cDTQI06);\ncDTUN06 = (cDTUN06 < 0) ? 0 : cDTUN06;\nlet cDTUN07 = flow.get('cDTUN07');\ncDTUN07 = (cDTUN07 === undefined || flow.get('cQty07') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty07') * vPriece) * vSDTCT)) - (cDTCO07 + cDTWM07 + cDTMT07 + cDTQI07);\ncDTUN07 = (cDTUN07 < 0) ? 0 : cDTUN07;\nlet cDTUN08 = flow.get('cDTUN08');\ncDTUN08 = (cDTUN08 === undefined || flow.get('cQty08') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty08') * vPriece) * vSDTCT)) - (cDTCO08 + cDTWM08 + cDTMT08 + cDTQI08);\ncDTUN08 = (cDTUN08 < 0) ? 0 : cDTUN08;\nlet cDTUN09 = flow.get('cDTUN09');\ncDTUN09 = (cDTUN09 === undefined || flow.get('cQty09') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty09') * vPriece) * vSDTCT)) - (cDTCO09 + cDTWM09 + cDTMT09 + cDTQI09);\ncDTUN09 = (cDTUN09 < 0) ? 0 : cDTUN09;\nlet cDTUN10 = flow.get('cDTUN10');\ncDTUN10 = (cDTUN10 === undefined || flow.get('cQty10') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty10') * vPriece) * vSDTCT)) - (cDTCO10 + cDTWM10 + cDTMT10 + cDTQI10);\ncDTUN10 = (cDTUN10 < 0) ? 0 : cDTUN10;\nlet cDTUN11 = flow.get('cDTUN11');\ncDTUN11 = (cDTUN11 === undefined || flow.get('cQty11') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty11') * vPriece) * vSDTCT)) - (cDTCO11 + cDTWM11 + cDTMT11 + cDTQI11);\ncDTUN11 = (cDTUN11 < 0) ? 0 : cDTUN11;\nlet cDTUN12 = flow.get('cDTUN12');\ncDTUN12 = (cDTUN12 === undefined || flow.get('cQty12') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty12') * vPriece) * vSDTCT)) - (cDTCO12 + cDTWM12 + cDTMT12 + cDTQI12);\ncDTUN12 = (cDTUN12 < 0) ? 0 : cDTUN12;\nlet cDTUN13 = flow.get('cDTUN13');\ncDTUN13 = (cDTUN13 === undefined || flow.get('cQty13') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty13') * vPriece) * vSDTCT)) - (cDTCO13 + cDTWM13 + cDTMT13 + cDTQI13);\ncDTUN13 = (cDTUN13 < 0) ? 0 : cDTUN13;\nlet cDTUN14 = flow.get('cDTUN14');\ncDTUN14 = (cDTUN14 === undefined || flow.get('cQty14') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty14') * vPriece) * vSDTCT)) - (cDTCO14 + cDTWM14 + cDTMT14 + cDTQI14);\ncDTUN14 = (cDTUN14 < 0) ? 0 : cDTUN14;\nlet cDTUN15 = flow.get('cDTUN15');\ncDTUN15 = (cDTUN15 === undefined || flow.get('cQty15') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty15') * vPriece) * vSDTCT)) - (cDTCO15 + cDTWM15 + cDTMT15 + cDTQI15);\ncDTUN15 = (cDTUN15 < 0) ? 0 : cDTUN15;\nlet cDTUN16 = flow.get('cDTUN16');\ncDTUN16 = (cDTUN16 === undefined || flow.get('cQty16') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty16') * vPriece) * vSDTCT)) - (cDTCO16 + cDTWM16 + cDTMT16 + cDTQI16);\ncDTUN16 = (cDTUN16 < 0) ? 0 : cDTUN16;\nlet cDTUN17 = flow.get('cDTUN17');\ncDTUN17 = (cDTUN17 === undefined || flow.get('cQty17') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty17') * vPriece) * vSDTCT)) - (cDTCO17 + cDTWM17 + cDTMT17 + cDTQI17);\ncDTUN17 = (cDTUN17 < 0) ? 0 : cDTUN17;\nlet cDTUN18 = flow.get('cDTUN18');\ncDTUN18 = (cDTUN18 === undefined || flow.get('cQty18') == 0) ? 0: (3600 - Math.ceil((flow.get('cQty18') * vPriece) * vSDTCT)) - (cDTCO18 + cDTWM18 + cDTMT18 + cDTQI18);\ncDTUN18 = (cDTUN18 < 0) ? 0 : cDTUN18;\n\nlet vSerial = \"DT: \";\nvar BarChart = [\n    {\n        \"series\" : [\"Change Over (Sec):\",\"Maintenance (Sec):\",\"Wait Material (Sec):\",\"Quality Issue (Sec):\",\"UnKnow (Sec):\"],\n        \"data\": [[cDTCO19,cDTCO20,cDTCO21,cDTCO22,cDTCO23,cDTCO00,cDTCO01,cDTCO02,cDTCO03,cDTCO04,cDTCO05,cDTCO06,cDTCO07,cDTCO08,cDTCO09,cDTCO10,cDTCO11,cDTCO12,cDTCO13,cDTCO14,cDTCO15,cDTCO16,cDTCO17,cDTCO18]\n                ,[cDTMT19,cDTMT20,cDTMT21,cDTMT22,cDTMT23,cDTMT00,cDTMT01,cDTMT02,cDTMT03,cDTMT04,cDTMT05,cDTMT06,cDTMT07,cDTMT08,cDTMT09,cDTMT10,cDTMT11,cDTMT12,cDTMT13,cDTMT14,cDTMT15,cDTMT16,cDTMT17,cDTMT18]\n                ,[cDTWM19,cDTWM20,cDTWM21,cDTWM22,cDTWM23,cDTWM00,cDTWM01,cDTWM02,cDTWM03,cDTWM04,cDTWM05,cDTWM06,cDTWM07,cDTWM08,cDTWM09,cDTWM10,cDTWM11,cDTWM12,cDTWM13,cDTWM14,cDTWM15,cDTWM16,cDTWM17,cDTWM18]\n                ,[cDTQI19,cDTQI20,cDTQI21,cDTQI22,cDTQI23,cDTQI00,cDTQI01,cDTQI02,cDTQI03,cDTQI04,cDTQI05,cDTQI06,cDTQI07,cDTQI08,cDTQI09,cDTQI10,cDTQI11,cDTQI12,cDTQI13,cDTQI14,cDTQI15,cDTQI16,cDTQI17,cDTQI18]\n                ,[cDTUN19,cDTUN20,cDTUN21,cDTUN22,cDTUN23,cDTUN00,cDTUN01,cDTUN02,cDTUN03,cDTUN04,cDTUN05,cDTUN06,cDTUN07,cDTUN08,cDTUN09,cDTUN10,cDTUN11,cDTUN12,cDTUN13,cDTUN14,cDTUN15,cDTUN16,cDTUN17,cDTUN18]],\n        \"labels\" : [\"19\",\"20\",\"21\",\"22\",\"23\",\"00\",\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\"]\n    }\n]\n\nmsg.payload = BarChart;\n\nmsg.ui_control = {\n     options: {\n        scales: {\n            xAxes: [{\n                stacked: true\n            }],\n            yAxes: [{\n                stacked: true\n            }]\n        }\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 740,
        "wires": [
            [
                "7f674a8e040995a4"
            ]
        ]
    },
    {
        "id": "36fc653f9f1cf124",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Get Model Name",
        "func": "var vModel = msg.payload[0].ITEMDESC;\nvar vITEMCODE = msg.payload[0].ITEMCODE;\nflow.set('vModel',vModel);\nflow.set('vITEMCODE',vITEMCODE);\nflow.set('vChkModel',1);\nmsg.payload = vModel;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 400,
        "wires": [
            [
                "3893653d060a5723",
                "31889196b32eaa98"
            ]
        ]
    },
    {
        "id": "b6382ccf485f2867",
        "type": "function",
        "z": "654ceb9908184e3c",
        "d": true,
        "name": "SQL Get PCB NG",
        "func": "let vLine = flow.get('vLine');\nlet vModel = flow.get('vModel');\nlet vSide = flow.get('vSide');\n\nlet aLine = vLine.split(\"-\");  \nlet pLine = aLine[1];\n\nvar t= \"EXEC [QualityData].[dbo].[STBL_GET_PCB_NG] \" + \"\\'\" + pLine + \"\\'\"  + \",\\'\" + vModel + \"\\'\" + \",\\'\" + vSide + \"\\'\";\n\nmsg.payload = t; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 300,
        "wires": [
            [
                "28ce5ad91bcb0cf7"
            ]
        ]
    },
    {
        "id": "28ce5ad91bcb0cf7",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "d": true,
        "mssqlCN": "64a947e8.aad318",
        "name": "SQL NG PCB",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 1140,
        "y": 300,
        "wires": [
            [
                "710c524fadf618ec"
            ]
        ]
    },
    {
        "id": "323dd9f9aa89ac7b",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "b1608af4.f56c58",
        "order": 6,
        "width": 2,
        "height": 2,
        "name": "tBNgPcb",
        "label": "NG PCB",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1540,
        "y": 300,
        "wires": []
    },
    {
        "id": "710c524fadf618ec",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set NG PCB",
        "func": "let vNGPCB;\n//let vPriece = flow.get('vPriece');\n//try {\n//  vNGPCB = msg.payload[0].DefectPCB;\n//  vNGPCB = vNGPCB * vPriece;\n//}\n//catch(err) {\n//  vNGPCB = 0;\n//}\nvNGPCB = 0;\nflow.set('vNGPCB',vNGPCB);\n\nmsg.payload = vNGPCB;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 300,
        "wires": [
            [
                "323dd9f9aa89ac7b"
            ]
        ]
    },
    {
        "id": "0aa8f9c7bc868d34",
        "type": "ui_button",
        "z": "654ceb9908184e3c",
        "name": "bTTechnicial",
        "group": "24971256.5d07c6",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "<B>Technicial</B>",
        "tooltip": "Test",
        "color": "black",
        "bgcolor": "orange",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "Technician",
        "topicType": "str",
        "x": 230,
        "y": 1540,
        "wires": [
            [
                "89d8d4518bb9c222",
                "c503ccdd59a00b99"
            ]
        ]
    },
    {
        "id": "be54754f1730fcee",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "vBT GR Data",
        "func": "var cBT = flow.get('vBT');\ncBT = (cBT === undefined) ? 0: cBT;\n\nvar vCount = msg.payload;\nvar sBT = Number(cBT) + Number(vCount);\n\nflow.set('vBT',sBT);\nmsg.payload = sBT;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 2260,
        "wires": [
            [
                "de59b65d42b6868d"
            ]
        ]
    },
    {
        "id": "654cf5d7fcfb06af",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "11bb5de1.c6db42",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "tBCustomer",
        "label": "Customer :: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 1470,
        "y": 440,
        "wires": []
    },
    {
        "id": "cbe5c757918cd827",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Get Customer Code",
        "func": "var vCus = msg.payload[0].WBS_Element;\nflow.set('vCus',vCus);\n\nvar vSQLTexe = \"EXEC [siix_check_serial].[dbo].[STBL_GET_CUS_NAME] \\'\" + vCus + \"\\'\";\nmsg.payload = vSQLTexe;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 440,
        "wires": [
            [
                "b86f37c55ae6d7eb"
            ]
        ]
    },
    {
        "id": "b86f37c55ae6d7eb",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "64a947e8.aad318",
        "name": "SQL 228",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 1120,
        "y": 440,
        "wires": [
            [
                "661f7a0276a76e50"
            ]
        ]
    },
    {
        "id": "661f7a0276a76e50",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Get Customer",
        "func": "var vCustomer = msg.payload[0].WBS_Element;\nflow.set('vCustomer',vCustomer);\nmsg.payload = vCustomer;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 440,
        "wires": [
            [
                "654cf5d7fcfb06af"
            ]
        ]
    },
    {
        "id": "1fea0bdde5bd23f6",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "Link When Select Line",
        "links": [
            "c307e19d106b352c",
            "35674add664840a3",
            "59bde37b351f93eb",
            "50cef594e3c07d86"
        ],
        "x": 595,
        "y": 60,
        "wires": []
    },
    {
        "id": "c307e19d106b352c",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "Link When Select Line",
        "links": [
            "1fea0bdde5bd23f6",
            "c561e40d.e01458",
            "533721af.9db29",
            "e2566ab.6ce6418",
            "662054ef.092604"
        ],
        "x": 875,
        "y": 1080,
        "wires": [
            [
                "5019019eec074890"
            ]
        ]
    },
    {
        "id": "3893653d060a5723",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "55304e61.b32f58",
            "af5670edfb66a798",
            "e6820fc694a2467a",
            "e3685d8ece07d70e"
        ],
        "x": 1035,
        "y": 380,
        "wires": []
    },
    {
        "id": "af5670edfb66a798",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "18b6b828.63f37",
            "3893653d060a5723",
            "8c9813b38915d835"
        ],
        "x": 1755,
        "y": 260,
        "wires": [
            [
                "bde575a66b179fe9",
                "c84789924f4554bd"
            ]
        ]
    },
    {
        "id": "49505e975644f653",
        "type": "function",
        "z": "654ceb9908184e3c",
        "d": true,
        "name": "SQL STBL_OEE_GET_LINE_DETAIL",
        "func": "vLine = flow.get('vLine');\n//msg.payload = vLine;\nlet vProcess = 'Reflow'\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OEE_GET_LINE_DETAIL] \" + \"\\'\" + vLine + \"\\'\" + \",\\'\" + vProcess + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 40,
        "wires": [
            [
                "7dfca79093a77ce9"
            ]
        ]
    },
    {
        "id": "7dfca79093a77ce9",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "d": true,
        "mssqlCN": "",
        "name": "SQL Main Line Data",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 1740,
        "y": 40,
        "wires": [
            [
                "21050559654ebd71"
            ]
        ]
    },
    {
        "id": "21050559654ebd71",
        "type": "function",
        "z": "654ceb9908184e3c",
        "d": true,
        "name": "Get Data Main",
        "func": "flow.set('vTLine',msg.payload[0].Line);\nflow.set('vTModel',msg.payload[0].Model);\nflow.set('vTQty',msg.payload[0].Qty);\nflow.set('vTQtyOK',msg.payload[0].OKQty);\nflow.set('vTQtyFC',msg.payload[0].NGQty);\nflow.set('vTClycleTime',msg.payload[0].ClycleTime);\nflow.set('vTStartDate',msg.payload[0].StartDate);\nflow.set('vTUpdateDate',msg.payload[0].UpdateDate);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "b0a880936df4ee05",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "GET Data CT",
        "func": "let vItemCD = flow.get('vITEMCODE');\nvar vTLine =  flow.get('vTLine');\nlet vSide = flow.get('vSide');\n\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_GET_CT_SIDE] \" + \"\\'\" + vTLine + \"\\',\" + \"\\'\" + vItemCD + \"\\',\" + \"\\'\" + vSide + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 520,
        "wires": [
            [
                "1d4679b7016fb34b"
            ]
        ]
    },
    {
        "id": "0839c5c3ee264653",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "11bb5de1.c6db42",
        "order": 3,
        "width": 4,
        "height": 1,
        "name": "tBItemCD",
        "label": "SAP CD :: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 1460,
        "y": 400,
        "wires": []
    },
    {
        "id": "31889196b32eaa98",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Get SAP CD",
        "func": "var vItemCD = flow.get('vITEMCODE');\nmsg.payload = vItemCD;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1270,
        "y": 400,
        "wires": [
            [
                "0839c5c3ee264653"
            ]
        ]
    },
    {
        "id": "4cccd9e991b579c8",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "UPD Tracking Monitor",
        "func": "let vLine = flow.get('vLine');\nlet vTracking = flow.get('vTracking');\n//msg.payload[0].SEIBAN_CD;\nlet vSQLTexe = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_TRACKING_MONITOR] \\'\" + vTracking + \"\\',\" + \"\\'\" + vLine + \"\\'\";\nmsg.payload = vSQLTexe;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 480,
        "wires": [
            [
                "0cb9a428b44b6bc8"
            ]
        ]
    },
    {
        "id": "0cb9a428b44b6bc8",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 1120,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "5daa3691f56cc466",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "4cd510db.88fc48",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "Pcs per PCB",
        "label": "Pcs/PCB ::",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1910,
        "y": 500,
        "wires": []
    },
    {
        "id": "1d4679b7016fb34b",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1120,
        "y": 520,
        "wires": [
            [
                "1cc8927be0bab977"
            ]
        ]
    },
    {
        "id": "1cc8927be0bab977",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "GET Data CT Output",
        "func": "let vData = msg.payload;\n\nif(vData.length > 0)\n{\n    flow.set('vCT',msg.payload[0].CycleTime);\n    flow.set('vSTDCT',msg.payload[0].CycleTime);\n    flow.set('vPriece',msg.payload[0].Priece);\n}\nelse{\n    flow.set('vCT','');\n    flow.set('vSTDCT','');\n    flow.set('vPriece','');\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 520,
        "wires": [
            [
                "216086e2f89ac4d2",
                "05c0b0ae729f5773",
                "1424de76b8e76101"
            ]
        ]
    },
    {
        "id": "05c0b0ae729f5773",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "GET Pcs//PCB",
        "func": "let vPriece = flow.get('vPriece');\nmsg.payload = vPriece;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1740,
        "y": 500,
        "wires": [
            [
                "5daa3691f56cc466"
            ]
        ]
    },
    {
        "id": "2e1cc80dc72d5d6f",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "INS DATA Per Hour",
        "func": "let vDateNow = new Date();\nlet vMin = addZero(vDateNow.getMinutes());\nlet vSec = addZero(vDateNow.getSeconds());\n\nlet vChkTime = vMin.toString() + vSec.toString();\n\nif(vChkTime === '0000'){\n    let vLine = flow.get('vLine');\n    let vMachine = 'Reflow'\n    msg.payload = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_AUTO_UPD_DT]\" + \"\\'\" + vLine  + \"\\'\" + \",\\'\" + vMachine + \"\\'\";\n\n    return msg;\n}\n\n\nfunction addZero(i) {\n  if (i < 10) {\n    i = \"0\" + i;\n  }\n  return i;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1120,
        "wires": [
            [
                "727a8ec1f4b7c6bf"
            ]
        ]
    },
    {
        "id": "a8acc381a0447f08",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL STBL_OEE_GET_DT_DATE",
        "func": "flow.set('vAlert',5);\n\nlet vLine = flow.get('vLine');\nlet vProcess = 'SMT'\nlet vDESC = 'Change Over';\n//msg.payload = vLine;\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_DOWNTIME_DESC] \" + \"\\'\" + vLine + \"\\'\" + \",\\'\" + vProcess + \"\\'\"+ \",\\'\" + vDESC + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2180,
        "wires": [
            [
                "8d181b2dff128eaf"
            ]
        ]
    },
    {
        "id": "4ecee75859390586",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "ada74056d05bf254"
        ],
        "x": 1585,
        "y": 1100,
        "wires": [
            [
                "686d4a4e5e079756",
                "c65a4c5964d5dfa3",
                "b0b3ca549b838e0c",
                "82ec8487b75ad500"
            ]
        ]
    },
    {
        "id": "ada74056d05bf254",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "4ecee75859390586",
            "defcb380.e60858",
            "e1d205fe.e49838",
            "22a67d77.ed05ba",
            "db37a3d1.dc788"
        ],
        "x": 1215,
        "y": 1080,
        "wires": []
    },
    {
        "id": "8d181b2dff128eaf",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 800,
        "y": 2180,
        "wires": [
            [
                "58575b4313f7c6fa"
            ]
        ]
    },
    {
        "id": "58575b4313f7c6fa",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Call Line",
        "func": "let vStatus = msg.payload[0].Status;\n\nif(vStatus == 'Success'){\n    msg.payload = vStatus;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 2180,
        "wires": [
            [
                "0c184ca416ad17b6",
                "d3f85ea67ff00648"
            ]
        ]
    },
    {
        "id": "a3acf5a034a60703",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Call Line",
        "func": "let vStatus = msg.payload[0].Status;\n\nif(vStatus == 'Success'){\n    msg.payload = vStatus;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1480,
        "wires": [
            [
                "e3efb7e678ce043b",
                "065f046dae92bddb"
            ]
        ]
    },
    {
        "id": "9281e5b83ee97490",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_OEE_GET_RT_TB_DATE",
        "func": "var vLine = flow.get('vLineGet');\nvar vStartDate = flow.get('vStartDateGet');\nvar vEndDate = flow.get('vTUpdateDate');\nlet vProcess = 'Reflow';\n\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OEE_GET_RT_TB_DATE] \" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + vStartDate + \"\\',\" + \"\\'\" + vProcess + \"\\'\";\n\nmsg.payload = t; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 780,
        "wires": [
            [
                "dce115b9e2bdaabb"
            ]
        ]
    },
    {
        "id": "dce115b9e2bdaabb",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 1440,
        "y": 780,
        "wires": [
            [
                "81bb0b8963ed8142"
            ]
        ]
    },
    {
        "id": "f5a118badaaa7616",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set Values 0 DTUN",
        "func": "    flow.set('cDTUN07',0);\n    flow.set('cDTUN08',0);\n    flow.set('cDTUN09',0);\n    flow.set('cDTUN10',0);\n    flow.set('cDTUN11',0);\n    flow.set('cDTUN12',0);\n    flow.set('cDTUN13',0);\n    flow.set('cDTUN14',0);\n    flow.set('cDTUN15',0);\n    flow.set('cDTUN16',0);\n    flow.set('cDTUN17',0);\n    flow.set('cDTUN18',0);\n    flow.set('cDTUN19',0);\n    flow.set('cDTUN20',0);\n    flow.set('cDTUN21',0);\n    flow.set('cDTUN22',0);\n    flow.set('cDTUN23',0);\n    flow.set('cDTUN00',0);\n    flow.set('cDTUN01',0);\n    flow.set('cDTUN02',0);\n    flow.set('cDTUN03',0);\n    flow.set('cDTUN04',0);\n    flow.set('cDTUN05',0);\n    flow.set('cDTUN06',0);\n    \n    flow.set('ccDTUN07',0);\n    flow.set('ccDTUN08',0);\n    flow.set('ccDTUN09',0);\n    flow.set('ccDTUN10',0);\n    flow.set('ccDTUN11',0);\n    flow.set('ccDTUN12',0);\n    flow.set('ccDTUN13',0);\n    flow.set('ccDTUN14',0);\n    flow.set('ccDTUN15',0);\n    flow.set('ccDTUN16',0);\n    flow.set('ccDTUN17',0);\n    flow.set('ccDTUN18',0);\n    flow.set('ccDTUN19',0);\n    flow.set('ccDTUN20',0);\n    flow.set('ccDTUN21',0);\n    flow.set('ccDTUN22',0);\n    flow.set('ccDTUN23',0);\n    flow.set('ccDTUN00',0);\n    flow.set('ccDTUN01',0);\n    flow.set('ccDTUN02',0);\n    flow.set('ccDTUN03',0);\n    flow.set('ccDTUN04',0);\n    flow.set('ccDTUN05',0);\n    flow.set('ccDTUN06',0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 140,
        "wires": [
            [
                "2a95526bf6a547ea"
            ]
        ]
    },
    {
        "id": "2a2b8cff3b79b9cc",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "36a119e132682689"
        ],
        "x": 1315,
        "y": 200,
        "wires": []
    },
    {
        "id": "36a119e132682689",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "2a2b8cff3b79b9cc"
        ],
        "x": 675,
        "y": 720,
        "wires": [
            [
                "17e05dd96a2fc578"
            ]
        ]
    },
    {
        "id": "c444c0a140debe05",
        "type": "ui_button",
        "z": "654ceb9908184e3c",
        "name": "bTPlanStart",
        "group": "24971256.5d07c6",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "<B>Plan Start</B>",
        "tooltip": "Plan Start",
        "color": "",
        "bgcolor": "green",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 1240,
        "wires": [
            [
                "f36cbb343648d39f"
            ]
        ]
    },
    {
        "id": "6b2c8ac263f76269",
        "type": "ui_button",
        "z": "654ceb9908184e3c",
        "name": "bTPlanStop",
        "group": "24971256.5d07c6",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "<B>Plan Stop</B>",
        "tooltip": "Plan Stop",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "6",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 1300,
        "wires": [
            [
                "3cf2042e5014e8a8"
            ]
        ]
    },
    {
        "id": "f36cbb343648d39f",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_UPD_DOWNTIME",
        "func": "var pMachine = \"Reflow\"; \nvar pProcess = \"SMT\";\nvar vLine =flow.get('vLine');\n\nDataset = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_DOWNTIME] \" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + pMachine + \"\\',\" + \"\\'\" + pProcess+ \"\\'\" ;\nmsg.payload = Dataset;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1240,
        "wires": [
            [
                "07627a952f8bd77f"
            ]
        ]
    },
    {
        "id": "07627a952f8bd77f",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 660,
        "y": 1240,
        "wires": [
            [
                "40e8660c0b464895",
                "c04e5f162025a968"
            ]
        ]
    },
    {
        "id": "71f7b8a4b2f8ab1e",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL STBL_OEE_GET_DT_DATE",
        "func": "flow.set('vAlert',7);\n\nlet vLine = flow.get('vLine');\nlet vProcess = 'SMT'\nlet vDESC = 'Plan Stop';\n//msg.payload = vLine;\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_DOWNTIME_DESC] \" + \"\\'\" + vLine + \"\\'\" + \",\\'\" + vProcess + \"\\'\"+ \",\\'\" + vDESC + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1380,
        "wires": [
            [
                "a8aea5dbc0efa466"
            ]
        ]
    },
    {
        "id": "a8aea5dbc0efa466",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 720,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "52af9cd76550fb21",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "22836460e2bd7975",
            "6b1d4ef56062b300",
            "fad1b00266177816",
            "40cf3ebff9ef19ee",
            "fd033ff99cff782e",
            "f44ea4a4b0ea8014",
            "c328138bc530d46a",
            "816e66e62139cf30"
        ],
        "x": 675,
        "y": 400,
        "wires": []
    },
    {
        "id": "22836460e2bd7975",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "52af9cd76550fb21",
            "823a8d2b.8dc4a8",
            "b864fc1f16eace37",
            "0546c48fb58a775d"
        ],
        "x": 275,
        "y": 60,
        "wires": [
            [
                "1ae2631c0756485a"
            ]
        ]
    },
    {
        "id": "6b1d4ef56062b300",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "52af9cd76550fb21",
            "abcad3e448848502"
        ],
        "x": 275,
        "y": 180,
        "wires": [
            [
                "f5a118badaaa7616",
                "1bae0f4bf23172dd"
            ]
        ]
    },
    {
        "id": "81bb0b8963ed8142",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 780,
        "wires": [
            [
                "36809e411b31db27",
                "66d5b443ca360cbe"
            ]
        ]
    },
    {
        "id": "a186842cd33be52f",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "b1608af4.f56c58",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "tBSTDUPH",
        "label": "UPH (pcs.)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1910,
        "y": 460,
        "wires": []
    },
    {
        "id": "1424de76b8e76101",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Show UPH",
        "func": "let vCT = flow.get('vCT');\n\nlet vUPH = Math.ceil(3600 / Number(vCT));\nmsg.payload = vUPH;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 460,
        "wires": [
            [
                "a186842cd33be52f"
            ]
        ]
    },
    {
        "id": "349cf92fc4002180",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL STBL_OEE_GET_DT_DATE",
        "func": "flow.set('vAlert',3);\n\nlet vLine = flow.get('vLine');\nlet vProcess = 'SMT'\nlet vDESC = 'Wait Material';\n//msg.payload = vLine;\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_DOWNTIME_DESC] \" + \"\\'\" + vLine + \"\\'\" + \",\\'\" + vProcess + \"\\'\"+ \",\\'\" + vDESC + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1860,
        "wires": [
            [
                "8d80d0a6e2d3787e"
            ]
        ]
    },
    {
        "id": "8d80d0a6e2d3787e",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 760,
        "y": 1860,
        "wires": [
            [
                "0aa2b0e8c7ea6b27",
                "665e21196d9761fd"
            ]
        ]
    },
    {
        "id": "0aa2b0e8c7ea6b27",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Call Line",
        "func": "let vStatus = msg.payload[0].Status;\n\nif(vStatus == 'Success'){\n    msg.payload = vStatus;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1860,
        "wires": [
            [
                "1f0b135eff2514af"
            ]
        ]
    },
    {
        "id": "46100132bd1f41f8",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL STBL_OEE_GET_DT_DATE",
        "func": "flow.set('vAlert',4);\n\nlet vLine = flow.get('vLine');\nlet vProcess = 'SMT'\nlet vDESC = 'Quality Issue';\n//msg.payload = vLine;\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_DOWNTIME_DESC] \" + \"\\'\" + vLine + \"\\'\" + \",\\'\" + vProcess + \"\\'\"+ \",\\'\" + vDESC + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2040,
        "wires": [
            [
                "89715aa65efdd720"
            ]
        ]
    },
    {
        "id": "89715aa65efdd720",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 800,
        "y": 2040,
        "wires": [
            [
                "bd7e05345ecf1b78"
            ]
        ]
    },
    {
        "id": "bd7e05345ecf1b78",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Call Line",
        "func": "let vStatus = msg.payload[0].Status;\n\nif(vStatus == 'Success'){\n    msg.payload = vStatus;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 2040,
        "wires": [
            [
                "79366cc10bf889c1"
            ]
        ]
    },
    {
        "id": "f393881ca156419d",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL STBL_OEE_GET_DT_DATE",
        "func": "flow.set('vAlert',6);\n\nlet vLine = flow.get('vLine');\nlet vProcess = 'SMT'\nlet vDESC = 'Brakes Time';\n//msg.payload = vLine;\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_DOWNTIME_DESC] \" + \"\\'\" + vLine + \"\\'\" + \",\\'\" + vProcess + \"\\'\"+ \",\\'\" + vDESC + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2380,
        "wires": [
            [
                "e5d57432290d5896"
            ]
        ]
    },
    {
        "id": "e5d57432290d5896",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 800,
        "y": 2380,
        "wires": [
            [
                "2715f7a217def25d"
            ]
        ]
    },
    {
        "id": "2715f7a217def25d",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Call Line",
        "func": "let vStatus = msg.payload[0].Status;\n\nif(vStatus == 'Success'){\n    msg.payload = vStatus;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "727a8ec1f4b7c6bf",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 700,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "d78830adabfc0d4f",
        "type": "delay",
        "z": "654ceb9908184e3c",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 180,
        "y": 320,
        "wires": [
            [
                "abcad3e448848502"
            ]
        ]
    },
    {
        "id": "b7fd47b49e5e25e5",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL SP STBL_OEE_GET_DT_TIMES",
        "func": "var vLine = flow.get('vLineGet');\nvar vStartDate = flow.get('vStartDateGet');\nlet vProcess = 'Reflow';\n\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OEE_GET_DT_TIMES] \" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + vStartDate + \"\\',\" + \"\\'\" + vProcess + \"\\'\";\n\nmsg.payload = t; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1040,
        "wires": [
            [
                "2ba95f50c2686cd0"
            ]
        ]
    },
    {
        "id": "2ba95f50c2686cd0",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1360,
        "y": 1040,
        "wires": [
            [
                "3c73baabb4054b25"
            ]
        ]
    },
    {
        "id": "3c73baabb4054b25",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set Times Issue",
        "func": "var vRow = msg.payload.length\nvar vData = msg.payload;\n\nlet cTCO = 0;\nlet cTMT = 0;\nlet cTWM = 0;\nlet cTQI = 0;\n\nfor(i = 0;i < vRow; i++)\n{\n    if(vData[i].BreakDownDESC == 'Change Over'){flow.set('cTCO',vData[i].Times); cTCO = vData[i].Times;}\n    \n    if(vData[i].BreakDownDESC == 'Maintenance'){flow.set('cTMT',vData[i].Times); cTMT = vData[i].Times;}\n    \n    if(vData[i].BreakDownDESC == 'Wait Material'){flow.set('cTWM',vData[i].Times); cTWM = vData[i].Times;}\n    \n    if(vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cTQI',vData[i].Times); cTQI = vData[i].Times;}\n}\n\nmsgCO = {};\nmsgMT = {};\nmsgWM = {};\nmsgQI = {};\n\nmsgCO.payload = cTCO;\nmsgMT.payload = cTMT;\nmsgWM.payload = cTWM;\nmsgQI.payload = cTQI;\n\n\nreturn [msgCO,msgMT,msgWM,msgQI];",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1040,
        "wires": [
            [
                "82ec8487b75ad500"
            ],
            [
                "686d4a4e5e079756"
            ],
            [
                "c65a4c5964d5dfa3"
            ],
            [
                "b0b3ca549b838e0c"
            ]
        ]
    },
    {
        "id": "a3693c24b5eaf3fe",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "ecf7206f87d25174"
        ],
        "x": 1675,
        "y": 1600,
        "wires": []
    },
    {
        "id": "ecf7206f87d25174",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "a3693c24b5eaf3fe"
        ],
        "x": 875,
        "y": 1040,
        "wires": [
            [
                "b7fd47b49e5e25e5"
            ]
        ]
    },
    {
        "id": "de59b65d42b6868d",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "97fd61ea49238e9a"
        ],
        "x": 595,
        "y": 2260,
        "wires": []
    },
    {
        "id": "cc6d6e7a688294c0",
        "type": "delay",
        "z": "654ceb9908184e3c",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 340,
        "y": 920,
        "wires": [
            [
                "03f6fa30cce90996"
            ]
        ]
    },
    {
        "id": "fee967d2286e2a1b",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "7a2302bd.543a14",
            "bd1d7556.aa91a",
            "665e21196d9761fd",
            "56e666d9e4fc1f14"
        ],
        "x": 355,
        "y": 880,
        "wires": [
            [
                "03f6fa30cce90996"
            ]
        ]
    },
    {
        "id": "065f046dae92bddb",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL STBL_INS_MAINT",
        "func": "let vLine = flow.get('vLine');\nlet vProcess = 'SMT'\nlet vDESC = 'Maintenance';\n//msg.payload = vLine;\nvar t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_INS_MAINT] \" + \"\\'\" + vLine + \"\\'\" + \",\\'\" + vDESC + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1480,
        "wires": [
            [
                "0796f65d9d6c7018"
            ]
        ]
    },
    {
        "id": "0796f65d9d6c7018",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1420,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "d3f85ea67ff00648",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL STBL_INS_MAINT",
        "func": "let vLocation = 'SMT';\nlet vLine = flow.get('vLine');\nlet vTracking = flow.get('vTracking');\nlet vModel = flow.get('vModel');\nlet vITEMCODE = flow.get('vITEMCODE');\n//msg.payload = vLine;\nvar t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_INS_CHANGEOVER] \" + \"\\'\" + vLocation + \"\\'\" + \",\\'\" + vLine + \"\\'\" + \",\\'\" + vTracking + \"\\'\" + \",\\'\" + vITEMCODE + \"\\'\" + \",\\'\" + vModel + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 2140,
        "wires": [
            [
                "393b67677a0cc5b0"
            ]
        ]
    },
    {
        "id": "393b67677a0cc5b0",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1360,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "1279f7b74f6dd872",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "",
        "func": "let vDateNow = new Date();\nlet vDay = addZero(vDateNow.getDay());\nlet vMonth = addZero(vDateNow.getMonth() + 1);\nlet vYear = vDateNow.getFullYear();\nlet vHour = vDateNow.getHours();\nlet vMin = addZero(vDateNow.getMinutes());\nlet vSec = addZero(vDateNow.getSeconds());\n\nlet vChkTime = vYear.toString() + '-' + vMonth.toString() + '-' + vDay.toString() + ' ' + vHour.toString() + ':' + vMin.toString() +  ':' + vSec.toString();\n\nlet vChkMin = vMin.toString() + vSec.toString();\n\nif(vChkMin != '0000'){\n\n    msg.payload = vChkTime;\n\n    return msg;\n}\n\nfunction addZero(i) {\n  if (i < 10) {\n    i = \"0\" + i;\n  }\n  return i;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "9b175464638090fc",
        "type": "ui_template",
        "z": "654ceb9908184e3c",
        "group": "1afc4d72.0904bb",
        "name": "Set model on toolbar",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<script id=\"titleScript\" type=\"text/javascript\">\n(function(scope) {\n        //console.log('Position 1');\n        //console.dir(scope);\n        scope.$watch('msg', function(msg) {\n            //console.log('Position 1');\n            //console.dir(msg);\n            var vM = msg.payload;\n            \n            Model(vM);\n        });\n    })(scope);\n    \nfunction Model(M){\n    $('#DModelName').remove();\n    $('#ModelName').remove();\n    var toolbar = $('.md-toolbar-tools');\n    \n    var div = $('<div/ id=\"DModelName\">');\n    var pM = $('<p/ id=\"ModelName\">');\n    \n    div.append(pM);\n    div[0].style.margin = '5px 75px';\n    toolbar.append(div);\n    //var pM = $('<p/ id=\"ModelName\">');\n    pM.text(\"Model: \" + M);\n}\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 2080,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "c9988504b9d5db07",
        "type": "ui_template",
        "z": "654ceb9908184e3c",
        "group": "1afc4d72.0904bb",
        "name": "",
        "order": 17,
        "width": 0,
        "height": 0,
        "format": "<script id=\"titleScript\" type=\"text/javascript\">\n(function(scope) {\n        //console.log('Position 1');\n        //console.dir(scope);\n        scope.$watch('msg', function(msg) {\n            //console.log('Position 1');\n            //console.dir(msg);\n            var vS = msg.payload;\n            \n            Status(vS);\n        });\n    })(scope);\n    \nfunction Status(S){\n    $('#DStatus').remove();\n    $('#Status').remove();\n    var toolbar = $('.md-toolbar-tools');\n    \n    var div = $('<div/ id=\"DStatus\">');\n    var pS = $('<p/ id=\"Status\">');\n    \n    div.append(pS);\n    div[0].style.margin = '5px 75px';\n    toolbar.append(div);\n    //var pS = $('<p/ id=\"Status\">');\n    pS.text(\"Status: \" + S);\n}\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1640,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "c84789924f4554bd",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set Model",
        "func": "let MM = flow.get('vModel');\n\nmsg.payload = MM;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 260,
        "wires": [
            [
                "9b175464638090fc"
            ]
        ]
    },
    {
        "id": "72235399a384434d",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL STBL_INS_COUNTER",
        "func": "let vLine = flow.get('vLine');\nlet vProcess = \"SMT\";\nlet vMachine = \"Reflow\";\nlet vQty = 0;\nlet t = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_INS_COUNTER] \\'Test\\', \\'\\',\" + \"\\'\" + vLine + \"\\',\\'\" + vMachine + \"\\',\"+ \"\\'\" + vProcess+ \"\\'\" +\",\\'\\'\"  + \",\\'\" + vQty+ \"\\'\";\nmsg.payload = t \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 560,
        "wires": [
            [
                "ba5c0230bf4f21b8"
            ]
        ]
    },
    {
        "id": "ba5c0230bf4f21b8",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 1120,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "4d84c8b6e3b2979a",
        "type": "ui_button",
        "z": "654ceb9908184e3c",
        "name": "",
        "group": "4cd510db.88fc48",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "IN",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 3080,
        "wires": [
            [
                "4a1acd34823a01dd",
                "ce40f9d28db1b735"
            ]
        ]
    },
    {
        "id": "43d381c337d7da50",
        "type": "ui_button",
        "z": "654ceb9908184e3c",
        "name": "",
        "group": "4cd510db.88fc48",
        "order": 13,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "OUT",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 3200,
        "wires": [
            [
                "4a1acd34823a01dd",
                "fad08f1fff34e364"
            ]
        ]
    },
    {
        "id": "edc355c5861abd44",
        "type": "ui_table",
        "z": "654ceb9908184e3c",
        "group": "4cd510db.88fc48",
        "name": "OPT_Detail",
        "order": 14,
        "width": 6,
        "height": 4,
        "columns": [
            {
                "field": "OperatorID",
                "title": "ID",
                "width": "30%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "OperatorName",
                "title": "Name",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1370,
        "y": 3100,
        "wires": []
    },
    {
        "id": "b514dd75cdb4d497",
        "type": "ui_text_input",
        "z": "654ceb9908184e3c",
        "name": "",
        "label": "Employee ID",
        "tooltip": "",
        "group": "4cd510db.88fc48",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 390,
        "y": 3140,
        "wires": [
            [
                "965dfb43384e6353"
            ]
        ]
    },
    {
        "id": "67825bf231687816",
        "type": "ui_button",
        "z": "654ceb9908184e3c",
        "name": "bTMaintenance",
        "group": "4cd510db.88fc48",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "<B>Maintenance</B>",
        "tooltip": "Test",
        "color": "black",
        "bgcolor": "orange",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "Maintenance",
        "topicType": "str",
        "x": 260,
        "y": 1740,
        "wires": [
            [
                "4fd96b47fca6277a"
            ]
        ]
    },
    {
        "id": "bd6ee2af26a548b9",
        "type": "ui_button",
        "z": "654ceb9908184e3c",
        "name": "bTQualityIssue",
        "group": "4cd510db.88fc48",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "<B>Quality Issue</B>",
        "tooltip": "",
        "color": "",
        "bgcolor": "Purple",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 260,
        "y": 2020,
        "wires": [
            [
                "b795c15f4fc7d795"
            ]
        ]
    },
    {
        "id": "680c16b91c31b20e",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "4cd510db.88fc48",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Emmergency Call",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 170,
        "y": 1640,
        "wires": []
    },
    {
        "id": "ce40f9d28db1b735",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL STBL_OPT_INS",
        "func": "let vEmpCode = flow.get('EmpCode');\nlet vLine = flow.get('vLine');\nlet vTracking = flow.get('vTracking');\n\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OPT_INS] \" + \"\\'\" + vEmpCode + \"\\'\" + \",\\'\" + vLine + \"\\'\"+ \",\\'\" + vTracking + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 3080,
        "wires": [
            [
                "29486ae1058f27c6"
            ]
        ]
    },
    {
        "id": "29486ae1058f27c6",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 780,
        "y": 3140,
        "wires": [
            [
                "880243652f2c266a",
                "2e8159728ff84379"
            ]
        ]
    },
    {
        "id": "965dfb43384e6353",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set EmpCode",
        "func": "let vEmpCode = msg.payload;\nflow.set('EmpCode',vEmpCode);\n\nmsg.payload = flow.get('EmpCode');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 3140,
        "wires": [
            []
        ]
    },
    {
        "id": "4a1acd34823a01dd",
        "type": "change",
        "z": "654ceb9908184e3c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 3140,
        "wires": [
            [
                "b514dd75cdb4d497"
            ]
        ]
    },
    {
        "id": "9c101752f6f2d3e2",
        "type": "function",
        "z": "654ceb9908184e3c",
        "d": true,
        "name": "Call Line",
        "func": "msg.payload = 'Quality Issue';\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 1980,
        "wires": [
            [
                "79366cc10bf889c1"
            ]
        ]
    },
    {
        "id": "7f9856bed4a73a1d",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "4cd510db.88fc48",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "::",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1110,
        "y": 3180,
        "wires": []
    },
    {
        "id": "880243652f2c266a",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL result",
        "func": "let vResult = msg.payload[0]['Status'];\nmsg.payload = vResult;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 3180,
        "wires": [
            [
                "7f9856bed4a73a1d"
            ]
        ]
    },
    {
        "id": "2e8159728ff84379",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL STBL_OPT_SEC",
        "func": "let vLine = flow.get('vLine');\nlet vTracking = flow.get('vTracking');\n\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OPT_SEC] \" + \"\\'\" + vLine + \"\\'\"+ \",\\'\" + vTracking + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 3100,
        "wires": [
            [
                "3ad58169870876e6"
            ]
        ]
    },
    {
        "id": "3ad58169870876e6",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1200,
        "y": 3100,
        "wires": [
            [
                "edc355c5861abd44",
                "ff974ece89d08679"
            ]
        ]
    },
    {
        "id": "fad08f1fff34e364",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL STBL_OPT_UPD",
        "func": "let vEmpCode = flow.get('EmpCode');\nlet vLine = flow.get('vLine');\nlet vTracking = flow.get('vTracking');\n\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OPT_UPD] \" + \"\\'\" + vEmpCode + \"\\'\" + \",\\'\" + vLine + \"\\'\"+ \",\\'\" + vTracking + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 3200,
        "wires": [
            [
                "29486ae1058f27c6"
            ]
        ]
    },
    {
        "id": "ff974ece89d08679",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set Data Emp",
        "func": "let vDateEmp = msg.payload;\nlet row = vDateEmp.length;\n\nif (vDateEmp.length > 0)\n{\n    flow.set('DateEmp',vDateEmp);\n    msg.payload = row;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1380,
        "y": 3140,
        "wires": [
            []
        ]
    },
    {
        "id": "fc857924ab5c832d",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Auto Logout",
        "func": "let vLine = flow.get('vLine');\nlet vTracking = flow.get('vTracking');\n\nlet vDateEmp = flow.get('DateEmp');\nlet row = vDateEmp.length;\nif(row > 0)\n{\n    for(i=0; i < row; i++)\n    {\n        var t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OPT_UPD] \" + \"\\'\" + vDateEmp[i]['OperatorID'] + \"\\'\" + \",\\'\" + vLine + \"\\'\"+ \",\\'\" + vTracking + \"\\'\";\n        msg.payload = t; \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2980,
        "wires": [
            [
                "22e4cd5439caf52f"
            ]
        ]
    },
    {
        "id": "4775b897ebca02fa",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Loop Check",
        "func": "let vDateEmp = flow.get('DateEmp');\nlet row = vDateEmp.length;\nmsg.payload = row;\n\nif(row > 0)\n{\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1330,
        "y": 3040,
        "wires": [
            [
                "fc857924ab5c832d"
            ]
        ]
    },
    {
        "id": "22e4cd5439caf52f",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1170,
        "y": 2980,
        "wires": [
            [
                "b0deffdec21b5611"
            ]
        ]
    },
    {
        "id": "410b72e29ec82643",
        "type": "delay",
        "z": "654ceb9908184e3c",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1180,
        "y": 3040,
        "wires": [
            [
                "4775b897ebca02fa"
            ]
        ]
    },
    {
        "id": "b0deffdec21b5611",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Success Check",
        "func": "let vData = msg.payload;\nlet vStatus = vData[0]['Status'];\n\nif(vStatus == 'Success')\n{\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 3040,
        "wires": [
            [
                "2e8159728ff84379",
                "410b72e29ec82643"
            ]
        ]
    },
    {
        "id": "e6820fc694a2467a",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "3893653d060a5723",
            "b864fc1f16eace37"
        ],
        "x": 815,
        "y": 2980,
        "wires": [
            [
                "fc857924ab5c832d"
            ]
        ]
    },
    {
        "id": "1801f4929538b703",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Check Logout 07&19",
        "func": "let vDateNow = new Date();\nlet vHour = addZero(vDateNow.getHours());\nlet vMin = addZero(vDateNow.getMinutes());\nlet vSec = addZero(vDateNow.getSeconds());\n\nlet vChkTime = vHour.toString() + vMin.toString() + vSec.toString();\n\nmsg.payload = vChkTime;\nif(vChkTime == '070000' || vChkTime == '190000')\n{\n    return msg;\n}\n\nfunction addZero(i) {\n  if (i < 10) {\n    i = \"0\" + i;\n  }\n  return i;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1200,
        "wires": [
            [
                "b864fc1f16eace37"
            ]
        ]
    },
    {
        "id": "b864fc1f16eace37",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "e6820fc694a2467a",
            "22836460e2bd7975"
        ],
        "x": 655,
        "y": 1200,
        "wires": []
    },
    {
        "id": "b6bb0be1354eb592",
        "type": "tcp request",
        "z": "654ceb9908184e3c",
        "name": "Test TCP",
        "server": "10.0.113.80",
        "port": "8998",
        "out": "time",
        "splitc": "1000",
        "x": 640,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "c9077c2ed3815a81",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "TCP Plan Stop",
        "func": "let Message = '{\"Issue\" : \"Plan Stop\",\"Status\" : \"0\"}';\n\nmsg.payload = Message;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 1440,
        "wires": [
            [
                "b6bb0be1354eb592"
            ]
        ]
    },
    {
        "id": "a28f5f4a43c985a2",
        "type": "tcp in",
        "z": "654ceb9908184e3c",
        "name": "CradReader",
        "server": "server",
        "host": "",
        "port": "8997",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "base64": false,
        "tls": "",
        "x": 250,
        "y": 3280,
        "wires": [
            [
                "8033561096bf564b"
            ]
        ]
    },
    {
        "id": "f930b0499a2e3794",
        "type": "tcp out",
        "z": "654ceb9908184e3c",
        "name": "",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 990,
        "y": 3280,
        "wires": []
    },
    {
        "id": "a2e2c1ce4d032d80",
        "type": "comment",
        "z": "654ceb9908184e3c",
        "name": "TCP Crad Reader",
        "info": "",
        "x": 270,
        "y": 3240,
        "wires": []
    },
    {
        "id": "8033561096bf564b",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Function for RFID",
        "func": "let vData = msg.payload.split(\",\");\nlet vType = vData[0];\nlet vIDCard = vData[1];\nlet vEmpcode = vData[2];\n\nlet t = \"\";\nvar vEmpCode = \"\";\nvar vLine = \"\";\nvar vTracking = \"\";\n    \nif(vType == 'login')\n{\n    //let vEmpCode = flow.get('EmpCode');\n    vEmpCode = vIDCard.trim();\n    vLine = flow.get('vLine');\n    vTracking = flow.get('vTracking');\n    \n    t = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OPT_INS] \" + \"\\'\" + vEmpCode + \"\\'\" + \",\\'\" + vLine + \"\\'\"+ \",\\'\" + vTracking + \"\\'\";\n    \n    msg.payload = t; \n    return msg;\n}\nelse if(vType == 'logout')\n{\n    //let vEmpCode = flow.get('EmpCode');\n    vIDCard = vIDCard.trim();\n    vLine = flow.get('vLine');\n    vTracking = flow.get('vTracking');\n    \n    t = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OPT_UPD] \" + \"\\'\" + vIDCard + \"\\'\" + \",\\'\" + vLine + \"\\'\"+ \",\\'\" + vTracking + \"\\'\";\n    \n    msg.payload = t; \n    return msg;\n}\nelse if(vType == 'register')\n{\n    //let vEmpCode = flow.get('EmpCode');\n    vIDCard = vIDCard.trim();\n    vEmpCode = vEmpcode.trim();\n    vLine = flow.get('vLine');\n    vTracking = flow.get('vTracking');\n    \n    t = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_INS_RFID_CODE] \" + \"\\'\" + vIDCard + \"\\'\" + \",\\'\" + vEmpCode + \"\\'\";\n    \n    msg.payload = t; \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3280,
        "wires": [
            [
                "eb87301d01904e8e"
            ]
        ]
    },
    {
        "id": "eb87301d01904e8e",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 640,
        "y": 3280,
        "wires": [
            [
                "2e8159728ff84379",
                "3d77b260edd981b9"
            ]
        ]
    },
    {
        "id": "3d77b260edd981b9",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Reply Result",
        "func": "let vResult = msg.payload[0];\n\nvResult = vResult['Status'];\n\nmsg.payload = vResult;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 3280,
        "wires": [
            [
                "f930b0499a2e3794"
            ]
        ]
    },
    {
        "id": "44e751474b7ac7f7",
        "type": "ui_ui_control",
        "z": "654ceb9908184e3c",
        "name": "",
        "events": "all",
        "x": 580,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "89d8d4518bb9c222",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "",
        "func": "msg.payload = msg.topic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1500,
        "wires": [
            [
                "44e751474b7ac7f7"
            ]
        ]
    },
    {
        "id": "a403ee8066198723",
        "type": "ui_ui_control",
        "z": "654ceb9908184e3c",
        "name": "",
        "events": "all",
        "x": 580,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "4fd96b47fca6277a",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "",
        "func": "msg.payload = msg.topic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1740,
        "wires": [
            [
                "a403ee8066198723"
            ]
        ]
    },
    {
        "id": "e3efb7e678ce043b",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "TM Line",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\n\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\n\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\n\nvar vStatus = \"Req. Maintenance\";\nmsg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer VzDBC8PFDQImwC2YoUe5M0rA7QFcIKuMQAL8LqaquXv'};\nmsg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nLine::\" + vLine + \"\\nStatus::\" + vStatus + \"\\n\"};\n\n//msg.payload = vHH;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1440,
        "wires": [
            [
                "6cb3252fb576edd0"
            ]
        ]
    },
    {
        "id": "9510549cb1b134c7",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Sent Data OEE",
        "func": "let vTLine =  flow.get('vTLine');\nlet vOee = msg.payload;\n\nlet t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_OEE_OVER_ALL] \" + \"\\'\" + vTLine + \"\\',\" + \"\\'\" + vOee + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2500,
        "y": 940,
        "wires": [
            [
                "d51db8aec54d5e6e"
            ]
        ]
    },
    {
        "id": "d51db8aec54d5e6e",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 2680,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "8c0952c258976b02",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_INS_DOWNTIME",
        "func": "var pMachine = \"Reflow\"; \nvar pProcess = \"SMT\";\nvar vLine = flow.get('vLine');\nvar pBreakDownDESC = \"Maintenance\";\nvar Dataset = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_INS_DOWNTIME]\" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + pMachine + \"\\',\" + \"\\'\" + pProcess+ \"\\'\" + \",\\'\" + pBreakDownDESC+ \"\\'\";\nmsg.payload = Dataset; \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1820,
        "wires": [
            [
                "015c521c5c80f212"
            ]
        ]
    },
    {
        "id": "015c521c5c80f212",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 700,
        "y": 1820,
        "wires": [
            [
                "349cf92fc4002180",
                "178eea5ee2b257ef"
            ]
        ]
    },
    {
        "id": "b23ad7cde1e5a76a",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_INS_DOWNTIME",
        "func": "var pMachine = \"Reflow\"; \nvar pProcess = \"SMT\";\nvar vLine = flow.get('vLine');\nvar pBreakDownDESC = \"Maintenance\";\nvar Dataset = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_INS_DOWNTIME]\" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + pMachine + \"\\',\" + \"\\'\" + pProcess+ \"\\'\" + \",\\'\" + pBreakDownDESC+ \"\\'\";\nmsg.payload = Dataset; \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2000,
        "wires": [
            [
                "37b2fe5661e63d73"
            ]
        ]
    },
    {
        "id": "37b2fe5661e63d73",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 700,
        "y": 2000,
        "wires": [
            [
                "46100132bd1f41f8",
                "7ac69a470d022702"
            ]
        ]
    },
    {
        "id": "40e8660c0b464895",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Plan Start",
        "func": "var vStatus = msg.payload[0].Status;\nvar STS = 0;\n\n    flow.set('vAlert','1')\n    STS = 1;\n\n\nmsg.payload = STS;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1240,
        "wires": [
            [
                "46f2d10dbf86ac52"
            ]
        ]
    },
    {
        "id": "178eea5ee2b257ef",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Wait Material",
        "func": "var vStatus = msg.payload[0].Status;\nvar STS = 0;\nif( vStatus ==\"Success\"){\n    flow.set('vAlert','3')\n    STS = 3;\n}\nSTS = 3;\nmsg.payload = STS;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1820,
        "wires": [
            [
                "ca031b2147b959be"
            ]
        ]
    },
    {
        "id": "ca031b2147b959be",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "0867ccc073e26a77"
        ],
        "x": 1005,
        "y": 1820,
        "wires": []
    },
    {
        "id": "0867ccc073e26a77",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "ca031b2147b959be",
            "46f2d10dbf86ac52",
            "3a1e8abdb4718368",
            "27840a4edf233627",
            "cc252bd9072e2591",
            "91ba5da907b2ccb9",
            "d0e7d5b68d69c079",
            "e1765d431d336d66"
        ],
        "x": 1335,
        "y": 1300,
        "wires": [
            [
                "cbbf615190a11b86",
                "0b3800757597217d"
            ]
        ]
    },
    {
        "id": "0b3800757597217d",
        "type": "ui_template",
        "z": "654ceb9908184e3c",
        "group": "1afc4d72.0904bb",
        "name": "",
        "order": 19,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //console.log('Position 1');\n        //console.dir(scope);\n        scope.$watch('msg', function(msg) {\n            //console.log('Position 1');\n            //console.dir(msg);\n            var vChk = msg.payload;\n            if(vChk !== 1){\n                    document.getElementById(\"nr-dashboard-toolbar\").style.backgroundColor = \"red\"; \n                    document.getElementById(\"OEE_Thai_SIIX_Co.,Ltd._Production_Output_cards\").style.backgroundColor = \"red\"; \n                \n            }\n            else{\n                document.getElementById(\"nr-dashboard-toolbar\").style.backgroundColor = \"green\"; \n                document.getElementById(\"OEE_Thai_SIIX_Co.,Ltd._Production_Output_cards\").style.backgroundColor = \"green\";\n            }\n        \n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1460,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "46f2d10dbf86ac52",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "0867ccc073e26a77"
        ],
        "x": 935,
        "y": 1240,
        "wires": []
    },
    {
        "id": "7ac69a470d022702",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Quality Issue",
        "func": "var vStatus = msg.payload[0].Status;\nvar STS = 0;\nif( vStatus ==\"Success\"){\n    flow.set('vAlert','4')\n    STS = 4;\n}\nSTS = 4;\nmsg.payload = STS;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 2000,
        "wires": [
            [
                "3a1e8abdb4718368"
            ]
        ]
    },
    {
        "id": "3a1e8abdb4718368",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "0867ccc073e26a77"
        ],
        "x": 1005,
        "y": 2000,
        "wires": []
    },
    {
        "id": "4532d5244717deac",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_INS_DOWNTIME",
        "func": "var pMachine = \"Reflow\"; \nvar pProcess = \"SMT\";\nvar vLine = flow.get('vLine');\nvar pBreakDownDESC = \"Maintenance\";\nvar Dataset = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_INS_DOWNTIME]\" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + pMachine + \"\\',\" + \"\\'\" + pProcess+ \"\\'\" + \",\\'\" + pBreakDownDESC+ \"\\'\";\nmsg.payload = Dataset; \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2140,
        "wires": [
            [
                "7ce6e609978b6323"
            ]
        ]
    },
    {
        "id": "7ce6e609978b6323",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 700,
        "y": 2140,
        "wires": [
            [
                "a8acc381a0447f08",
                "db4fa0665f63bb9f"
            ]
        ]
    },
    {
        "id": "db4fa0665f63bb9f",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Change Over",
        "func": "var vStatus = msg.payload[0].Status;\nvar STS = 0;\nif( vStatus ==\"Success\"){\n    flow.set('vAlert','5')\n    STS = 5;\n}\nSTS = 5;\nmsg.payload = STS;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2140,
        "wires": [
            [
                "27840a4edf233627"
            ]
        ]
    },
    {
        "id": "27840a4edf233627",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "0867ccc073e26a77"
        ],
        "x": 1025,
        "y": 2120,
        "wires": []
    },
    {
        "id": "54482fb6fcd223d3",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_INS_DOWNTIME",
        "func": "var pMachine = \"Reflow\"; \nvar pProcess = \"SMT\";\nvar vLine = flow.get('vLine');\nvar pBreakDownDESC = \"Maintenance\";\nvar Dataset = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_INS_DOWNTIME]\" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + pMachine + \"\\',\" + \"\\'\" + pProcess+ \"\\'\" + \",\\'\" + pBreakDownDESC+ \"\\'\";\nmsg.payload = Dataset; \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2340,
        "wires": [
            [
                "408e52914be6fe9a"
            ]
        ]
    },
    {
        "id": "408e52914be6fe9a",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 700,
        "y": 2340,
        "wires": [
            [
                "f393881ca156419d",
                "d244fab44b9e3796"
            ]
        ]
    },
    {
        "id": "d244fab44b9e3796",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Brakes Time",
        "func": "var vStatus = msg.payload[0].Status;\nvar STS = 0;\nif( vStatus ==\"Success\"){\n    flow.set('vAlert','6')\n    STS = 6;\n}\nSTS = 6;\nmsg.payload = STS;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 2340,
        "wires": [
            [
                "cc252bd9072e2591"
            ]
        ]
    },
    {
        "id": "cc252bd9072e2591",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "0867ccc073e26a77"
        ],
        "x": 1015,
        "y": 2340,
        "wires": []
    },
    {
        "id": "0b44ef9c0d52075b",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_INS_DOWNTIME",
        "func": "var pMachine = \"Reflow\"; \nvar pProcess = \"SMT\";\nvar vLine = flow.get('vLine');\nvar pBreakDownDESC = \"Plan Stop\";\nvar Dataset = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_INS_DOWNTIME]\" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + pMachine + \"\\',\" + \"\\'\" + pProcess+ \"\\'\" + \",\\'\" + pBreakDownDESC+ \"\\'\";\nmsg.payload = Dataset; \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1340,
        "wires": [
            [
                "14098238d6ecddcf"
            ]
        ]
    },
    {
        "id": "14098238d6ecddcf",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 660,
        "y": 1340,
        "wires": [
            [
                "71f7b8a4b2f8ab1e",
                "02185b27c10c4311",
                "517228dd2e9ec0eb"
            ]
        ]
    },
    {
        "id": "02185b27c10c4311",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Plan Stop",
        "func": "var vStatus = msg.payload[0].Status;\nvar STS = 0;\nif( vStatus ==\"Success\"){\n    flow.set('vAlert','7')\n    STS = 7;\n}\nSTS = 7;\nmsg.payload = STS;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1340,
        "wires": [
            [
                "91ba5da907b2ccb9"
            ]
        ]
    },
    {
        "id": "91ba5da907b2ccb9",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "0867ccc073e26a77"
        ],
        "x": 1055,
        "y": 1340,
        "wires": []
    },
    {
        "id": "cea69a28bbce98ac",
        "type": "http request",
        "z": "654ceb9908184e3c",
        "name": "Line Noti MT",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1290,
        "y": 1620,
        "wires": [
            [
                "a3693c24b5eaf3fe"
            ]
        ]
    },
    {
        "id": "d5198c545bf0afd4",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "MT Line",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\n\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\n\nvar vStatus = \"Maintenance\";\nmsg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer faq1r52b8xPbjpFp2AvYx50xrb19x3FnSXTvFWTutAJ'};\nmsg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nLine::\" + vLine + \"\\nStatus::\" + vStatus + \"\\n\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 1620,
        "wires": [
            [
                "cea69a28bbce98ac"
            ]
        ]
    },
    {
        "id": "4050f5da9a95c798",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL STBL_OEE_GET_DT_DATE",
        "func": "flow.set('vAlert',3);\n\nlet vLine = flow.get('vLine');\nlet vProcess = 'SMT'\nlet vDESC = 'Maintenance';\n//msg.payload = vLine;\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_DOWNTIME_DESC] \" + \"\\'\" + vLine + \"\\'\" + \",\\'\" + vProcess + \"\\'\"+ \",\\'\" + vDESC + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1620,
        "wires": [
            [
                "6c6036965f7e6014"
            ]
        ]
    },
    {
        "id": "6c6036965f7e6014",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 760,
        "y": 1620,
        "wires": [
            [
                "62ff7c61d24e57b0",
                "56e666d9e4fc1f14"
            ]
        ]
    },
    {
        "id": "62ff7c61d24e57b0",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Call Line",
        "func": "let vStatus = msg.payload[0].Status;\n\nif(vStatus == 'Success'){\n    msg.payload = vStatus;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1620,
        "wires": [
            [
                "d5198c545bf0afd4"
            ]
        ]
    },
    {
        "id": "15657b85e8501edf",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_INS_DOWNTIME",
        "func": "var pMachine = \"Reflow\"; \nvar pProcess = \"SMT\";\nvar vLine = flow.get('vLine');\nvar pBreakDownDESC = \"Maintenance\";\nvar Dataset = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_INS_DOWNTIME]\" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + pMachine + \"\\',\" + \"\\'\" + pProcess+ \"\\'\" + \",\\'\" + pBreakDownDESC+ \"\\'\";\nmsg.payload = Dataset; \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1580,
        "wires": [
            [
                "96e3e31767f48a2e"
            ]
        ]
    },
    {
        "id": "96e3e31767f48a2e",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 700,
        "y": 1580,
        "wires": [
            [
                "4050f5da9a95c798",
                "11a60b4fbfed6126"
            ]
        ]
    },
    {
        "id": "11a60b4fbfed6126",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Maintenance",
        "func": "var vStatus = msg.payload[0].Status;\nvar STS = 0;\nif( vStatus ==\"Success\"){\n    flow.set('vAlert','2')\n}\n\nSTS = 2;\n\nmsg.payload = STS;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1580,
        "wires": [
            [
                "d0e7d5b68d69c079"
            ]
        ]
    },
    {
        "id": "d0e7d5b68d69c079",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "0867ccc073e26a77"
        ],
        "x": 995,
        "y": 1580,
        "wires": []
    },
    {
        "id": "665e21196d9761fd",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "fee967d2286e2a1b"
        ],
        "x": 885,
        "y": 1900,
        "wires": []
    },
    {
        "id": "56e666d9e4fc1f14",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "fee967d2286e2a1b"
        ],
        "x": 875,
        "y": 1660,
        "wires": []
    },
    {
        "id": "2a95526bf6a547ea",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set OEE Hr-1",
        "func": "flow.set('vHrDT',0);\nflow.set('vHrDataQTY',0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "d17bc12ea6176936",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Hr-1 Qty",
        "func": "let vData = msg.payload;\nlet vDateNow = new Date();\nlet vHour = vDateNow.getHours();\n\nvar vHrQTY = 0;\nvar vHNow = vConvertHr(vHour-1);\n\nvHrDataQTY = vData[0].data[0][vHNow];\nflow.set('vHrDataQTY',vHrDataQTY);\nmsg.payload = vHrDataQTY;//vHrDataQTY;\n\nreturn msg;\n\n\nfunction vConvertHr(vH)\n{\n    var rH = 0;\n    \n    switch(vH){\n        case 19:\n            rH = 0;\n        break;\n        case 20:\n            rH = 1;\n        break;\n        case 21:\n            rH = 2;\n        break;\n        case 22:\n            rH = 3;\n        break;\n        case 23:\n            rH = 4;\n        break;\n        case 0:\n            rH = 5;\n        break;\n        case 1:\n            rH = 6;\n        break;\n        case 2:\n            rH = 7;\n        break;\n        case 3:\n            rH = 8;\n        break;\n        case 4:\n            rH = 9;\n        break;\n        case 5:\n            rH = 10;\n        break;\n        case 6:\n            rH = 11;\n        break;\n        case 7:\n            rH = 12;\n        break;\n        case 8:\n            rH = 13;\n        break;\n        case 9:\n            rH = 14;\n        break;\n        case 10:\n            rH = 15;\n        break;\n        case 11:\n            rH = 16;\n        break;\n        case 12:\n            rH = 17;\n        break;\n        case 13:\n            rH = 18;\n        break;\n        case 14:\n            rH = 19;\n        break;\n        case 15:\n            rH = 20;\n        break;\n        case 16:\n            rH = 21;\n        break;\n        case 17:\n            rH = 22;\n        break;\n        case 18:\n            rH = 23;\n        break;\n    }\n    return rH;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2260,
        "y": 620,
        "wires": [
            [
                "c61990bbfc2c5099"
            ]
        ]
    },
    {
        "id": "36d7faa6e7c42941",
        "type": "function",
        "z": "654ceb9908184e3c",
        "d": true,
        "name": "Hr-1 OEE",
        "func": "var vHrDT = flow.get('vHrDT');\nvar vHrDataQTY = flow.get('vHrDataQTY');\nlet vCT = flow.get('vCT');\n\nvar vOEEHr = ((vHrDataQTY)/3600) * 100;\nvOEEHr = vOEEHr.toFixed(2);\n\nflow.set('vOEEHrNoti',vOEEHr);\n\nmsg.payload = vOEEHr;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3560,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "7f674a8e040995a4",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Hr-1 DonwTime",
        "func": "var vData = msg.payload;\n\nlet vDateNow = new Date();\nlet vHour = vDateNow.getHours();\n\nvar vHrDT = 0;\nvar vHrDataCO = 0;\nvar vHrDataMT = 0;\nvar vHrDataWM = 0;\nvar vHrDataQI = 0;\nvar vHrDataUN = 0;\nvar vHNow = vConvertHr(vHour-1);\n\nvHrDataCO = vData[0].data[0][vHNow];\nvHrDataMT = vData[0].data[1][vHNow];\nvHrDataWM = vData[0].data[2][vHNow];\nvHrDataQI = vData[0].data[3][vHNow];\nvHrDataUN = vData[0].data[4][vHNow];\n\nvHrDT = vHrDataCO + vHrDataMT + vHrDataWM + vHrDataQI + vHrDataUN;\n\nflow.set('vHrDT',vHrDT);\n\nmsg.payload = vHrDT;\n\nreturn msg;\n\n\nfunction vConvertHr(vH)\n{\n    var rH = 0;\n    \n    switch(vH){\n        case 19:\n            rH = 0;\n        break;\n        case 20:\n            rH = 1;\n        break;\n        case 21:\n            rH = 2;\n        break;\n        case 22:\n            rH = 3;\n        break;\n        case 23:\n            rH = 4;\n        break;\n        case 0:\n            rH = 5;\n        break;\n        case 1:\n            rH = 6;\n        break;\n        case 2:\n            rH = 7;\n        break;\n        case 3:\n            rH = 8;\n        break;\n        case 4:\n            rH = 9;\n        break;\n        case 5:\n            rH = 10;\n        break;\n        case 6:\n            rH = 11;\n        break;\n        case 7:\n            rH = 12;\n        break;\n        case 8:\n            rH = 13;\n        break;\n        case 9:\n            rH = 14;\n        break;\n        case 10:\n            rH = 15;\n        break;\n        case 11:\n            rH = 16;\n        break;\n        case 12:\n            rH = 17;\n        break;\n        case 13:\n            rH = 18;\n        break;\n        case 14:\n            rH = 19;\n        break;\n        case 15:\n            rH = 20;\n        break;\n        case 16:\n            rH = 21;\n        break;\n        case 17:\n            rH = 22;\n        break;\n        case 18:\n            rH = 23;\n        break;\n    }\n    return rH;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2280,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "c61990bbfc2c5099",
        "type": "ui_gauge",
        "z": "654ceb9908184e3c",
        "name": "gROEEHr",
        "group": "b1608af4.f56c58",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "donut",
        "title": "Last OEE Hr.",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ff0000",
            "#ffff00",
            "#00ff00"
        ],
        "seg1": "30",
        "seg2": "50",
        "x": 2460,
        "y": 620,
        "wires": []
    },
    {
        "id": "4fa273dde9689668",
        "type": "tcp out",
        "z": "654ceb9908184e3c",
        "name": "Main OEE",
        "host": "200.100.100.228",
        "port": "18819",
        "beserver": "client",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 1640,
        "y": 1320,
        "wires": []
    },
    {
        "id": "3ed489b70bcfc699",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 1440,
        "y": 700,
        "wires": [
            [
                "4c0a6faabfee3614"
            ]
        ]
    },
    {
        "id": "e295a88c81da4965",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_OEE_GET_RT_DATE_CAL",
        "func": "var vLine = flow.get('vLineGet');\nvar vStartDate = flow.get('vStartDateGet');\nlet vPrecess = 'Reflow';\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OEE_GET_RT_DATE_CAL] \" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + vStartDate + \"\\',\" + \"\\'\" + vPrecess + \"\\'\";\n\nmsg.payload = t; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 700,
        "wires": [
            [
                "3ed489b70bcfc699"
            ]
        ]
    },
    {
        "id": "4c0a6faabfee3614",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Chart RT Data",
        "func": "var vRow = msg.payload.length\nvar vData = msg.payload;\n\nflow.set('calQty00',0);\nflow.set('calQty01',0);\nflow.set('calQty02',0);\nflow.set('calQty03',0);\nflow.set('calQty04',0);\nflow.set('calQty05',0);\nflow.set('calQty06',0);\nflow.set('calQty07',0);\nflow.set('calQty08',0);\nflow.set('calQty09',0);\nflow.set('calQty10',0);\nflow.set('calQty11',0);\nflow.set('calQty12',0);\nflow.set('calQty13',0);\nflow.set('calQty14',0);\nflow.set('calQty15',0);\nflow.set('calQty16',0);\nflow.set('calQty17',0);\nflow.set('calQty18',0);\nflow.set('calQty19',0);\nflow.set('calQty20',0);\nflow.set('calQty21',0);\nflow.set('calQty22',0);\nflow.set('calQty23',0);\n\nlet vQty = 0;\n\nfor(i = 0;i < vRow; i++)\n{\n    if(vData[i].Hour == 0){flow.set('calQty00',vData[i].Qty);}\n    if(vData[i].Hour == 1){flow.set('calQty01',vData[i].Qty);}\n    if(vData[i].Hour == 2){flow.set('calQty02',vData[i].Qty);}\n    if(vData[i].Hour == 3){flow.set('calQty03',vData[i].Qty);}\n    if(vData[i].Hour == 4){flow.set('calQty04',vData[i].Qty);}\n    if(vData[i].Hour == 5){flow.set('calQty05',vData[i].Qty);}\n    if(vData[i].Hour == 6){flow.set('calQty06',vData[i].Qty);}\n    if(vData[i].Hour == 7){flow.set('calQty07',vData[i].Qty);}\n    if(vData[i].Hour == 8){flow.set('calQty08',vData[i].Qty);}\n    if(vData[i].Hour == 9){flow.set('calQty09',vData[i].Qty);}\n    if(vData[i].Hour == 10){flow.set('calQty10',vData[i].Qty);}\n    if(vData[i].Hour == 11){flow.set('calQty11',vData[i].Qty);}\n    if(vData[i].Hour == 12){flow.set('calQty12',vData[i].Qty);}\n    if(vData[i].Hour == 13){flow.set('calQty13',vData[i].Qty);}\n    if(vData[i].Hour == 14){flow.set('calQty14',vData[i].Qty);}\n    if(vData[i].Hour == 15){flow.set('calQty15',vData[i].Qty);}\n    if(vData[i].Hour == 16){flow.set('calQty16',vData[i].Qty);}\n    if(vData[i].Hour == 17){flow.set('calQty17',vData[i].Qty);}\n    if(vData[i].Hour == 18){flow.set('calQty18',vData[i].Qty);}\n    if(vData[i].Hour == 19){flow.set('calQty19',vData[i].Qty);}\n    if(vData[i].Hour == 20){flow.set('calQty20',vData[i].Qty);}\n    if(vData[i].Hour == 21){flow.set('calQty21',vData[i].Qty);}\n    if(vData[i].Hour == 22){flow.set('calQty22',vData[i].Qty);}\n    if(vData[i].Hour == 23){flow.set('calQty23',vData[i].Qty);}\n    \n    vQty += vData[i].TotalQty;\n}\nflow.set('vACTQTY',vQty);\nmsg.payload = vQty;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 700,
        "wires": [
            [
                "65a6dea59ba71eb7",
                "088798d457a7ea2f"
            ]
        ]
    },
    {
        "id": "ba03a3fa0068fadf",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_INS_TRACKING_GROUP",
        "func": "let vLine = flow.get('vLine');\nlet vGroup = flow.get('vGroup');\nlet vTracking = flow.get('vTracking');\nlet vChkModel = flow.get('vChkModel');\n\nif(vTracking.length >= 10 && vGroup != \"\" && vChkModel == \"1\")\n{\n    var t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_INS_TRACKING_GROUP] \" + \"\\'\" + vTracking + \"\\'\" + \",\\'\" + vLine + \"\\'\" + \",\\'\" + vGroup + \"\\'\";\n    \n    msg.payload = t; \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 480,
        "wires": [
            [
                "1408d050675da385"
            ]
        ]
    },
    {
        "id": "1408d050675da385",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 480,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "fb147e2a42c3320f",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Date to Group",
        "func": "let vRST = msg.payload;\n\n//if(vRST == \"0\")\n//{\n    var d = new Date();\n    let vLine = flow.get('vLine');\n    \n   let t1 = String(d.getFullYear()) + String(addZero((d.getMonth()+1))) \n            + String(addZero(d.getDate())) + String(addZero(d.getHours())) \n            + String(addZero(d.getMinutes())) + String(addZero(d.getSeconds()));\n    \n    msg.payload =  Buffer.from(vLine + t1).toString('base64');\n    \n    return msg\n//}\n\nfunction addZero(i) {\n  if (i < 10) {\n    i = \"0\" + i;\n  }\n  return i;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 440,
        "wires": [
            [
                "7eba0db849d701ea"
            ]
        ]
    },
    {
        "id": "7eba0db849d701ea",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set Group",
        "func": "let vGroup = msg.payload;\nflow.set('vGroup',vGroup);\n\nmsg.payload = vGroup;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "e3685d8ece07d70e",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "3893653d060a5723"
        ],
        "x": 55,
        "y": 480,
        "wires": [
            [
                "ba03a3fa0068fadf"
            ]
        ]
    },
    {
        "id": "d75be9a65b0f78ca",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "UPD Tracking Monitor",
        "func": "let vLine = flow.get('vLine');\nlet vTracking = msg.payload[0].SEIBAN_CD;\nlet vSQLTexe = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_TRACKING_MONITOR] \\'\" + \"Plan Stop\" + \"\\',\" + \"\\'\" + vLine + \"\\'\";\nmsg.payload = vSQLTexe;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1300,
        "wires": [
            [
                "615367b517efe999"
            ]
        ]
    },
    {
        "id": "615367b517efe999",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1140,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "5b2815f57de74b56",
        "type": "ui_dropdown",
        "z": "654ceb9908184e3c",
        "name": "Side",
        "label": "Side",
        "tooltip": "",
        "place": "Select option",
        "group": "24971256.5d07c6",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "A",
                "value": "A",
                "type": "str"
            },
            {
                "label": "B",
                "value": "B",
                "type": "str"
            },
            {
                "label": "WSM",
                "value": "WSM",
                "type": "str"
            },
            {
                "label": "A+B",
                "value": "A+B",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 310,
        "y": 520,
        "wires": [
            [
                "9731e8a04aa27f7f"
            ]
        ]
    },
    {
        "id": "9731e8a04aa27f7f",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_UPD_SIDE_MONITOR",
        "func": "let vSide = msg.payload;\nflow.set('vSide',vSide);\n\nlet vLine = flow.get('vLine');\nlet t = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_SIDE_MONITOR] \" + \"\\'\" + vLine + \"\\',\\'\" + vSide + \"\\'\";\nmsg.payload = t \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 520,
        "wires": [
            [
                "179747a2befdf3ac"
            ]
        ]
    },
    {
        "id": "2a6f3277d972bb05",
        "type": "change",
        "z": "654ceb9908184e3c",
        "name": "Clear Issue",
        "rules": [
            {
                "t": "change",
                "p": "options",
                "pt": "msg",
                "from": "",
                "fromt": "str",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 520,
        "wires": [
            [
                "5b2815f57de74b56"
            ]
        ]
    },
    {
        "id": "179747a2befdf3ac",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 460,
        "y": 560,
        "wires": [
            [
                "878689aa6dc71b01"
            ]
        ]
    },
    {
        "id": "98f19579d4b5de37",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_OEE_GET_Performance_LINE",
        "func": "var vLine = flow.get('vLineGet');\nvar vStartDate = flow.get('vStartDateGet');\nlet vProcess = 'Reflow';\n\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OEE_GET_Performance_LINE] \" + \"\\'\" + vLine + \"\\'\";\n\nmsg.payload = t; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 820,
        "wires": [
            [
                "24b174aaa848df67"
            ]
        ]
    },
    {
        "id": "24b174aaa848df67",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 1440,
        "y": 820,
        "wires": [
            [
                "7efdbdda7fdf52a0",
                "e7e033dd50d1f902",
                "574288ccc38ad4a8"
            ]
        ]
    },
    {
        "id": "7efdbdda7fdf52a0",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Performance",
        "func": "let vDataP = msg.payload;\nlet vPerformance = vDataP[0].Performance;\n\nlet pPerf = vPerformance.toFixed(2);\nmsg.payload = vPerformance;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 820,
        "wires": [
            [
                "da2d093f8284c07b"
            ]
        ]
    },
    {
        "id": "b8af3a54111ddf3f",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_OEE_GET_DT_DATE_CAL",
        "func": "var vLine = flow.get('vLineGet');\nvar vStartDate = flow.get('vStartDateGet');\nlet vProcess = 'Reflow';\n\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OEE_GET_DT_DATE_CAL] \" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + vStartDate + \"\\',\" + \"\\'\" + vProcess + \"\\'\";\n\nmsg.payload = t; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 740,
        "wires": [
            [
                "5ff1107627ef64c0"
            ]
        ]
    },
    {
        "id": "5ff1107627ef64c0",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 1440,
        "y": 740,
        "wires": [
            [
                "c2e829143966af7c"
            ]
        ]
    },
    {
        "id": "c2e829143966af7c",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Chart DT Data",
        "func": "var vRow = msg.payload.length\nvar vData = msg.payload;\nfor(let i = 0;i < vRow; i++)\n{\n    if(vData[i].Hour == 0 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO00',vData[i].TotalTimes);}\n    if(vData[i].Hour == 1 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO01',vData[i].TotalTimes);}\n    if(vData[i].Hour == 2 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO02',vData[i].TotalTimes);}\n    if(vData[i].Hour == 3 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO03',vData[i].TotalTimes);}\n    if(vData[i].Hour == 4 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO04',vData[i].TotalTimes);}\n    if(vData[i].Hour == 5 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO05',vData[i].TotalTimes);}\n    if(vData[i].Hour == 6 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO06',vData[i].TotalTimes);}\n    if(vData[i].Hour == 7 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO07',vData[i].TotalTimes);}\n    if(vData[i].Hour == 8 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO08',vData[i].TotalTimes);}\n    if(vData[i].Hour == 9 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO09',vData[i].TotalTimes);}\n    if(vData[i].Hour == 10 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO10',vData[i].TotalTimes);}\n    if(vData[i].Hour == 11 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO11',vData[i].TotalTimes);}\n    if(vData[i].Hour == 12 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO12',vData[i].TotalTimes);}\n    if(vData[i].Hour == 13 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO13',vData[i].TotalTimes);}\n    if(vData[i].Hour == 14 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO14',vData[i].TotalTimes);}\n    if(vData[i].Hour == 15 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO15',vData[i].TotalTimes);}\n    if(vData[i].Hour == 16 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO16',vData[i].TotalTimes);}\n    if(vData[i].Hour == 17 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO17',vData[i].TotalTimes);}\n    if(vData[i].Hour == 18 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO18',vData[i].TotalTimes);}\n    if(vData[i].Hour == 19 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO19',vData[i].TotalTimes);}\n    if(vData[i].Hour == 20 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO20',vData[i].TotalTimes);}\n    if(vData[i].Hour == 21 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO21',vData[i].TotalTimes);}\n    if(vData[i].Hour == 22 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO22',vData[i].TotalTimes);}\n    if(vData[i].Hour == 23 && vData[i].BreakDownDESC == 'Change Over'){flow.set('cDTCO23',vData[i].TotalTimes);}\n    \n    if(vData[i].Hour == 0 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT00',vData[i].TotalTimes);}\n    if(vData[i].Hour == 1 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT01',vData[i].TotalTimes);}\n    if(vData[i].Hour == 2 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT02',vData[i].TotalTimes);}\n    if(vData[i].Hour == 3 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT03',vData[i].TotalTimes);}\n    if(vData[i].Hour == 4 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT04',vData[i].TotalTimes);}\n    if(vData[i].Hour == 5 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT05',vData[i].TotalTimes);}\n    if(vData[i].Hour == 6 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT06',vData[i].TotalTimes);}\n    if(vData[i].Hour == 7 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT07',vData[i].TotalTimes);}\n    if(vData[i].Hour == 8 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT08',vData[i].TotalTimes);}\n    if(vData[i].Hour == 9 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT09',vData[i].TotalTimes);}\n    if(vData[i].Hour == 10 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT10',vData[i].TotalTimes);}\n    if(vData[i].Hour == 11 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT11',vData[i].TotalTimes);}\n    if(vData[i].Hour == 12 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT12',vData[i].TotalTimes);}\n    if(vData[i].Hour == 13 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT13',vData[i].TotalTimes);}\n    if(vData[i].Hour == 14 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT14',vData[i].TotalTimes);}\n    if(vData[i].Hour == 15 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT15',vData[i].TotalTimes);}\n    if(vData[i].Hour == 16 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT16',vData[i].TotalTimes);}\n    if(vData[i].Hour == 17 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT17',vData[i].TotalTimes);}\n    if(vData[i].Hour == 18 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT18',vData[i].TotalTimes);}\n    if(vData[i].Hour == 19 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT19',vData[i].TotalTimes);}\n    if(vData[i].Hour == 20 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT20',vData[i].TotalTimes);}\n    if(vData[i].Hour == 21 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT21',vData[i].TotalTimes);}\n    if(vData[i].Hour == 22 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT22',vData[i].TotalTimes);}\n    if(vData[i].Hour == 23 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('cDTMT23',vData[i].TotalTimes);}\n    \n    if(vData[i].Hour == 0 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM00',vData[i].TotalTimes);}\n    if(vData[i].Hour == 1 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM01',vData[i].TotalTimes);}\n    if(vData[i].Hour == 2 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM02',vData[i].TotalTimes);}\n    if(vData[i].Hour == 3 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM03',vData[i].TotalTimes);}\n    if(vData[i].Hour == 4 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM04',vData[i].TotalTimes);}\n    if(vData[i].Hour == 5 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM05',vData[i].TotalTimes);}\n    if(vData[i].Hour == 6 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM06',vData[i].TotalTimes);}\n    if(vData[i].Hour == 7 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM07',vData[i].TotalTimes);}\n    if(vData[i].Hour == 8 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM08',vData[i].TotalTimes);}\n    if(vData[i].Hour == 9 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM09',vData[i].TotalTimes);}\n    if(vData[i].Hour == 10 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM10',vData[i].TotalTimes);}\n    if(vData[i].Hour == 11 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM11',vData[i].TotalTimes);}\n    if(vData[i].Hour == 12 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM12',vData[i].TotalTimes);}\n    if(vData[i].Hour == 13 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM13',vData[i].TotalTimes);}\n    if(vData[i].Hour == 14 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM14',vData[i].TotalTimes);}\n    if(vData[i].Hour == 15 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM15',vData[i].TotalTimes);}\n    if(vData[i].Hour == 16 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM16',vData[i].TotalTimes);}\n    if(vData[i].Hour == 17 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM17',vData[i].TotalTimes);}\n    if(vData[i].Hour == 18 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM18',vData[i].TotalTimes);}\n    if(vData[i].Hour == 19 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM19',vData[i].TotalTimes);}\n    if(vData[i].Hour == 20 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM20',vData[i].TotalTimes);}\n    if(vData[i].Hour == 21 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM21',vData[i].TotalTimes);}\n    if(vData[i].Hour == 22 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM22',vData[i].TotalTimes);}\n    if(vData[i].Hour == 23 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('cDTWM23',vData[i].TotalTimes);}\n    \n    if(vData[i].Hour == 0 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI00',vData[i].TotalTimes);}\n    if(vData[i].Hour == 1 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI01',vData[i].TotalTimes);}\n    if(vData[i].Hour == 2 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI02',vData[i].TotalTimes);}\n    if(vData[i].Hour == 3 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI03',vData[i].TotalTimes);}\n    if(vData[i].Hour == 4 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI04',vData[i].TotalTimes);}\n    if(vData[i].Hour == 5 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI05',vData[i].TotalTimes);}\n    if(vData[i].Hour == 6 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI06',vData[i].TotalTimes);}\n    if(vData[i].Hour == 7 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI07',vData[i].TotalTimes);}\n    if(vData[i].Hour == 8 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI08',vData[i].TotalTimes);}\n    if(vData[i].Hour == 9 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI09',vData[i].TotalTimes);}\n    if(vData[i].Hour == 10 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI10',vData[i].TotalTimes);}\n    if(vData[i].Hour == 11 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI11',vData[i].TotalTimes);}\n    if(vData[i].Hour == 12 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI12',vData[i].TotalTimes);}\n    if(vData[i].Hour == 13 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI13',vData[i].TotalTimes);}\n    if(vData[i].Hour == 14 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI14',vData[i].TotalTimes);}\n    if(vData[i].Hour == 15 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI15',vData[i].TotalTimes);}\n    if(vData[i].Hour == 16 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI16',vData[i].TotalTimes);}\n    if(vData[i].Hour == 17 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI17',vData[i].TotalTimes);}\n    if(vData[i].Hour == 18 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI18',vData[i].TotalTimes);}\n    if(vData[i].Hour == 19 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI19',vData[i].TotalTimes);}\n    if(vData[i].Hour == 20 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI20',vData[i].TotalTimes);}\n    if(vData[i].Hour == 21 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI21',vData[i].TotalTimes);}\n    if(vData[i].Hour == 22 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI22',vData[i].TotalTimes);}\n    if(vData[i].Hour == 23 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('cDTQI23',vData[i].TotalTimes);}\n    \n    if(vData[i].Hour == 0 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS00',vData[i].TotalTimes);}\n    if(vData[i].Hour == 1 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS01',vData[i].TotalTimes);}\n    if(vData[i].Hour == 2 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS02',vData[i].TotalTimes);}\n    if(vData[i].Hour == 3 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS03',vData[i].TotalTimes);}\n    if(vData[i].Hour == 4 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS04',vData[i].TotalTimes);}\n    if(vData[i].Hour == 5 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS05',vData[i].TotalTimes);}\n    if(vData[i].Hour == 6 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS06',vData[i].TotalTimes);}\n    if(vData[i].Hour == 7 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS07',vData[i].TotalTimes);}\n    if(vData[i].Hour == 8 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS08',vData[i].TotalTimes);}\n    if(vData[i].Hour == 9 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS09',vData[i].TotalTimes);}\n    if(vData[i].Hour == 10 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS10',vData[i].TotalTimes);}\n    if(vData[i].Hour == 11 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS11',vData[i].TotalTimes);}\n    if(vData[i].Hour == 12 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS12',vData[i].TotalTimes);}\n    if(vData[i].Hour == 13 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS13',vData[i].TotalTimes);}\n    if(vData[i].Hour == 14 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS14',vData[i].TotalTimes);}\n    if(vData[i].Hour == 15 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS15',vData[i].TotalTimes);}\n    if(vData[i].Hour == 16 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS16',vData[i].TotalTimes);}\n    if(vData[i].Hour == 17 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS17',vData[i].TotalTimes);}\n    if(vData[i].Hour == 18 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS18',vData[i].TotalTimes);}\n    if(vData[i].Hour == 19 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS19',vData[i].TotalTimes);}\n    if(vData[i].Hour == 20 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS20',vData[i].TotalTimes);}\n    if(vData[i].Hour == 21 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS21',vData[i].TotalTimes);}\n    if(vData[i].Hour == 22 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS22',vData[i].TotalTimes);}\n    if(vData[i].Hour == 23 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('cDTPS23',vData[i].TotalTimes);}\n    \n    if(vData[i].Hour == 0 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM00',vData[i].TotalTimes);}\n    if(vData[i].Hour == 1 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM01',vData[i].TotalTimes);}\n    if(vData[i].Hour == 2 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM02',vData[i].TotalTimes);}\n    if(vData[i].Hour == 3 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM03',vData[i].TotalTimes);}\n    if(vData[i].Hour == 4 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM04',vData[i].TotalTimes);}\n    if(vData[i].Hour == 5 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM05',vData[i].TotalTimes);}\n    if(vData[i].Hour == 6 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM06',vData[i].TotalTimes);}\n    if(vData[i].Hour == 7 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM07',vData[i].TotalTimes);}\n    if(vData[i].Hour == 8 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM08',vData[i].TotalTimes);}\n    if(vData[i].Hour == 9 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM09',vData[i].TotalTimes);}\n    if(vData[i].Hour == 10 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM10',vData[i].TotalTimes);}\n    if(vData[i].Hour == 11 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM11',vData[i].TotalTimes);}\n    if(vData[i].Hour == 12 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM12',vData[i].TotalTimes);}\n    if(vData[i].Hour == 13 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM13',vData[i].TotalTimes);}\n    if(vData[i].Hour == 14 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM14',vData[i].TotalTimes);}\n    if(vData[i].Hour == 15 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM15',vData[i].TotalTimes);}\n    if(vData[i].Hour == 16 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM16',vData[i].TotalTimes);}\n    if(vData[i].Hour == 17 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM17',vData[i].TotalTimes);}\n    if(vData[i].Hour == 18 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM18',vData[i].TotalTimes);}\n    if(vData[i].Hour == 19 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM19',vData[i].TotalTimes);}\n    if(vData[i].Hour == 20 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM20',vData[i].TotalTimes);}\n    if(vData[i].Hour == 21 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM21',vData[i].TotalTimes);}\n    if(vData[i].Hour == 22 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM22',vData[i].TotalTimes);}\n    if(vData[i].Hour == 23 && vData[i].BreakDownDESC == 'New Model'){flow.set('cDTNM23',vData[i].TotalTimes);}\n}\n//msg.payload = vData[2].Hour;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 740,
        "wires": [
            [
                "a454bb40e75db741",
                "f6df78c71b9791f4"
            ]
        ]
    },
    {
        "id": "f6df78c71b9791f4",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Cal DownTime",
        "func": "let cDTCO19 = flow.get('cDTCO19');\ncDTCO19 = (cDTCO19 === undefined) ? 0: cDTCO19; \nlet cDTCO20 = flow.get('cDTCO20');\ncDTCO20 = (cDTCO20 === undefined) ? 0: cDTCO20;\nlet cDTCO21 = flow.get('cDTCO21');\ncDTCO21 = (cDTCO21 === undefined) ? 0: cDTCO21;\nlet cDTCO22 = flow.get('cDTCO22');\ncDTCO22 = (cDTCO22 === undefined) ? 0: cDTCO22;\nlet cDTCO23 = flow.get('cDTCO23');\ncDTCO23 = (cDTCO23 === undefined) ? 0: cDTCO23;\nlet cDTCO00 = flow.get('cDTCO00');\ncDTCO00 = (cDTCO00 === undefined) ? 0: cDTCO00;\nlet cDTCO01 = flow.get('cDTCO01');\ncDTCO01 = (cDTCO01 === undefined) ? 0: cDTCO01;\nlet cDTCO02 = flow.get('cDTCO02');\ncDTCO02 = (cDTCO02 === undefined) ? 0: cDTCO02;\nlet cDTCO03 = flow.get('cDTCO03');\ncDTCO03 = (cDTCO03 === undefined) ? 0: cDTCO03;\nlet cDTCO04 = flow.get('cDTCO04');\ncDTCO04 = (cDTCO04 === undefined) ? 0: cDTCO04;\nlet cDTCO05 = flow.get('cDTCO05');\ncDTCO05 = (cDTCO05 === undefined) ? 0: cDTCO05;\nlet cDTCO06 = flow.get('cDTCO06');\ncDTCO06 = (cDTCO06 === undefined) ? 0: cDTCO06;\nlet cDTCO07 = flow.get('cDTCO07');\ncDTCO07 = (cDTCO07 === undefined) ? 0: cDTCO07;\nlet cDTCO08 = flow.get('cDTCO08');\ncDTCO08 = (cDTCO08 === undefined) ? 0: cDTCO08;\nlet cDTCO09 = flow.get('cDTCO09');\ncDTCO09 = (cDTCO09 === undefined) ? 0: cDTCO09;\nlet cDTCO10 = flow.get('cDTCO10');\ncDTCO10 = (cDTCO10 === undefined) ? 0: cDTCO10;\nlet cDTCO11 = flow.get('cDTCO11');\ncDTCO11 = (cDTCO11 === undefined) ? 0: cDTCO11;\nlet cDTCO12 = flow.get('cDTCO12');\ncDTCO12 = (cDTCO12 === undefined) ? 0: cDTCO12;\nlet cDTCO13 = flow.get('cDTCO13');\ncDTCO13 = (cDTCO13 === undefined) ? 0: cDTCO13;\nlet cDTCO14 = flow.get('cDTCO14');\ncDTCO14 = (cDTCO14 === undefined) ? 0: cDTCO14;\nlet cDTCO15 = flow.get('cDTCO15');\ncDTCO15 = (cDTCO15 === undefined) ? 0: cDTCO15;\nlet cDTCO16 = flow.get('cDTCO16');\ncDTCO16 = (cDTCO16 === undefined) ? 0: cDTCO16;\nlet cDTCO17 = flow.get('cDTCO17');\ncDTCO17 = (cDTCO17 === undefined) ? 0: cDTCO17;\nlet cDTCO18 = flow.get('cDTCO18');\ncDTCO18 = (cDTCO18 === undefined) ? 0: cDTCO18;\n\nlet cDTMT19 = flow.get('cDTMT19');\ncDTMT19 = (cDTMT19 === undefined) ? 0: cDTMT19; \nlet cDTMT20 = flow.get('cDTMT20');\ncDTMT20 = (cDTMT20 === undefined) ? 0: cDTMT20;\nlet cDTMT21 = flow.get('cDTMT21');\ncDTMT21 = (cDTMT21 === undefined) ? 0: cDTMT21;\nlet cDTMT22 = flow.get('cDTMT22');\ncDTMT22 = (cDTMT22 === undefined) ? 0: cDTMT22;\nlet cDTMT23 = flow.get('cDTMT23');\ncDTMT23 = (cDTMT23 === undefined) ? 0: cDTMT23;\nlet cDTMT00 = flow.get('cDTMT00');\ncDTMT00 = (cDTMT00 === undefined) ? 0: cDTMT00;\nlet cDTMT01 = flow.get('cDTMT01');\ncDTMT01 = (cDTMT01 === undefined) ? 0: cDTMT01;\nlet cDTMT02 = flow.get('cDTMT02');\ncDTMT02 = (cDTMT02 === undefined) ? 0: cDTMT02;\nlet cDTMT03 = flow.get('cDTMT03');\ncDTMT03 = (cDTMT03 === undefined) ? 0: cDTMT03;\nlet cDTMT04 = flow.get('cDTMT04');\ncDTMT04 = (cDTMT04 === undefined) ? 0: cDTMT04;\nlet cDTMT05 = flow.get('cDTMT05');\ncDTMT05 = (cDTMT05 === undefined) ? 0: cDTMT05;\nlet cDTMT06 = flow.get('cDTMT06');\ncDTMT06 = (cDTMT06 === undefined) ? 0: cDTMT06;\nlet cDTMT07 = flow.get('cDTMT07');\ncDTMT07 = (cDTMT07 === undefined) ? 0: cDTMT07;\nlet cDTMT08 = flow.get('cDTMT08');\ncDTMT08 = (cDTMT08 === undefined) ? 0: cDTMT08;\nlet cDTMT09 = flow.get('cDTMT09');\ncDTMT09 = (cDTMT09 === undefined) ? 0: cDTMT09;\nlet cDTMT10 = flow.get('cDTMT10');\ncDTMT10 = (cDTMT10 === undefined) ? 0: cDTMT10;\nlet cDTMT11 = flow.get('cDTMT11');\ncDTMT11 = (cDTMT11 === undefined) ? 0: cDTMT11;\nlet cDTMT12 = flow.get('cDTMT12');\ncDTMT12 = (cDTMT12 === undefined) ? 0: cDTMT12;\nlet cDTMT13 = flow.get('cDTMT13');\ncDTMT13 = (cDTMT13 === undefined) ? 0: cDTMT13;\nlet cDTMT14 = flow.get('cDTMT14');\ncDTMT14 = (cDTMT14 === undefined) ? 0: cDTMT14;\nlet cDTMT15 = flow.get('cDTMT15');\ncDTMT15 = (cDTMT15 === undefined) ? 0: cDTMT15;\nlet cDTMT16 = flow.get('cDTMT16');\ncDTMT16 = (cDTMT16 === undefined) ? 0: cDTMT16;\nlet cDTMT17 = flow.get('cDTMT17');\ncDTMT17 = (cDTMT17 === undefined) ? 0: cDTMT17;\nlet cDTMT18 = flow.get('cDTMT18');\ncDTMT18 = (cDTMT18 === undefined) ? 0: cDTMT18;\n\nlet cDTWM19 = flow.get('cDTWM19');\ncDTWM19 = (cDTWM19 === undefined) ? 0: cDTWM19; \nlet cDTWM20 = flow.get('cDTWM20');\ncDTWM20 = (cDTWM20 === undefined) ? 0: cDTWM20;\nlet cDTWM21 = flow.get('cDTWM21');\ncDTWM21 = (cDTWM21 === undefined) ? 0: cDTWM21;\nlet cDTWM22 = flow.get('cDTWM22');\ncDTWM22 = (cDTWM22 === undefined) ? 0: cDTWM22;\nlet cDTWM23 = flow.get('cDTWM23');\ncDTWM23 = (cDTWM23 === undefined) ? 0: cDTWM23;\nlet cDTWM00 = flow.get('cDTWM00');\ncDTWM00 = (cDTWM00 === undefined) ? 0: cDTWM00;\nlet cDTWM01 = flow.get('cDTWM01');\ncDTWM01 = (cDTWM01 === undefined) ? 0: cDTWM01;\nlet cDTWM02 = flow.get('cDTWM02');\ncDTWM02 = (cDTWM02 === undefined) ? 0: cDTWM02;\nlet cDTWM03 = flow.get('cDTWM03');\ncDTWM03 = (cDTWM03 === undefined) ? 0: cDTWM03;\nlet cDTWM04 = flow.get('cDTWM04');\ncDTWM04 = (cDTWM04 === undefined) ? 0: cDTWM04;\nlet cDTWM05 = flow.get('cDTWM05');\ncDTWM05 = (cDTWM05 === undefined) ? 0: cDTWM05;\nlet cDTWM06 = flow.get('cDTWM06');\ncDTWM06 = (cDTWM06 === undefined) ? 0: cDTWM06;\nlet cDTWM07 = flow.get('cDTWM07');\ncDTWM07 = (cDTWM07 === undefined) ? 0: cDTWM07;\nlet cDTWM08 = flow.get('cDTWM08');\ncDTWM08 = (cDTWM08 === undefined) ? 0: cDTWM08;\nlet cDTWM09 = flow.get('cDTWM09');\ncDTWM09 = (cDTWM09 === undefined) ? 0: cDTWM09;\nlet cDTWM10 = flow.get('cDTWM10');\ncDTWM10 = (cDTWM10 === undefined) ? 0: cDTWM10;\nlet cDTWM11 = flow.get('cDTWM11');\ncDTWM11 = (cDTWM11 === undefined) ? 0: cDTWM11;\nlet cDTWM12 = flow.get('cDTWM12');\ncDTWM12 = (cDTWM12 === undefined) ? 0: cDTWM12;\nlet cDTWM13 = flow.get('cDTWM13');\ncDTWM13 = (cDTWM13 === undefined) ? 0: cDTWM13;\nlet cDTWM14 = flow.get('cDTWM14');\ncDTWM14 = (cDTWM14 === undefined) ? 0: cDTWM14;\nlet cDTWM15 = flow.get('cDTWM15');\ncDTWM15 = (cDTWM15 === undefined) ? 0: cDTWM15;\nlet cDTWM16 = flow.get('cDTWM16');\ncDTWM16 = (cDTWM16 === undefined) ? 0: cDTWM16;\nlet cDTWM17 = flow.get('cDTWM17');\ncDTWM17 = (cDTWM17 === undefined) ? 0: cDTWM17;\nlet cDTWM18 = flow.get('cDTWM18');\ncDTWM18 = (cDTWM18 === undefined) ? 0: cDTWM18;\n\nlet cDTQI19 = flow.get('cDTQI19');\ncDTQI19 = (cDTQI19 === undefined) ? 0: cDTQI19; \nlet cDTQI20 = flow.get('cDTQI20');\ncDTQI20 = (cDTQI20 === undefined) ? 0: cDTQI20;\nlet cDTQI21 = flow.get('cDTQI21');\ncDTQI21 = (cDTQI21 === undefined) ? 0: cDTQI21;\nlet cDTQI22 = flow.get('cDTQI22');\ncDTQI22 = (cDTQI22 === undefined) ? 0: cDTQI22;\nlet cDTQI23 = flow.get('cDTQI23');\ncDTQI23 = (cDTQI23 === undefined) ? 0: cDTQI23;\nlet cDTQI00 = flow.get('cDTQI00');\ncDTQI00 = (cDTQI00 === undefined) ? 0: cDTQI00;\nlet cDTQI01 = flow.get('cDTQI01');\ncDTQI01 = (cDTQI01 === undefined) ? 0: cDTQI01;\nlet cDTQI02 = flow.get('cDTQI02');\ncDTQI02 = (cDTQI02 === undefined) ? 0: cDTQI02;\nlet cDTQI03 = flow.get('cDTQI03');\ncDTQI03 = (cDTQI03 === undefined) ? 0: cDTQI03;\nlet cDTQI04 = flow.get('cDTQI04');\ncDTQI04 = (cDTQI04 === undefined) ? 0: cDTQI04;\nlet cDTQI05 = flow.get('cDTQI05');\ncDTQI05 = (cDTQI05 === undefined) ? 0: cDTQI05;\nlet cDTQI06 = flow.get('cDTQI06');\ncDTQI06 = (cDTQI06 === undefined) ? 0: cDTQI06;\nlet cDTQI07 = flow.get('cDTQI07');\ncDTQI07 = (cDTQI07 === undefined) ? 0: cDTQI07;\nlet cDTQI08 = flow.get('cDTQI08');\ncDTQI08 = (cDTQI08 === undefined) ? 0: cDTQI08;\nlet cDTQI09 = flow.get('cDTQI09');\ncDTQI09 = (cDTQI09 === undefined) ? 0: cDTQI09;\nlet cDTQI10 = flow.get('cDTQI10');\ncDTQI10 = (cDTQI10 === undefined) ? 0: cDTQI10;\nlet cDTQI11 = flow.get('cDTQI11');\ncDTQI11 = (cDTQI11 === undefined) ? 0: cDTQI11;\nlet cDTQI12 = flow.get('cDTQI12');\ncDTQI12 = (cDTQI12 === undefined) ? 0: cDTQI12;\nlet cDTQI13 = flow.get('cDTQI13');\ncDTQI13 = (cDTQI13 === undefined) ? 0: cDTQI13;\nlet cDTQI14 = flow.get('cDTQI14');\ncDTQI14 = (cDTQI14 === undefined) ? 0: cDTQI14;\nlet cDTQI15 = flow.get('cDTQI15');\ncDTQI15 = (cDTQI15 === undefined) ? 0: cDTQI15;\nlet cDTQI16 = flow.get('cDTQI16');\ncDTQI16 = (cDTQI16 === undefined) ? 0: cDTQI16;\nlet cDTQI17 = flow.get('cDTQI17');\ncDTQI17 = (cDTQI17 === undefined) ? 0: cDTQI17;\nlet cDTQI18 = flow.get('cDTQI18');\ncDTQI18 = (cDTQI18 === undefined) ? 0: cDTQI18;\n\nlet cDTPS19 = flow.get('cDTPS19');\ncDTPS19 = (cDTPS19 === undefined) ? 0: cDTPS19; \nlet cDTPS20 = flow.get('cDTPS20');\ncDTPS20 = (cDTPS20 === undefined) ? 0: cDTPS20;\nlet cDTPS21 = flow.get('cDTPS21');\ncDTPS21 = (cDTPS21 === undefined) ? 0: cDTPS21;\nlet cDTPS22 = flow.get('cDTPS22');\ncDTPS22 = (cDTPS22 === undefined) ? 0: cDTPS22;\nlet cDTPS23 = flow.get('cDTPS23');\ncDTPS23 = (cDTPS23 === undefined) ? 0: cDTPS23;\nlet cDTPS00 = flow.get('cDTPS00');\ncDTPS00 = (cDTPS00 === undefined) ? 0: cDTPS00;\nlet cDTPS01 = flow.get('cDTPS01');\ncDTPS01 = (cDTPS01 === undefined) ? 0: cDTPS01;\nlet cDTPS02 = flow.get('cDTPS02');\ncDTPS02 = (cDTPS02 === undefined) ? 0: cDTPS02;\nlet cDTPS03 = flow.get('cDTPS03');\ncDTPS03 = (cDTPS03 === undefined) ? 0: cDTPS03;\nlet cDTPS04 = flow.get('cDTPS04');\ncDTPS04 = (cDTPS04 === undefined) ? 0: cDTPS04;\nlet cDTPS05 = flow.get('cDTPS05');\ncDTPS05 = (cDTPS05 === undefined) ? 0: cDTPS05;\nlet cDTPS06 = flow.get('cDTPS06');\ncDTPS06 = (cDTPS06 === undefined) ? 0: cDTPS06;\nlet cDTPS07 = flow.get('cDTPS07');\ncDTPS07 = (cDTPS07 === undefined) ? 0: cDTPS07;\nlet cDTPS08 = flow.get('cDTPS08');\ncDTPS08 = (cDTPS08 === undefined) ? 0: cDTPS08;\nlet cDTPS09 = flow.get('cDTPS09');\ncDTPS09 = (cDTPS09 === undefined) ? 0: cDTPS09;\nlet cDTPS10 = flow.get('cDTPS10');\ncDTPS10 = (cDTPS10 === undefined) ? 0: cDTPS10;\nlet cDTPS11 = flow.get('cDTPS11');\ncDTPS11 = (cDTPS11 === undefined) ? 0: cDTPS11;\nlet cDTPS12 = flow.get('cDTPS12');\ncDTPS12 = (cDTPS12 === undefined) ? 0: cDTPS12;\nlet cDTPS13 = flow.get('cDTPS13');\ncDTPS13 = (cDTPS13 === undefined) ? 0: cDTPS13;\nlet cDTPS14 = flow.get('cDTPS14');\ncDTPS14 = (cDTPS14 === undefined) ? 0: cDTPS14;\nlet cDTPS15 = flow.get('cDTPS15');\ncDTPS15 = (cDTPS15 === undefined) ? 0: cDTPS15;\nlet cDTPS16 = flow.get('cDTPS16');\ncDTPS16 = (cDTPS16 === undefined) ? 0: cDTPS16;\nlet cDTPS17 = flow.get('cDTPS17');\ncDTPS17 = (cDTPS17 === undefined) ? 0: cDTPS17;\nlet cDTPS18 = flow.get('cDTPS18');\ncDTPS18 = (cDTPS18 === undefined) ? 0: cDTPS18;\n\nlet cDTNM19 = flow.get('cDTNM19');\ncDTNM19 = (cDTNM19 === undefined) ? 0: cDTNM19; \nlet cDTNM20 = flow.get('cDTNM20');\ncDTNM20 = (cDTNM20 === undefined) ? 0: cDTNM20;\nlet cDTNM21 = flow.get('cDTNM21');\ncDTNM21 = (cDTNM21 === undefined) ? 0: cDTNM21;\nlet cDTNM22 = flow.get('cDTNM22');\ncDTNM22 = (cDTNM22 === undefined) ? 0: cDTNM22;\nlet cDTNM23 = flow.get('cDTNM23');\ncDTNM23 = (cDTNM23 === undefined) ? 0: cDTNM23;\nlet cDTNM00 = flow.get('cDTNM00');\ncDTNM00 = (cDTNM00 === undefined) ? 0: cDTNM00;\nlet cDTNM01 = flow.get('cDTNM01');\ncDTNM01 = (cDTNM01 === undefined) ? 0: cDTNM01;\nlet cDTNM02 = flow.get('cDTNM02');\ncDTNM02 = (cDTNM02 === undefined) ? 0: cDTNM02;\nlet cDTNM03 = flow.get('cDTNM03');\ncDTNM03 = (cDTNM03 === undefined) ? 0: cDTNM03;\nlet cDTNM04 = flow.get('cDTNM04');\ncDTNM04 = (cDTNM04 === undefined) ? 0: cDTNM04;\nlet cDTNM05 = flow.get('cDTNM05');\ncDTNM05 = (cDTNM05 === undefined) ? 0: cDTNM05;\nlet cDTNM06 = flow.get('cDTNM06');\ncDTNM06 = (cDTNM06 === undefined) ? 0: cDTNM06;\nlet cDTNM07 = flow.get('cDTNM07');\ncDTNM07 = (cDTNM07 === undefined) ? 0: cDTNM07;\nlet cDTNM08 = flow.get('cDTNM08');\ncDTNM08 = (cDTNM08 === undefined) ? 0: cDTNM08;\nlet cDTNM09 = flow.get('cDTNM09');\ncDTNM09 = (cDTNM09 === undefined) ? 0: cDTNM09;\nlet cDTNM10 = flow.get('cDTNM10');\ncDTNM10 = (cDTNM10 === undefined) ? 0: cDTNM10;\nlet cDTNM11 = flow.get('cDTNM11');\ncDTNM11 = (cDTNM11 === undefined) ? 0: cDTNM11;\nlet cDTNM12 = flow.get('cDTNM12');\ncDTNM12 = (cDTNM12 === undefined) ? 0: cDTNM12;\nlet cDTNM13 = flow.get('cDTNM13');\ncDTNM13 = (cDTNM13 === undefined) ? 0: cDTNM13;\nlet cDTNM14 = flow.get('cDTNM14');\ncDTNM14 = (cDTNM14 === undefined) ? 0: cDTNM14;\nlet cDTNM15 = flow.get('cDTNM15');\ncDTNM15 = (cDTNM15 === undefined) ? 0: cDTNM15;\nlet cDTNM16 = flow.get('cDTNM16');\ncDTNM16 = (cDTNM16 === undefined) ? 0: cDTNM16;\nlet cDTNM17 = flow.get('cDTNM17');\ncDTNM17 = (cDTNM17 === undefined) ? 0: cDTNM17;\nlet cDTNM18 = flow.get('cDTNM18');\ncDTNM18 = (cDTNM18 === undefined) ? 0: cDTNM18;\n\nlet vPriece = flow.get('vPriece');\n\nlet cQty19 = flow.get('cQty19');\ncQty19 = (cQty19 === undefined) ? 0: Math.ceil(cQty19 * vPriece); \nlet cQty20 = flow.get('cQty20');\ncQty20 = (cQty20 === undefined) ? 0: Math.ceil(cQty20 * vPriece);\nlet cQty21 = flow.get('cQty21');\ncQty21 = (cQty21 === undefined) ? 0: Math.ceil(cQty21 * vPriece);\nlet cQty22 = flow.get('cQty22');\ncQty22 = (cQty22 === undefined) ? 0: Math.ceil(cQty22 * vPriece);\nlet cQty23 = flow.get('cQty23');\ncQty23 = (cQty23 === undefined) ? 0: Math.ceil(cQty23 * vPriece);\nlet cQty00 = flow.get('cQty00');\ncQty00 = (cQty00 === undefined) ? 0: Math.ceil(cQty00 * vPriece);\nlet cQty01 = flow.get('cQty01');\ncQty01 = (cQty01 === undefined) ? 0: Math.ceil(cQty01 * vPriece);\nlet cQty02 = flow.get('cQty02');\ncQty02 = (cQty02 === undefined) ? 0: Math.ceil(cQty02 * vPriece);\nlet cQty03 = flow.get('cQty03');\ncQty03 = (cQty03 === undefined) ? 0: Math.ceil(cQty03 * vPriece);\nlet cQty04 = flow.get('cQty04');\ncQty04 = (cQty04 === undefined) ? 0: Math.ceil(cQty04 * vPriece);\nlet cQty05 = flow.get('cQty05');\ncQty05 = (cQty05 === undefined) ? 0: Math.ceil(cQty05 * vPriece);\nlet cQty06 = flow.get('cQty06');\ncQty06 = (cQty06 === undefined) ? 0: Math.ceil(cQty06 * vPriece);\nlet cQty07 = flow.get('cQty07');\ncQty07 = (cQty07 === undefined) ? 0: Math.ceil(cQty07 * vPriece);\nlet cQty08 = flow.get('cQty08');\ncQty08 = (cQty08 === undefined) ? 0: Math.ceil(cQty08 * vPriece);\nlet cQty09 = flow.get('cQty09');\ncQty09 = (cQty09 === undefined) ? 0: Math.ceil(cQty09 * vPriece);\nlet cQty10 = flow.get('cQty10');\ncQty10 = (cQty10 === undefined) ? 0: Math.ceil(cQty10 * vPriece);\nlet cQty11 = flow.get('cQty11');\ncQty11 = (cQty11 === undefined) ? 0: Math.ceil(cQty11 * vPriece);\nlet cQty12 = flow.get('cQty12');\ncQty12 = (cQty12 === undefined) ? 0: Math.ceil(cQty12 * vPriece);\nlet cQty13 = flow.get('cQty13');\ncQty13 = (cQty13 === undefined) ? 0: Math.ceil(cQty13 * vPriece);\nlet cQty14 = flow.get('cQty14');\ncQty14 = (cQty14 === undefined) ? 0: Math.ceil(cQty14 * vPriece);\nlet cQty15 = flow.get('cQty15');\ncQty15 = (cQty15 === undefined) ? 0: Math.ceil(cQty15 * vPriece);\nlet cQty16 = flow.get('cQty16');\ncQty16 = (cQty16 === undefined) ? 0: Math.ceil(cQty16 * vPriece);\nlet cQty17 = flow.get('cQty17');\ncQty17 = (cQty17 === undefined) ? 0: Math.ceil(cQty17 * vPriece);\nlet cQty18 = flow.get('cQty18');\ncQty18 = (cQty18 === undefined) ? 0: Math.ceil(cQty18 * vPriece);\n\nlet vSDTCT = flow.get('vSTDCT');\n\nlet cDTUN19 = flow.get('cDTUN19');\ncDTUN19 = (cDTUN19 === undefined || flow.get('cQty19') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty19') * vPriece) * vSDTCT)) - (cDTCO19 + cDTWM19 + cDTMT19 + cDTQI19)); \nlet cDTUN20 = flow.get('cDTUN20');\ncDTUN20 = (cDTUN20 === undefined || flow.get('cQty20') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty20') * vPriece) * vSDTCT)) - (cDTCO20 + cDTWM20 + cDTMT20 + cDTQI20));\nlet cDTUN21 = flow.get('cDTUN21');\ncDTUN21 = (cDTUN21 === undefined || flow.get('cQty21') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty21') * vPriece) * vSDTCT)) - (cDTCO21 + cDTWM21 + cDTMT21 + cDTQI21));\nlet cDTUN22 = flow.get('cDTUN22');\ncDTUN22 = (cDTUN22 === undefined || flow.get('cQty22') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty22') * vPriece) * vSDTCT)) - (cDTCO22 + cDTWM22 + cDTMT22 + cDTQI22));\nlet cDTUN23 = flow.get('cDTUN23');\ncDTUN23 = (cDTUN23 === undefined || flow.get('cQty23') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty23') * vPriece) * vSDTCT)) - (cDTCO23 + cDTWM23 + cDTMT23 + cDTQI23));\nlet cDTUN00 = flow.get('cDTUN00');\ncDTUN00 = (cDTUN00 === undefined || flow.get('cQty00') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty00') * vPriece) * vSDTCT)) - (cDTCO00 + cDTWM00 + cDTMT00 + cDTQI00));\nlet cDTUN01 = flow.get('cDTUN01');\ncDTUN01 = (cDTUN01 === undefined || flow.get('cQty01') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty01') * vPriece) * vSDTCT)) - (cDTCO01 + cDTWM01 + cDTMT01 + cDTQI01));\nlet cDTUN02 = flow.get('cDTUN02');\ncDTUN02 = (cDTUN02 === undefined || flow.get('cQty02') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty02') * vPriece) * vSDTCT)) - (cDTCO02 + cDTWM02 + cDTMT02 + cDTQI02));\nlet cDTUN03 = flow.get('cDTUN03');\ncDTUN03 = (cDTUN03 === undefined || flow.get('cQty03') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty03') * vPriece) * vSDTCT)) - (cDTCO03 + cDTWM03 + cDTMT03 + cDTQI03));\nlet cDTUN04 = flow.get('cDTUN04');\ncDTUN04 = (cDTUN04 === undefined || flow.get('cQty04') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty04') * vPriece) * vSDTCT)) - (cDTCO04 + cDTWM04 + cDTMT04 + cDTQI04));\nlet cDTUN05 = flow.get('cDTUN05');\ncDTUN05 = (cDTUN05 === undefined || flow.get('cQty05') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty05') * vPriece) * vSDTCT)) - (cDTCO05 + cDTWM05 + cDTMT05 + cDTQI05));\nlet cDTUN06 = flow.get('cDTUN06');\ncDTUN06 = (cDTUN06 === undefined || flow.get('cQty06') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty06') * vPriece) * vSDTCT)) - (cDTCO06 + cDTWM06 + cDTMT06 + cDTQI06));\nlet cDTUN07 = flow.get('cDTUN07');\ncDTUN07 = (cDTUN07 === undefined || flow.get('cQty07') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty07') * vPriece) * vSDTCT)) - (cDTCO07 + cDTWM07 + cDTMT07 + cDTQI07));\nlet cDTUN08 = flow.get('cDTUN08');\ncDTUN08 = (cDTUN08 === undefined || flow.get('cQty08') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty08') * vPriece) * vSDTCT)) - (cDTCO08 + cDTWM08 + cDTMT08 + cDTQI08));\nlet cDTUN09 = flow.get('cDTUN09');\ncDTUN09 = (cDTUN09 === undefined || flow.get('cQty09') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty09') * vPriece) * vSDTCT)) - (cDTCO09 + cDTWM09 + cDTMT09 + cDTQI09));\nlet cDTUN10 = flow.get('cDTUN10');\ncDTUN10 = (cDTUN10 === undefined || flow.get('cQty10') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty10') * vPriece) * vSDTCT)) - (cDTCO10 + cDTWM10 + cDTMT10 + cDTQI10));\nlet cDTUN11 = flow.get('cDTUN11');\ncDTUN11 = (cDTUN11 === undefined || flow.get('cQty11') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty11') * vPriece) * vSDTCT)) - (cDTCO11 + cDTWM11 + cDTMT11 + cDTQI11));\nlet cDTUN12 = flow.get('cDTUN12');\ncDTUN12 = (cDTUN12 === undefined || flow.get('cQty12') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty12') * vPriece) * vSDTCT)) - (cDTCO12 + cDTWM12 + cDTMT12 + cDTQI12));\nlet cDTUN13 = flow.get('cDTUN13');\ncDTUN13 = (cDTUN13 === undefined || flow.get('cQty13') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty13') * vPriece) * vSDTCT)) - (cDTCO13 + cDTWM13 + cDTMT13 + cDTQI13));\nlet cDTUN14 = flow.get('cDTUN14');\ncDTUN14 = (cDTUN14 === undefined || flow.get('cQty14') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty14') * vPriece) * vSDTCT)) - (cDTCO14 + cDTWM14 + cDTMT14 + cDTQI14));\nlet cDTUN15 = flow.get('cDTUN15');\ncDTUN15 = (cDTUN15 === undefined || flow.get('cQty15') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty15') * vPriece) * vSDTCT)) - (cDTCO15 + cDTWM15 + cDTMT15 + cDTQI15));\nlet cDTUN16 = flow.get('cDTUN16');\ncDTUN16 = (cDTUN16 === undefined || flow.get('cQty16') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty16') * vPriece) * vSDTCT)) - (cDTCO16 + cDTWM16 + cDTMT16 + cDTQI16));\nlet cDTUN17 = flow.get('cDTUN17');\ncDTUN17 = (cDTUN17 === undefined || flow.get('cQty17') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty17') * vPriece) * vSDTCT)) - (cDTCO17 + cDTWM17 + cDTMT17 + cDTQI17));\nlet cDTUN18 = flow.get('cDTUN18');\ncDTUN18 = (cDTUN18 === undefined || flow.get('cQty18') == 0) ? 0: Math.abs((3600 - Math.ceil((flow.get('cQty18') * vPriece) * vSDTCT)) - (cDTCO18 + cDTWM18 + cDTMT18 + cDTQI18));\n\nvar vTotalDTCO = Number(cDTCO19) + Number(cDTCO20) + Number(cDTCO21) + Number(cDTCO22) + Number(cDTCO23) + Number(cDTCO00) + Number(cDTCO01) + Number(cDTCO02) + Number(cDTCO03) + Number(cDTCO04) + Number(cDTCO05)+ Number(cDTCO06) \n               + Number(cDTCO07) + Number(cDTCO08) + Number(cDTCO09) + Number(cDTCO10) + Number(cDTCO11) + Number(cDTCO12) + Number(cDTCO13) + Number(cDTCO14) + Number(cDTCO15) + Number(cDTCO16) + Number(cDTCO17) + Number(cDTCO18);             \n\nvar vTotalDTWM = Number(cDTWM19) + Number(cDTWM20) + Number(cDTWM21) + Number(cDTWM22) + Number(cDTWM23) + Number(cDTWM00) + Number(cDTWM01) + Number(cDTWM02) + Number(cDTWM03) + Number(cDTWM04) + Number(cDTWM05)+ Number(cDTWM06) \n                 + Number(cDTWM07) + Number(cDTWM08) + Number(cDTWM09) + Number(cDTWM10) + Number(cDTWM11) + Number(cDTWM12) + Number(cDTWM13) + Number(cDTWM14) + Number(cDTWM15) + Number(cDTWM16) + Number(cDTWM17) + Number(cDTWM18);\n                 \nvar vTotalDTMT = Number(cDTMT19) + Number(cDTMT20) + Number(cDTMT21) + Number(cDTMT22) + Number(cDTMT23) + Number(cDTMT00) + Number(cDTMT01) + Number(cDTMT02) + Number(cDTMT03) + Number(cDTMT04) + Number(cDTMT05)+ Number(cDTMT06) \n                 + Number(cDTMT07) + Number(cDTMT08) + Number(cDTMT09) + Number(cDTMT10) + Number(cDTMT11) + Number(cDTMT12) + Number(cDTMT13) + Number(cDTMT14) + Number(cDTMT15) + Number(cDTMT16) + Number(cDTMT17) + Number(cDTMT18);\n\nvar vTotalDTQI = Number(cDTQI19) + Number(cDTQI20) + Number(cDTQI21) + Number(cDTQI22) + Number(cDTQI23) + Number(cDTQI00) + Number(cDTQI01) + Number(cDTQI02) + Number(cDTQI03) + Number(cDTQI04) + Number(cDTQI05)+ Number(cDTQI06) \n                   + Number(cDTQI07) + Number(cDTQI08) + Number(cDTQI09) + Number(cDTQI10) + Number(cDTQI11) + Number(cDTQI12) + Number(cDTQI13) + Number(cDTQI14) + Number(cDTQI15) + Number(cDTQI16) + Number(cDTQI17) + Number(cDTQI18);\n\nvar vTotalDTPS = Number(cDTPS19) + Number(cDTPS20) + Number(cDTPS21) + Number(cDTPS22) + Number(cDTPS23) + Number(cDTPS00) + Number(cDTPS01) + Number(cDTPS02) + Number(cDTPS03) + Number(cDTPS04) + Number(cDTPS05)+ Number(cDTPS06) \n                   + Number(cDTPS07) + Number(cDTPS08) + Number(cDTPS09) + Number(cDTPS10) + Number(cDTPS11) + Number(cDTPS12) + Number(cDTPS13) + Number(cDTPS14) + Number(cDTPS15) + Number(cDTPS16) + Number(cDTPS17) + Number(cDTPS18);\n\nvar vTotalDTNM = Number(cDTNM19) + Number(cDTNM20) + Number(cDTNM21) + Number(cDTNM22) + Number(cDTNM23) + Number(cDTNM00) + Number(cDTNM01) + Number(cDTNM02) + Number(cDTNM03) + Number(cDTNM04) + Number(cDTNM05)+ Number(cDTNM06) \n                   + Number(cDTNM07) + Number(cDTNM08) + Number(cDTNM09) + Number(cDTNM10) + Number(cDTNM11) + Number(cDTNM12) + Number(cDTNM13) + Number(cDTNM14) + Number(cDTNM15) + Number(cDTNM16) + Number(cDTNM17) + Number(cDTNM18);\n                   \nvar vTotalDTUN = Number(cDTUN19) + Number(cDTUN20) + Number(cDTUN21) + Number(cDTUN22) + Number(cDTUN23) + Number(cDTUN00) + Number(cDTUN01) + Number(cDTUN02) + Number(cDTUN03) + Number(cDTUN04) + Number(cDTUN05)+ Number(cDTUN06) \n               + Number(cDTUN07) + Number(cDTUN08) + Number(cDTUN09) + Number(cDTUN10) + Number(cDTUN11) + Number(cDTUN12) + Number(cDTUN13) + Number(cDTUN14) + Number(cDTUN15) + Number(cDTUN16) + Number(cDTUN17) + Number(cDTUN18);   \n\nlet vTotalAll = Number(vTotalDTCO) + Number(vTotalDTWM) + Number(vTotalDTMT)  + Number(vTotalDTQI);// + Number(vTotalDTUN);\nlet vTotalPlanStop = Number(vTotalDTPS) + Number(vTotalDTNM);\nflow.set('vTotalDT',vTotalAll);\nflow.set('vTotalPlanStop',vTotalPlanStop);\nmsg.payload = vTotalAll;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 780,
        "wires": [
            [
                "2e577ab7fa2fa096",
                "50890e65dc645a46",
                "9e232eaf76b00715"
            ]
        ]
    },
    {
        "id": "2e577ab7fa2fa096",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Cal Availability",
        "func": "var vSchdu = flow.get('vTotalTime');\nvar vTotalDT = flow.get('vTotalDT');\nvar vTotalPlanStop = flow.get('vTotalPlanStop');\n\nvar vACTT = Number(vSchdu) - Number(vTotalDT) - Number(vTotalPlanStop);\n\nvar vAvai = (Number(vACTT) / (Number(vSchdu)- Number(vTotalPlanStop))) * 100;\nvAvai = vAvai.toFixed(2);\n\n//if(vAvai < 0)\n//{\n//    vAvai = 0;\n//}\n//else if(vAvai > 100)\n//{\n//    vAvai = 100;\n//}\n\n\nflow.set('vAvailability',vACTT);//vACTT\n\nmsg.payload = vAvai;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2280,
        "y": 780,
        "wires": [
            [
                "e7a1b0324ecf1892",
                "468e411e922ae5da"
            ]
        ]
    },
    {
        "id": "50890e65dc645a46",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Cal Quality",
        "func": "let vACTQTY = flow.get('vACTQTY');\nlet vNGPCB = flow.get('vNGPCB');\n\nvACTQTY = (vACTQTY === undefined || vACTQTY == 0) ? 1: vACTQTY; \nvNGPCB = (vNGPCB === undefined) ? 0: vNGPCB; \n\nlet vQuality = ((Number(vACTQTY) - Number(vNGPCB)) / Number(vACTQTY)) *100;\n\n//if(vQuality < 0)\n//{\n//    vQuality = 0;\n//}\n//else if(vQuality > 100)\n//{\n//    vQuality = 100;\n//}\n\nflow.set('vQuality',vQuality);\nmsg.payload = vQuality.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2270,
        "y": 820,
        "wires": [
            [
                "43f44c85e4ecb673"
            ]
        ]
    },
    {
        "id": "9e232eaf76b00715",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Cal OEE",
        "func": "let vACTQTY = flow.get('vACTQTY');\nvar vSchdu = flow.get('vTotalTime');\nlet vNGPCB = flow.get('vNGPCB');\nlet vSDTCT = flow.get('vSTDCT');\n\nlet FG = (Number(vACTQTY) - Number(vNGPCB));\nlet vOEE = (FG * Number(vSDTCT)) / Number(vSchdu);\nlet OEE = Number(vOEE) * 100;\n\n//if(OEE < 0)\n//{\n//    OEE = 0;\n//}\n//else if(OEE > 100)\n//{\n//    OEE = 100;\n//}\n\nmsg.payload = OEE.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2260,
        "y": 860,
        "wires": [
            [
                "a34fd23536567514",
                "9510549cb1b134c7"
            ]
        ]
    },
    {
        "id": "e7a1b0324ecf1892",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Cal Performance",
        "func": "let vACTQTY = flow.get('vACTQTY');\nlet vSDTCT = flow.get('vSTDCT');\nlet vAvailability = flow.get('vAvailability');\n\nlet vPerf = (Number(vACTQTY) * Number(vSDTCT)) / vAvailability;\nlet pPerf = vPerf * 100;\npPerf = pPerf.toFixed(2);\n\n//if(pPerf < 0)\n//{\n//    pPerf = 0;\n//}\n//else if(pPerf > 100)\n//{\n//    pPerf = 100;\n//}\n\n\nflow.set('vPerformance',pPerf);\nmsg.payload = pPerf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2510,
        "y": 820,
        "wires": [
            [
                "f97fec3980b0880a"
            ]
        ]
    },
    {
        "id": "6478eb3a22abcf57",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_UPD_DOWNTIME",
        "func": "var pMachine = \"Reflow\"; \nvar pProcess = \"SMT\";\nvar vLine =flow.get('vLine');\n\nDataset = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_DOWNTIME] \" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + pMachine + \"\\',\" + \"\\'\" + pProcess+ \"\\'\" ;\nmsg.payload = Dataset;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1780,
        "wires": [
            [
                "7aad445007f03130"
            ]
        ]
    },
    {
        "id": "7aad445007f03130",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 700,
        "y": 1780,
        "wires": [
            [
                "8c0952c258976b02"
            ]
        ]
    },
    {
        "id": "b795c15f4fc7d795",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_UPD_DOWNTIME",
        "func": "var pMachine = \"Reflow\"; \nvar pProcess = \"SMT\";\nvar vLine =flow.get('vLine');\n\nDataset = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_DOWNTIME] \" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + pMachine + \"\\',\" + \"\\'\" + pProcess+ \"\\'\" ;\nmsg.payload = Dataset;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1960,
        "wires": [
            [
                "1941d912d93d99c3"
            ]
        ]
    },
    {
        "id": "1941d912d93d99c3",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 700,
        "y": 1960,
        "wires": [
            [
                "b23ad7cde1e5a76a"
            ]
        ]
    },
    {
        "id": "39c6c21438bac6c7",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_UPD_DOWNTIME",
        "func": "var pMachine = \"Reflow\"; \nvar pProcess = \"SMT\";\nvar vLine =flow.get('vLine');\n\nDataset = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_DOWNTIME] \" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + pMachine + \"\\',\" + \"\\'\" + pProcess+ \"\\'\" ;\nmsg.payload = Dataset;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2100,
        "wires": [
            [
                "eb9f6a8dcc3410db"
            ]
        ]
    },
    {
        "id": "eb9f6a8dcc3410db",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 700,
        "y": 2100,
        "wires": [
            [
                "4532d5244717deac"
            ]
        ]
    },
    {
        "id": "faaebc6d0152ac15",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_UPD_DOWNTIME",
        "func": "var pMachine = \"Reflow\"; \nvar pProcess = \"SMT\";\nvar vLine =flow.get('vLine');\n\nDataset = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_DOWNTIME] \" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + pMachine + \"\\',\" + \"\\'\" + pProcess+ \"\\'\" ;\nmsg.payload = Dataset;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2300,
        "wires": [
            [
                "f9d3aea097cb482a"
            ]
        ]
    },
    {
        "id": "f9d3aea097cb482a",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 700,
        "y": 2300,
        "wires": [
            [
                "54482fb6fcd223d3"
            ]
        ]
    },
    {
        "id": "83492a274daeaed4",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "2d88abb2ac617f9b",
            "16bccdef1221f407"
        ],
        "x": 55,
        "y": 400,
        "wires": [
            [
                "571f7976f28dd439"
            ]
        ]
    },
    {
        "id": "2d88abb2ac617f9b",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "mode": "link",
        "links": [
            "83492a274daeaed4",
            "9f67f30acd52548d"
        ],
        "x": 1055,
        "y": 1380,
        "wires": []
    },
    {
        "id": "c503ccdd59a00b99",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_UPD_DOWNTIME",
        "func": "var pMachine = \"Reflow\"; \nvar pProcess = \"SMT\";\nvar vLine =flow.get('vLine');\n\nDataset = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_DOWNTIME] \" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + pMachine + \"\\',\" + \"\\'\" + pProcess+ \"\\'\" ;\nmsg.payload = Dataset;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1540,
        "wires": [
            [
                "3f9a5a49a21321cf"
            ]
        ]
    },
    {
        "id": "3f9a5a49a21321cf",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 680,
        "y": 1540,
        "wires": [
            [
                "15657b85e8501edf"
            ]
        ]
    },
    {
        "id": "3cf2042e5014e8a8",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_UPD_DOWNTIME",
        "func": "var pMachine = \"Reflow\"; \nvar pProcess = \"SMT\";\nvar vLine =flow.get('vLine');\n\nlet Dataset = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_DOWNTIME] \" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + pMachine + \"\\',\" + \"\\'\" + pProcess+ \"\\'\" ;\nmsg.payload = Dataset;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1300,
        "wires": [
            [
                "fb2e0cac34020211"
            ]
        ]
    },
    {
        "id": "fb2e0cac34020211",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 660,
        "y": 1300,
        "wires": [
            [
                "0b44ef9c0d52075b",
                "d75be9a65b0f78ca"
            ]
        ]
    },
    {
        "id": "517228dd2e9ec0eb",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Plan Stop",
        "func": "msg.payload = 'Plan Stop Line';\nflow.set('vTClycleTime',0);\nflow.set('vTracking','Plan Stop Line');\nflow.set('vNGPCB',0);\nflow.set('vModel','Plan Stop Line');\nflow.set('vPriece',0);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1380,
        "wires": [
            [
                "2d88abb2ac617f9b"
            ]
        ]
    },
    {
        "id": "156b549ef81f3290",
        "type": "change",
        "z": "654ceb9908184e3c",
        "name": "Clear",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 480,
        "wires": [
            [
                "654cf5d7fcfb06af",
                "0839c5c3ee264653",
                "8c9813b38915d835"
            ]
        ]
    },
    {
        "id": "9f67f30acd52548d",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "2d88abb2ac617f9b",
            "16bccdef1221f407"
        ],
        "x": 1225,
        "y": 480,
        "wires": [
            [
                "156b549ef81f3290"
            ]
        ]
    },
    {
        "id": "6c4ede963fcdbe22",
        "type": "ui_gauge",
        "z": "654ceb9908184e3c",
        "name": "",
        "group": "24971256.5d07c6",
        "order": 14,
        "width": 8,
        "height": 4,
        "gtype": "gage",
        "title": "OEE Accumlate",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ff0000",
            "#e6e600",
            "#00ff00"
        ],
        "seg1": "50",
        "seg2": "80",
        "className": "",
        "x": 1840,
        "y": 940,
        "wires": []
    },
    {
        "id": "574288ccc38ad4a8",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "OEE",
        "func": "let vData = msg.payload;\n\nlet vOee = 0;\nvOee = vData[0]['OEE']\n\n\nmsg.payload = vOee;//vOee;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 900,
        "wires": [
            [
                "6c4ede963fcdbe22"
            ]
        ]
    },
    {
        "id": "77ae0a717c989197",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL SP STBL_OEE_GET_RT_DATE_SIDE_N",
        "func": "var vLine = flow.get('vLineGet');\nvar vStartDate = flow.get('vStartDateGet');\nlet vPrecess = 'Reflow';\nlet vSide = flow.get('vSide');\n\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OEE_GET_RT_DATE_SIDE_N] \" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + vPrecess + \"\\'\";\n\nmsg.payload = t; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 620,
        "wires": [
            [
                "3ba24ef7a05385fd"
            ]
        ]
    },
    {
        "id": "3ba24ef7a05385fd",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 1440,
        "y": 620,
        "wires": [
            [
                "196842f0d29c0bf7",
                "a37d358a84924515"
            ]
        ]
    },
    {
        "id": "196842f0d29c0bf7",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Chart RT Data",
        "func": "var vRow = msg.payload.length\nvar vData = msg.payload;\n\nflow.set('cLoss00',100);\nflow.set('cLoss01',100);\nflow.set('cLoss02',100);\nflow.set('cLoss03',100);\nflow.set('cLoss04',100);\nflow.set('cLoss05',100);\nflow.set('cLoss06',100);\nflow.set('cLoss07',100);\nflow.set('cLoss08',100);\nflow.set('cLoss09',100);\nflow.set('cLoss10',100);\nflow.set('cLoss11',100);\nflow.set('cLoss12',100);\nflow.set('cLoss13',100);\nflow.set('cLoss14',100);\nflow.set('cLoss15',100);\nflow.set('cLoss16',100);\nflow.set('cLoss17',100);\nflow.set('cLoss18',100);\nflow.set('cLoss19',100);\nflow.set('cLoss20',100);\nflow.set('cLoss21',100);\nflow.set('cLoss22',100);\nflow.set('cLoss23',100);\n\nflow.set('cOEE00',0);\nflow.set('cOEE01',0);\nflow.set('cOEE02',0);\nflow.set('cOEE03',0);\nflow.set('cOEE04',0);\nflow.set('cOEE05',0);\nflow.set('cOEE06',0);\nflow.set('cOEE07',0);\nflow.set('cOEE08',0);\nflow.set('cOEE09',0);\nflow.set('cOEE10',0);\nflow.set('cOEE11',0);\nflow.set('cOEE12',0);\nflow.set('cOEE13',0);\nflow.set('cOEE14',0);\nflow.set('cOEE15',0);\nflow.set('cOEE16',0);\nflow.set('cOEE17',0);\nflow.set('cOEE18',0);\nflow.set('cOEE19',0);\nflow.set('cOEE20',0);\nflow.set('cOEE21',0);\nflow.set('cOEE22',0);\nflow.set('cOEE23',0);\n\nfor(i = 0;i < vRow; i++)\n{\n    if(vData[i].Hour == 0){flow.set('cOEE00',vData[i].OEE);flow.set('cLoss00',vData[i].Loss);}\n    if(vData[i].Hour == 1){flow.set('cOEE01',vData[i].OEE);flow.set('cLoss01',vData[i].Loss);}\n    if(vData[i].Hour == 2){flow.set('cOEE02',vData[i].OEE);flow.set('cLoss02',vData[i].Loss);}\n    if(vData[i].Hour == 3){flow.set('cOEE03',vData[i].OEE);flow.set('cLoss03',vData[i].Loss);}\n    if(vData[i].Hour == 4){flow.set('cOEE04',vData[i].OEE);flow.set('cLoss04',vData[i].Loss);}\n    if(vData[i].Hour == 5){flow.set('cOEE05',vData[i].OEE);flow.set('cLoss05',vData[i].Loss);}\n    if(vData[i].Hour == 6){flow.set('cOEE06',vData[i].OEE);flow.set('cLoss06',vData[i].Loss);}\n    if(vData[i].Hour == 7){flow.set('cOEE07',vData[i].OEE);flow.set('cLoss07',vData[i].Loss);}\n    if(vData[i].Hour == 8){flow.set('cOEE08',vData[i].OEE);flow.set('cLoss08',vData[i].Loss);}\n    if(vData[i].Hour == 9){flow.set('cOEE09',vData[i].OEE);flow.set('cLoss09',vData[i].Loss);}\n    if(vData[i].Hour == 10){flow.set('cOEE10',vData[i].OEE);flow.set('cLoss10',vData[i].Loss);}\n    if(vData[i].Hour == 11){flow.set('cOEE11',vData[i].OEE);flow.set('cLoss11',vData[i].Loss);}\n    if(vData[i].Hour == 12){flow.set('cOEE12',vData[i].OEE);flow.set('cLoss12',vData[i].Loss);}\n    if(vData[i].Hour == 13){flow.set('cOEE13',vData[i].OEE);flow.set('cLoss13',vData[i].Loss);}\n    if(vData[i].Hour == 14){flow.set('cOEE14',vData[i].OEE);flow.set('cLoss14',vData[i].Loss);}\n    if(vData[i].Hour == 15){flow.set('cOEE15',vData[i].OEE);flow.set('cLoss15',vData[i].Loss);}\n    if(vData[i].Hour == 16){flow.set('cOEE16',vData[i].OEE);flow.set('cLoss16',vData[i].Loss);}\n    if(vData[i].Hour == 17){flow.set('cOEE17',vData[i].OEE);flow.set('cLoss17',vData[i].Loss);}\n    if(vData[i].Hour == 18){flow.set('cOEE18',vData[i].OEE);flow.set('cLoss18',vData[i].Loss);}\n    if(vData[i].Hour == 19){flow.set('cOEE19',vData[i].OEE);flow.set('cLoss19',vData[i].Loss);}\n    if(vData[i].Hour == 20){flow.set('cOEE20',vData[i].OEE);flow.set('cLoss20',vData[i].Loss);}\n    if(vData[i].Hour == 21){flow.set('cOEE21',vData[i].OEE);flow.set('cLoss21',vData[i].Loss);}\n    if(vData[i].Hour == 22){flow.set('cOEE22',vData[i].OEE);flow.set('cLoss22',vData[i].Loss);}\n    if(vData[i].Hour == 23){flow.set('cOEE23',vData[i].OEE);flow.set('cLoss23',vData[i].Loss);}\n}\n//msg.payload = vData[2].Hour;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 620,
        "wires": [
            [
                "11c8a62e2b9d03f4"
            ]
        ]
    },
    {
        "id": "11c8a62e2b9d03f4",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "OEEBarChartDay",
        "func": "let vPriece = flow.get('vPriece');\n\nlet cOEE19 = flow.get('cOEE19');\nlet cOEE20 = flow.get('cOEE20');\nlet cOEE21 = flow.get('cOEE21');\nlet cOEE22 = flow.get('cOEE22');\nlet cOEE23 = flow.get('cOEE23');\nlet cOEE00 = flow.get('cOEE00');\nlet cOEE01 = flow.get('cOEE01');\nlet cOEE02 = flow.get('cOEE02');\nlet cOEE03 = flow.get('cOEE03');\nlet cOEE04 = flow.get('cOEE04');\nlet cOEE05 = flow.get('cOEE05');\nlet cOEE06 = flow.get('cOEE06');\nlet cOEE07 = flow.get('cOEE07');\nlet cOEE08 = flow.get('cOEE08');\nlet cOEE09 = flow.get('cOEE09');\nlet cOEE10 = flow.get('cOEE10');\nlet cOEE11 = flow.get('cOEE11');\nlet cOEE12 = flow.get('cOEE12');\nlet cOEE13 = flow.get('cOEE13');\nlet cOEE14 = flow.get('cOEE14');\nlet cOEE15 = flow.get('cOEE15');\nlet cOEE16 = flow.get('cOEE16');\nlet cOEE17 = flow.get('cOEE17');\nlet cOEE18 = flow.get('cOEE18');\n\nlet cLoss19 = flow.get('cLoss19');\nlet cLoss20 = flow.get('cLoss20');\nlet cLoss21 = flow.get('cLoss21');\nlet cLoss22 = flow.get('cLoss22');\nlet cLoss23 = flow.get('cLoss23');\nlet cLoss00 = flow.get('cLoss00');\nlet cLoss01 = flow.get('cLoss01');\nlet cLoss02 = flow.get('cLoss02');\nlet cLoss03 = flow.get('cLoss03');\nlet cLoss04 = flow.get('cLoss04');\nlet cLoss05 = flow.get('cLoss05');\nlet cLoss06 = flow.get('cLoss06');\nlet cLoss07 = flow.get('cLoss07');\nlet cLoss08 = flow.get('cLoss08');\nlet cLoss09 = flow.get('cLoss09');\nlet cLoss10 = flow.get('cLoss10');\nlet cLoss11 = flow.get('cLoss11');\nlet cLoss12 = flow.get('cLoss12');\nlet cLoss13 = flow.get('cLoss13');\nlet cLoss14 = flow.get('cLoss14');\nlet cLoss15 = flow.get('cLoss15');\nlet cLoss16 = flow.get('cLoss16');\nlet cLoss17 = flow.get('cLoss17');\nlet cLoss18 = flow.get('cLoss18');\n\nlet vQty = \"OEE: \";\nlet vLoss = \"Loss: \";\nvar BarChart = [\n    {\n        \"series\" : [vQty,vLoss],\n        \"data\": [\n                    [cOEE19,cOEE20,cOEE21,cOEE22,cOEE23,cOEE00,cOEE01,cOEE02,cOEE03,cOEE04,cOEE05,cOEE06,cOEE07,cOEE08,cOEE09,cOEE10,cOEE11,cOEE12,cOEE13,cOEE14,cOEE15,cOEE16,cOEE17,cOEE18],\n                    [cLoss19,cLoss20,cLoss21,cLoss22,cLoss23,cLoss00,cLoss01,cLoss02,cLoss03,cLoss04,cLoss05,cLoss06,cLoss07,cLoss08,cLoss09,cLoss10,cLoss11,cLoss12,cLoss13,cLoss14,cLoss15,cLoss16,cLoss17,cLoss18]\n                ],\n        \"labels\" : [\"19\",\"20\",\"21\",\"22\",\"23\",\"00\",\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\"]\n    }\n]\n\nmsg.payload = BarChart;\n\nmsg.ui_control = {\n     options: {\n        scales: {\n            xAxes: [{\n                stacked: true\n            }],\n            yAxes: [{\n                stacked: true\n            }]\n        }\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 620,
        "wires": [
            [
                "df6af6440e0eec82",
                "d17bc12ea6176936"
            ]
        ]
    },
    {
        "id": "66d26eebab92d918",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL SP STBL_OEE_GET_DT_DATE_ALL",
        "func": "var vLine = flow.get('vLineGet');\nvar vStartDate = flow.get('vStartDateGet');\nlet vProcess = 'Reflow';\n\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_OEE_GET_DT_DATE_ALL] \" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + vStartDate + \"\\',\" + \"\\'\" + vProcess + \"\\'\";\n\nmsg.payload = t; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 980,
        "wires": [
            [
                "11b50c3a3a97e846"
            ]
        ]
    },
    {
        "id": "11b50c3a3a97e846",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 1400,
        "y": 980,
        "wires": [
            [
                "9daf43ec4146e0ba"
            ]
        ]
    },
    {
        "id": "abea31d102148509",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "219631f.e9eea4e",
            "393e844e6ba79ab9"
        ],
        "x": 875,
        "y": 980,
        "wires": [
            [
                "66d26eebab92d918"
            ]
        ]
    },
    {
        "id": "393e844e6ba79ab9",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "mode": "link",
        "links": [
            "abea31d102148509"
        ],
        "x": 1785,
        "y": 660,
        "wires": []
    },
    {
        "id": "468e411e922ae5da",
        "type": "ui_gauge",
        "z": "654ceb9908184e3c",
        "name": "",
        "group": "24971256.5d07c6",
        "order": 12,
        "width": 4,
        "height": 2,
        "gtype": "gage",
        "title": "Availability Tracking",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ff0000",
            "#e6e600",
            "#00ff00"
        ],
        "seg1": "50",
        "seg2": "80",
        "className": "",
        "x": 2520,
        "y": 780,
        "wires": []
    },
    {
        "id": "f97fec3980b0880a",
        "type": "ui_gauge",
        "z": "654ceb9908184e3c",
        "name": "",
        "group": "24971256.5d07c6",
        "order": 13,
        "width": 4,
        "height": 2,
        "gtype": "gage",
        "title": "Performance Tracking",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ff0000",
            "#e6e600",
            "#00ff00"
        ],
        "seg1": "50",
        "seg2": "80",
        "className": "",
        "x": 2760,
        "y": 820,
        "wires": []
    },
    {
        "id": "9daf43ec4146e0ba",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Chart DT Data",
        "func": "var vRow = msg.payload.length\nvar vData = msg.payload;\nfor(let i = 0;i < vRow; i++)\n{\n    if(vData[i].Hour == 0 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO00',vData[i].TotalTimes);}\n    if(vData[i].Hour == 1 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO01',vData[i].TotalTimes);}\n    if(vData[i].Hour == 2 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO02',vData[i].TotalTimes);}\n    if(vData[i].Hour == 3 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO03',vData[i].TotalTimes);}\n    if(vData[i].Hour == 4 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO04',vData[i].TotalTimes);}\n    if(vData[i].Hour == 5 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO05',vData[i].TotalTimes);}\n    if(vData[i].Hour == 6 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO06',vData[i].TotalTimes);}\n    if(vData[i].Hour == 7 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO07',vData[i].TotalTimes);}\n    if(vData[i].Hour == 8 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO08',vData[i].TotalTimes);}\n    if(vData[i].Hour == 9 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO09',vData[i].TotalTimes);}\n    if(vData[i].Hour == 10 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO10',vData[i].TotalTimes);}\n    if(vData[i].Hour == 11 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO11',vData[i].TotalTimes);}\n    if(vData[i].Hour == 12 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO12',vData[i].TotalTimes);}\n    if(vData[i].Hour == 13 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO13',vData[i].TotalTimes);}\n    if(vData[i].Hour == 14 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO14',vData[i].TotalTimes);}\n    if(vData[i].Hour == 15 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO15',vData[i].TotalTimes);}\n    if(vData[i].Hour == 16 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO16',vData[i].TotalTimes);}\n    if(vData[i].Hour == 17 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO17',vData[i].TotalTimes);}\n    if(vData[i].Hour == 18 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO18',vData[i].TotalTimes);}\n    if(vData[i].Hour == 19 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO19',vData[i].TotalTimes);}\n    if(vData[i].Hour == 20 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO20',vData[i].TotalTimes);}\n    if(vData[i].Hour == 21 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO21',vData[i].TotalTimes);}\n    if(vData[i].Hour == 22 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO22',vData[i].TotalTimes);}\n    if(vData[i].Hour == 23 && vData[i].BreakDownDESC == 'Change Over'){flow.set('ccDTCO23',vData[i].TotalTimes);}\n    \n    if(vData[i].Hour == 0 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT00',vData[i].TotalTimes);}\n    if(vData[i].Hour == 1 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT01',vData[i].TotalTimes);}\n    if(vData[i].Hour == 2 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT02',vData[i].TotalTimes);}\n    if(vData[i].Hour == 3 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT03',vData[i].TotalTimes);}\n    if(vData[i].Hour == 4 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT04',vData[i].TotalTimes);}\n    if(vData[i].Hour == 5 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT05',vData[i].TotalTimes);}\n    if(vData[i].Hour == 6 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT06',vData[i].TotalTimes);}\n    if(vData[i].Hour == 7 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT07',vData[i].TotalTimes);}\n    if(vData[i].Hour == 8 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT08',vData[i].TotalTimes);}\n    if(vData[i].Hour == 9 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT09',vData[i].TotalTimes);}\n    if(vData[i].Hour == 10 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT10',vData[i].TotalTimes);}\n    if(vData[i].Hour == 11 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT11',vData[i].TotalTimes);}\n    if(vData[i].Hour == 12 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT12',vData[i].TotalTimes);}\n    if(vData[i].Hour == 13 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT13',vData[i].TotalTimes);}\n    if(vData[i].Hour == 14 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT14',vData[i].TotalTimes);}\n    if(vData[i].Hour == 15 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT15',vData[i].TotalTimes);}\n    if(vData[i].Hour == 16 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT16',vData[i].TotalTimes);}\n    if(vData[i].Hour == 17 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT17',vData[i].TotalTimes);}\n    if(vData[i].Hour == 18 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT18',vData[i].TotalTimes);}\n    if(vData[i].Hour == 19 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT19',vData[i].TotalTimes);}\n    if(vData[i].Hour == 20 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT20',vData[i].TotalTimes);}\n    if(vData[i].Hour == 21 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT21',vData[i].TotalTimes);}\n    if(vData[i].Hour == 22 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT22',vData[i].TotalTimes);}\n    if(vData[i].Hour == 23 && vData[i].BreakDownDESC == 'Maintenance'){flow.set('ccDTMT23',vData[i].TotalTimes);}\n    \n    if(vData[i].Hour == 0 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM00',vData[i].TotalTimes);}\n    if(vData[i].Hour == 1 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM01',vData[i].TotalTimes);}\n    if(vData[i].Hour == 2 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM02',vData[i].TotalTimes);}\n    if(vData[i].Hour == 3 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM03',vData[i].TotalTimes);}\n    if(vData[i].Hour == 4 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM04',vData[i].TotalTimes);}\n    if(vData[i].Hour == 5 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM05',vData[i].TotalTimes);}\n    if(vData[i].Hour == 6 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM06',vData[i].TotalTimes);}\n    if(vData[i].Hour == 7 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM07',vData[i].TotalTimes);}\n    if(vData[i].Hour == 8 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM08',vData[i].TotalTimes);}\n    if(vData[i].Hour == 9 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM09',vData[i].TotalTimes);}\n    if(vData[i].Hour == 10 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM10',vData[i].TotalTimes);}\n    if(vData[i].Hour == 11 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM11',vData[i].TotalTimes);}\n    if(vData[i].Hour == 12 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM12',vData[i].TotalTimes);}\n    if(vData[i].Hour == 13 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM13',vData[i].TotalTimes);}\n    if(vData[i].Hour == 14 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM14',vData[i].TotalTimes);}\n    if(vData[i].Hour == 15 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM15',vData[i].TotalTimes);}\n    if(vData[i].Hour == 16 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM16',vData[i].TotalTimes);}\n    if(vData[i].Hour == 17 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM17',vData[i].TotalTimes);}\n    if(vData[i].Hour == 18 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM18',vData[i].TotalTimes);}\n    if(vData[i].Hour == 19 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM19',vData[i].TotalTimes);}\n    if(vData[i].Hour == 20 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM20',vData[i].TotalTimes);}\n    if(vData[i].Hour == 21 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM21',vData[i].TotalTimes);}\n    if(vData[i].Hour == 22 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM22',vData[i].TotalTimes);}\n    if(vData[i].Hour == 23 && vData[i].BreakDownDESC == 'Wait Material'){flow.set('ccDTWM23',vData[i].TotalTimes);}\n    \n    if(vData[i].Hour == 0 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI00',vData[i].TotalTimes);}\n    if(vData[i].Hour == 1 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI01',vData[i].TotalTimes);}\n    if(vData[i].Hour == 2 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI02',vData[i].TotalTimes);}\n    if(vData[i].Hour == 3 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI03',vData[i].TotalTimes);}\n    if(vData[i].Hour == 4 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI04',vData[i].TotalTimes);}\n    if(vData[i].Hour == 5 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI05',vData[i].TotalTimes);}\n    if(vData[i].Hour == 6 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI06',vData[i].TotalTimes);}\n    if(vData[i].Hour == 7 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI07',vData[i].TotalTimes);}\n    if(vData[i].Hour == 8 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI08',vData[i].TotalTimes);}\n    if(vData[i].Hour == 9 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI09',vData[i].TotalTimes);}\n    if(vData[i].Hour == 10 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI10',vData[i].TotalTimes);}\n    if(vData[i].Hour == 11 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI11',vData[i].TotalTimes);}\n    if(vData[i].Hour == 12 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI12',vData[i].TotalTimes);}\n    if(vData[i].Hour == 13 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI13',vData[i].TotalTimes);}\n    if(vData[i].Hour == 14 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI14',vData[i].TotalTimes);}\n    if(vData[i].Hour == 15 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI15',vData[i].TotalTimes);}\n    if(vData[i].Hour == 16 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI16',vData[i].TotalTimes);}\n    if(vData[i].Hour == 17 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI17',vData[i].TotalTimes);}\n    if(vData[i].Hour == 18 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI18',vData[i].TotalTimes);}\n    if(vData[i].Hour == 19 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI19',vData[i].TotalTimes);}\n    if(vData[i].Hour == 20 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI20',vData[i].TotalTimes);}\n    if(vData[i].Hour == 21 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI21',vData[i].TotalTimes);}\n    if(vData[i].Hour == 22 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI22',vData[i].TotalTimes);}\n    if(vData[i].Hour == 23 && vData[i].BreakDownDESC == 'Quality Issue'){flow.set('ccDTQI23',vData[i].TotalTimes);}\n    \n    if(vData[i].Hour == 0 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS00',vData[i].TotalTimes);}\n    if(vData[i].Hour == 1 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS01',vData[i].TotalTimes);}\n    if(vData[i].Hour == 2 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS02',vData[i].TotalTimes);}\n    if(vData[i].Hour == 3 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS03',vData[i].TotalTimes);}\n    if(vData[i].Hour == 4 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS04',vData[i].TotalTimes);}\n    if(vData[i].Hour == 5 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS05',vData[i].TotalTimes);}\n    if(vData[i].Hour == 6 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS06',vData[i].TotalTimes);}\n    if(vData[i].Hour == 7 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS07',vData[i].TotalTimes);}\n    if(vData[i].Hour == 8 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS08',vData[i].TotalTimes);}\n    if(vData[i].Hour == 9 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS09',vData[i].TotalTimes);}\n    if(vData[i].Hour == 10 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS10',vData[i].TotalTimes);}\n    if(vData[i].Hour == 11 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS11',vData[i].TotalTimes);}\n    if(vData[i].Hour == 12 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS12',vData[i].TotalTimes);}\n    if(vData[i].Hour == 13 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS13',vData[i].TotalTimes);}\n    if(vData[i].Hour == 14 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS14',vData[i].TotalTimes);}\n    if(vData[i].Hour == 15 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS15',vData[i].TotalTimes);}\n    if(vData[i].Hour == 16 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS16',vData[i].TotalTimes);}\n    if(vData[i].Hour == 17 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS17',vData[i].TotalTimes);}\n    if(vData[i].Hour == 18 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS18',vData[i].TotalTimes);}\n    if(vData[i].Hour == 19 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS19',vData[i].TotalTimes);}\n    if(vData[i].Hour == 20 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS20',vData[i].TotalTimes);}\n    if(vData[i].Hour == 21 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS21',vData[i].TotalTimes);}\n    if(vData[i].Hour == 22 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS22',vData[i].TotalTimes);}\n    if(vData[i].Hour == 23 && vData[i].BreakDownDESC == 'Plan Stop'){flow.set('ccDTPS23',vData[i].TotalTimes);}\n    \n    if(vData[i].Hour == 0 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM00',vData[i].TotalTimes);}\n    if(vData[i].Hour == 1 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM01',vData[i].TotalTimes);}\n    if(vData[i].Hour == 2 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM02',vData[i].TotalTimes);}\n    if(vData[i].Hour == 3 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM03',vData[i].TotalTimes);}\n    if(vData[i].Hour == 4 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM04',vData[i].TotalTimes);}\n    if(vData[i].Hour == 5 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM05',vData[i].TotalTimes);}\n    if(vData[i].Hour == 6 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM06',vData[i].TotalTimes);}\n    if(vData[i].Hour == 7 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM07',vData[i].TotalTimes);}\n    if(vData[i].Hour == 8 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM08',vData[i].TotalTimes);}\n    if(vData[i].Hour == 9 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM09',vData[i].TotalTimes);}\n    if(vData[i].Hour == 10 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM10',vData[i].TotalTimes);}\n    if(vData[i].Hour == 11 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM11',vData[i].TotalTimes);}\n    if(vData[i].Hour == 12 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM12',vData[i].TotalTimes);}\n    if(vData[i].Hour == 13 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM13',vData[i].TotalTimes);}\n    if(vData[i].Hour == 14 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM14',vData[i].TotalTimes);}\n    if(vData[i].Hour == 15 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM15',vData[i].TotalTimes);}\n    if(vData[i].Hour == 16 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM16',vData[i].TotalTimes);}\n    if(vData[i].Hour == 17 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM17',vData[i].TotalTimes);}\n    if(vData[i].Hour == 18 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM18',vData[i].TotalTimes);}\n    if(vData[i].Hour == 19 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM19',vData[i].TotalTimes);}\n    if(vData[i].Hour == 20 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM20',vData[i].TotalTimes);}\n    if(vData[i].Hour == 21 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM21',vData[i].TotalTimes);}\n    if(vData[i].Hour == 22 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM22',vData[i].TotalTimes);}\n    if(vData[i].Hour == 23 && vData[i].BreakDownDESC == 'New Model'){flow.set('ccDTNM23',vData[i].TotalTimes);}\n}\n//msg.payload = vData[2].Hour;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 980,
        "wires": [
            [
                "27b8f7f78c9f12fa"
            ]
        ]
    },
    {
        "id": "90fabc632f86367d",
        "type": "ui_button",
        "z": "654ceb9908184e3c",
        "name": "bTNewModel",
        "group": "24971256.5d07c6",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "<B>New Model</B>",
        "tooltip": "New Model",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "6",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 260,
        "y": 2480,
        "wires": [
            [
                "9d554b7955ff18a5"
            ]
        ]
    },
    {
        "id": "4270ee37e4d5de16",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL STBL_OEE_GET_DT_DATE",
        "func": "flow.set('vAlert',8);\n\nlet vLine = flow.get('vLine');\nlet vProcess = 'SMT'\nlet vDESC = 'New Model';\n//msg.payload = vLine;\nvar t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_DOWNTIME_DESC] \" + \"\\'\" + vLine + \"\\'\" + \",\\'\" + vProcess + \"\\'\"+ \",\\'\" + vDESC + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2560,
        "wires": [
            [
                "6d3b41c1df633ec5"
            ]
        ]
    },
    {
        "id": "6d3b41c1df633ec5",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 780,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "364de3ae2f10de94",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_INS_DOWNTIME",
        "func": "var pMachine = \"Reflow\"; \nvar pProcess = \"SMT\";\nvar vLine = flow.get('vLine');\nvar pBreakDownDESC = \"Maintenance\";\nvar Dataset = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_INS_DOWNTIME]\" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + pMachine + \"\\',\" + \"\\'\" + pProcess+ \"\\'\" + \",\\'\" + pBreakDownDESC+ \"\\'\";\nmsg.payload = Dataset; \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2520,
        "wires": [
            [
                "e7f9be7b8b6a2e18"
            ]
        ]
    },
    {
        "id": "e7f9be7b8b6a2e18",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 700,
        "y": 2520,
        "wires": [
            [
                "4270ee37e4d5de16",
                "f6c8a29547c0004b",
                "b3b2d1793295483f"
            ]
        ]
    },
    {
        "id": "f6c8a29547c0004b",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "New Model",
        "func": "var vStatus = msg.payload[0].Status;\nvar STS = 0;\nif( vStatus ==\"Success\"){\n    flow.set('vAlert','8')\n    STS = 8;\n}\nSTS = 8;\nmsg.payload = STS;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2520,
        "wires": [
            [
                "e1765d431d336d66"
            ]
        ]
    },
    {
        "id": "e1765d431d336d66",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "0867ccc073e26a77"
        ],
        "x": 1135,
        "y": 2520,
        "wires": []
    },
    {
        "id": "285ee9b87587900c",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "UPD Tracking Monitor",
        "func": "let vLine = flow.get('vLine');\nlet vTracking = msg.payload[0].SEIBAN_CD;\nlet vSQLTexe = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_TRACKING_MONITOR] \\'\" + \"New Model\" + \"\\',\" + \"\\'\" + vLine + \"\\'\";\nmsg.payload = vSQLTexe;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2480,
        "wires": [
            [
                "30501b6c6eebefc1"
            ]
        ]
    },
    {
        "id": "30501b6c6eebefc1",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1180,
        "y": 2480,
        "wires": [
            []
        ]
    },
    {
        "id": "9d554b7955ff18a5",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_UPD_DOWNTIME",
        "func": "var pMachine = \"Reflow\"; \nvar pProcess = \"SMT\";\nvar vLine =flow.get('vLine');\n\nDataset = \"EXEC [STBL_Counter_LOG].[dbo].[STBL_UPD_DOWNTIME] \" + \"\\'\" + vLine + \"\\',\" + \"\\'\" + pMachine + \"\\',\" + \"\\'\" + pProcess+ \"\\'\" ;\nmsg.payload = Dataset;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2480,
        "wires": [
            [
                "dac8d594505ec775"
            ]
        ]
    },
    {
        "id": "dac8d594505ec775",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ff8907a89493fb52",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 700,
        "y": 2480,
        "wires": [
            [
                "364de3ae2f10de94",
                "285ee9b87587900c"
            ]
        ]
    },
    {
        "id": "b3b2d1793295483f",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "New Model",
        "func": "msg.payload = 'New Model';\nflow.set('vTClycleTime',0);\nflow.set('vTracking','New Model');\nflow.set('vNGPCB',0);\nflow.set('vModel','New Model');\nflow.set('vPriece',0);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2560,
        "wires": [
            [
                "16bccdef1221f407"
            ]
        ]
    },
    {
        "id": "16bccdef1221f407",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "mode": "link",
        "links": [
            "83492a274daeaed4",
            "9f67f30acd52548d"
        ],
        "x": 1135,
        "y": 2560,
        "wires": []
    },
    {
        "id": "27b8f7f78c9f12fa",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Chart DownTime",
        "func": "let cDTCO19 = flow.get('ccDTCO19');\ncDTCO19 = (cDTCO19 === undefined) ? 0: cDTCO19; \nlet cDTCO20 = flow.get('ccDTCO20');\ncDTCO20 = (cDTCO20 === undefined) ? 0: cDTCO20;\nlet cDTCO21 = flow.get('ccDTCO21');\ncDTCO21 = (cDTCO21 === undefined) ? 0: cDTCO21;\nlet cDTCO22 = flow.get('ccDTCO22');\ncDTCO22 = (cDTCO22 === undefined) ? 0: cDTCO22;\nlet cDTCO23 = flow.get('ccDTCO23');\ncDTCO23 = (cDTCO23 === undefined) ? 0: cDTCO23;\nlet cDTCO00 = flow.get('ccDTCO00');\ncDTCO00 = (cDTCO00 === undefined) ? 0: cDTCO00;\nlet cDTCO01 = flow.get('ccDTCO01');\ncDTCO01 = (cDTCO01 === undefined) ? 0: cDTCO01;\nlet cDTCO02 = flow.get('ccDTCO02');\ncDTCO02 = (cDTCO02 === undefined) ? 0: cDTCO02;\nlet cDTCO03 = flow.get('ccDTCO03');\ncDTCO03 = (cDTCO03 === undefined) ? 0: cDTCO03;\nlet cDTCO04 = flow.get('ccDTCO04');\ncDTCO04 = (cDTCO04 === undefined) ? 0: cDTCO04;\nlet cDTCO05 = flow.get('ccDTCO05');\ncDTCO05 = (cDTCO05 === undefined) ? 0: cDTCO05;\nlet cDTCO06 = flow.get('ccDTCO06');\ncDTCO06 = (cDTCO06 === undefined) ? 0: cDTCO06;\nlet cDTCO07 = flow.get('ccDTCO07');\ncDTCO07 = (cDTCO07 === undefined) ? 0: cDTCO07;\nlet cDTCO08 = flow.get('ccDTCO08');\ncDTCO08 = (cDTCO08 === undefined) ? 0: cDTCO08;\nlet cDTCO09 = flow.get('ccDTCO09');\ncDTCO09 = (cDTCO09 === undefined) ? 0: cDTCO09;\nlet cDTCO10 = flow.get('ccDTCO10');\ncDTCO10 = (cDTCO10 === undefined) ? 0: cDTCO10;\nlet cDTCO11 = flow.get('ccDTCO11');\ncDTCO11 = (cDTCO11 === undefined) ? 0: cDTCO11;\nlet cDTCO12 = flow.get('ccDTCO12');\ncDTCO12 = (cDTCO12 === undefined) ? 0: cDTCO12;\nlet cDTCO13 = flow.get('ccDTCO13');\ncDTCO13 = (cDTCO13 === undefined) ? 0: cDTCO13;\nlet cDTCO14 = flow.get('ccDTCO14');\ncDTCO14 = (cDTCO14 === undefined) ? 0: cDTCO14;\nlet cDTCO15 = flow.get('ccDTCO15');\ncDTCO15 = (cDTCO15 === undefined) ? 0: cDTCO15;\nlet cDTCO16 = flow.get('ccDTCO16');\ncDTCO16 = (cDTCO16 === undefined) ? 0: cDTCO16;\nlet cDTCO17 = flow.get('ccDTCO17');\ncDTCO17 = (cDTCO17 === undefined) ? 0: cDTCO17;\nlet cDTCO18 = flow.get('ccDTCO18');\ncDTCO18 = (cDTCO18 === undefined) ? 0: cDTCO18;\n\nlet cDTMT19 = flow.get('ccDTMT19');\ncDTMT19 = (cDTMT19 === undefined) ? 0: cDTMT19; \nlet cDTMT20 = flow.get('ccDTMT20');\ncDTMT20 = (cDTMT20 === undefined) ? 0: cDTMT20;\nlet cDTMT21 = flow.get('ccDTMT21');\ncDTMT21 = (cDTMT21 === undefined) ? 0: cDTMT21;\nlet cDTMT22 = flow.get('ccDTMT22');\ncDTMT22 = (cDTMT22 === undefined) ? 0: cDTMT22;\nlet cDTMT23 = flow.get('ccDTMT23');\ncDTMT23 = (cDTMT23 === undefined) ? 0: cDTMT23;\nlet cDTMT00 = flow.get('ccDTMT00');\ncDTMT00 = (cDTMT00 === undefined) ? 0: cDTMT00;\nlet cDTMT01 = flow.get('ccDTMT01');\ncDTMT01 = (cDTMT01 === undefined) ? 0: cDTMT01;\nlet cDTMT02 = flow.get('ccDTMT02');\ncDTMT02 = (cDTMT02 === undefined) ? 0: cDTMT02;\nlet cDTMT03 = flow.get('ccDTMT03');\ncDTMT03 = (cDTMT03 === undefined) ? 0: cDTMT03;\nlet cDTMT04 = flow.get('ccDTMT04');\ncDTMT04 = (cDTMT04 === undefined) ? 0: cDTMT04;\nlet cDTMT05 = flow.get('ccDTMT05');\ncDTMT05 = (cDTMT05 === undefined) ? 0: cDTMT05;\nlet cDTMT06 = flow.get('ccDTMT06');\ncDTMT06 = (cDTMT06 === undefined) ? 0: cDTMT06;\nlet cDTMT07 = flow.get('ccDTMT07');\ncDTMT07 = (cDTMT07 === undefined) ? 0: cDTMT07;\nlet cDTMT08 = flow.get('ccDTMT08');\ncDTMT08 = (cDTMT08 === undefined) ? 0: cDTMT08;\nlet cDTMT09 = flow.get('ccDTMT09');\ncDTMT09 = (cDTMT09 === undefined) ? 0: cDTMT09;\nlet cDTMT10 = flow.get('ccDTMT10');\ncDTMT10 = (cDTMT10 === undefined) ? 0: cDTMT10;\nlet cDTMT11 = flow.get('ccDTMT11');\ncDTMT11 = (cDTMT11 === undefined) ? 0: cDTMT11;\nlet cDTMT12 = flow.get('ccDTMT12');\ncDTMT12 = (cDTMT12 === undefined) ? 0: cDTMT12;\nlet cDTMT13 = flow.get('ccDTMT13');\ncDTMT13 = (cDTMT13 === undefined) ? 0: cDTMT13;\nlet cDTMT14 = flow.get('ccDTMT14');\ncDTMT14 = (cDTMT14 === undefined) ? 0: cDTMT14;\nlet cDTMT15 = flow.get('ccDTMT15');\ncDTMT15 = (cDTMT15 === undefined) ? 0: cDTMT15;\nlet cDTMT16 = flow.get('ccDTMT16');\ncDTMT16 = (cDTMT16 === undefined) ? 0: cDTMT16;\nlet cDTMT17 = flow.get('ccDTMT17');\ncDTMT17 = (cDTMT17 === undefined) ? 0: cDTMT17;\nlet cDTMT18 = flow.get('ccDTMT18');\ncDTMT18 = (cDTMT18 === undefined) ? 0: cDTMT18;\n\nlet cDTWM19 = flow.get('ccDTWM19');\ncDTWM19 = (cDTWM19 === undefined) ? 0: cDTWM19; \nlet cDTWM20 = flow.get('ccDTWM20');\ncDTWM20 = (cDTWM20 === undefined) ? 0: cDTWM20;\nlet cDTWM21 = flow.get('ccDTWM21');\ncDTWM21 = (cDTWM21 === undefined) ? 0: cDTWM21;\nlet cDTWM22 = flow.get('ccDTWM22');\ncDTWM22 = (cDTWM22 === undefined) ? 0: cDTWM22;\nlet cDTWM23 = flow.get('ccDTWM23');\ncDTWM23 = (cDTWM23 === undefined) ? 0: cDTWM23;\nlet cDTWM00 = flow.get('ccDTWM00');\ncDTWM00 = (cDTWM00 === undefined) ? 0: cDTWM00;\nlet cDTWM01 = flow.get('ccDTWM01');\ncDTWM01 = (cDTWM01 === undefined) ? 0: cDTWM01;\nlet cDTWM02 = flow.get('ccDTWM02');\ncDTWM02 = (cDTWM02 === undefined) ? 0: cDTWM02;\nlet cDTWM03 = flow.get('ccDTWM03');\ncDTWM03 = (cDTWM03 === undefined) ? 0: cDTWM03;\nlet cDTWM04 = flow.get('ccDTWM04');\ncDTWM04 = (cDTWM04 === undefined) ? 0: cDTWM04;\nlet cDTWM05 = flow.get('ccDTWM05');\ncDTWM05 = (cDTWM05 === undefined) ? 0: cDTWM05;\nlet cDTWM06 = flow.get('ccDTWM06');\ncDTWM06 = (cDTWM06 === undefined) ? 0: cDTWM06;\nlet cDTWM07 = flow.get('ccDTWM07');\ncDTWM07 = (cDTWM07 === undefined) ? 0: cDTWM07;\nlet cDTWM08 = flow.get('ccDTWM08');\ncDTWM08 = (cDTWM08 === undefined) ? 0: cDTWM08;\nlet cDTWM09 = flow.get('ccDTWM09');\ncDTWM09 = (cDTWM09 === undefined) ? 0: cDTWM09;\nlet cDTWM10 = flow.get('ccDTWM10');\ncDTWM10 = (cDTWM10 === undefined) ? 0: cDTWM10;\nlet cDTWM11 = flow.get('ccDTWM11');\ncDTWM11 = (cDTWM11 === undefined) ? 0: cDTWM11;\nlet cDTWM12 = flow.get('ccDTWM12');\ncDTWM12 = (cDTWM12 === undefined) ? 0: cDTWM12;\nlet cDTWM13 = flow.get('ccDTWM13');\ncDTWM13 = (cDTWM13 === undefined) ? 0: cDTWM13;\nlet cDTWM14 = flow.get('ccDTWM14');\ncDTWM14 = (cDTWM14 === undefined) ? 0: cDTWM14;\nlet cDTWM15 = flow.get('ccDTWM15');\ncDTWM15 = (cDTWM15 === undefined) ? 0: cDTWM15;\nlet cDTWM16 = flow.get('ccDTWM16');\ncDTWM16 = (cDTWM16 === undefined) ? 0: cDTWM16;\nlet cDTWM17 = flow.get('ccDTWM17');\ncDTWM17 = (cDTWM17 === undefined) ? 0: cDTWM17;\nlet cDTWM18 = flow.get('ccDTWM18');\ncDTWM18 = (cDTWM18 === undefined) ? 0: cDTWM18;\n\nlet cDTQI19 = flow.get('ccDTQI19');\ncDTQI19 = (cDTQI19 === undefined) ? 0: cDTQI19; \nlet cDTQI20 = flow.get('ccDTQI20');\ncDTQI20 = (cDTQI20 === undefined) ? 0: cDTQI20;\nlet cDTQI21 = flow.get('ccDTQI21');\ncDTQI21 = (cDTQI21 === undefined) ? 0: cDTQI21;\nlet cDTQI22 = flow.get('ccDTQI22');\ncDTQI22 = (cDTQI22 === undefined) ? 0: cDTQI22;\nlet cDTQI23 = flow.get('ccDTQI23');\ncDTQI23 = (cDTQI23 === undefined) ? 0: cDTQI23;\nlet cDTQI00 = flow.get('ccDTQI00');\ncDTQI00 = (cDTQI00 === undefined) ? 0: cDTQI00;\nlet cDTQI01 = flow.get('ccDTQI01');\ncDTQI01 = (cDTQI01 === undefined) ? 0: cDTQI01;\nlet cDTQI02 = flow.get('ccDTQI02');\ncDTQI02 = (cDTQI02 === undefined) ? 0: cDTQI02;\nlet cDTQI03 = flow.get('ccDTQI03');\ncDTQI03 = (cDTQI03 === undefined) ? 0: cDTQI03;\nlet cDTQI04 = flow.get('ccDTQI04');\ncDTQI04 = (cDTQI04 === undefined) ? 0: cDTQI04;\nlet cDTQI05 = flow.get('ccDTQI05');\ncDTQI05 = (cDTQI05 === undefined) ? 0: cDTQI05;\nlet cDTQI06 = flow.get('ccDTQI06');\ncDTQI06 = (cDTQI06 === undefined) ? 0: cDTQI06;\nlet cDTQI07 = flow.get('ccDTQI07');\ncDTQI07 = (cDTQI07 === undefined) ? 0: cDTQI07;\nlet cDTQI08 = flow.get('ccDTQI08');\ncDTQI08 = (cDTQI08 === undefined) ? 0: cDTQI08;\nlet cDTQI09 = flow.get('ccDTQI09');\ncDTQI09 = (cDTQI09 === undefined) ? 0: cDTQI09;\nlet cDTQI10 = flow.get('ccDTQI10');\ncDTQI10 = (cDTQI10 === undefined) ? 0: cDTQI10;\nlet cDTQI11 = flow.get('ccDTQI11');\ncDTQI11 = (cDTQI11 === undefined) ? 0: cDTQI11;\nlet cDTQI12 = flow.get('ccDTQI12');\ncDTQI12 = (cDTQI12 === undefined) ? 0: cDTQI12;\nlet cDTQI13 = flow.get('ccDTQI13');\ncDTQI13 = (cDTQI13 === undefined) ? 0: cDTQI13;\nlet cDTQI14 = flow.get('ccDTQI14');\ncDTQI14 = (cDTQI14 === undefined) ? 0: cDTQI14;\nlet cDTQI15 = flow.get('ccDTQI15');\ncDTQI15 = (cDTQI15 === undefined) ? 0: cDTQI15;\nlet cDTQI16 = flow.get('ccDTQI16');\ncDTQI16 = (cDTQI16 === undefined) ? 0: cDTQI16;\nlet cDTQI17 = flow.get('ccDTQI17');\ncDTQI17 = (cDTQI17 === undefined) ? 0: cDTQI17;\nlet cDTQI18 = flow.get('ccDTQI18');\ncDTQI18 = (cDTQI18 === undefined) ? 0: cDTQI18;\n\nlet cDTPS19 = flow.get('ccDTPS19');\ncDTPS19 = (cDTPS19 === undefined) ? 0: cDTPS19; \nlet cDTPS20 = flow.get('ccDTPS20');\ncDTPS20 = (cDTPS20 === undefined) ? 0: cDTPS20;\nlet cDTPS21 = flow.get('ccDTPS21');\ncDTPS21 = (cDTPS21 === undefined) ? 0: cDTPS21;\nlet cDTPS22 = flow.get('ccDTPS22');\ncDTPS22 = (cDTPS22 === undefined) ? 0: cDTPS22;\nlet cDTPS23 = flow.get('ccDTPS23');\ncDTPS23 = (cDTPS23 === undefined) ? 0: cDTPS23;\nlet cDTPS00 = flow.get('ccDTPS00');\ncDTPS00 = (cDTPS00 === undefined) ? 0: cDTPS00;\nlet cDTPS01 = flow.get('ccDTPS01');\ncDTPS01 = (cDTPS01 === undefined) ? 0: cDTPS01;\nlet cDTPS02 = flow.get('ccDTPS02');\ncDTPS02 = (cDTPS02 === undefined) ? 0: cDTPS02;\nlet cDTPS03 = flow.get('ccDTPS03');\ncDTPS03 = (cDTPS03 === undefined) ? 0: cDTPS03;\nlet cDTPS04 = flow.get('ccDTPS04');\ncDTPS04 = (cDTPS04 === undefined) ? 0: cDTPS04;\nlet cDTPS05 = flow.get('ccDTPS05');\ncDTPS05 = (cDTPS05 === undefined) ? 0: cDTPS05;\nlet cDTPS06 = flow.get('ccDTPS06');\ncDTPS06 = (cDTPS06 === undefined) ? 0: cDTPS06;\nlet cDTPS07 = flow.get('ccDTPS07');\ncDTPS07 = (cDTPS07 === undefined) ? 0: cDTPS07;\nlet cDTPS08 = flow.get('ccDTPS08');\ncDTPS08 = (cDTPS08 === undefined) ? 0: cDTPS08;\nlet cDTPS09 = flow.get('ccDTPS09');\ncDTPS09 = (cDTPS09 === undefined) ? 0: cDTPS09;\nlet cDTPS10 = flow.get('ccDTPS10');\ncDTPS10 = (cDTPS10 === undefined) ? 0: cDTPS10;\nlet cDTPS11 = flow.get('ccDTPS11');\ncDTPS11 = (cDTPS11 === undefined) ? 0: cDTPS11;\nlet cDTPS12 = flow.get('ccDTPS12');\ncDTPS12 = (cDTPS12 === undefined) ? 0: cDTPS12;\nlet cDTPS13 = flow.get('ccDTPS13');\ncDTPS13 = (cDTPS13 === undefined) ? 0: cDTPS13;\nlet cDTPS14 = flow.get('ccDTPS14');\ncDTPS14 = (cDTPS14 === undefined) ? 0: cDTPS14;\nlet cDTPS15 = flow.get('ccDTPS15');\ncDTPS15 = (cDTPS15 === undefined) ? 0: cDTPS15;\nlet cDTPS16 = flow.get('ccDTPS16');\ncDTPS16 = (cDTPS16 === undefined) ? 0: cDTPS16;\nlet cDTPS17 = flow.get('ccDTPS17');\ncDTPS17 = (cDTPS17 === undefined) ? 0: cDTPS17;\nlet cDTPS18 = flow.get('ccDTPS18');\ncDTPS18 = (cDTPS18 === undefined) ? 0: cDTPS18;\n\nlet cDTNM19 = flow.get('ccDTNM19');\ncDTNM19 = (cDTNM19 === undefined) ? 0: cDTNM19; \nlet cDTNM20 = flow.get('ccDTNM20');\ncDTNM20 = (cDTNM20 === undefined) ? 0: cDTNM20;\nlet cDTNM21 = flow.get('ccDTNM21');\ncDTNM21 = (cDTNM21 === undefined) ? 0: cDTNM21;\nlet cDTNM22 = flow.get('ccDTNM22');\ncDTNM22 = (cDTNM22 === undefined) ? 0: cDTNM22;\nlet cDTNM23 = flow.get('ccDTNM23');\ncDTNM23 = (cDTNM23 === undefined) ? 0: cDTNM23;\nlet cDTNM00 = flow.get('ccDTNM00');\ncDTNM00 = (cDTNM00 === undefined) ? 0: cDTNM00;\nlet cDTNM01 = flow.get('ccDTNM01');\ncDTNM01 = (cDTNM01 === undefined) ? 0: cDTNM01;\nlet cDTNM02 = flow.get('ccDTNM02');\ncDTNM02 = (cDTNM02 === undefined) ? 0: cDTNM02;\nlet cDTNM03 = flow.get('ccDTNM03');\ncDTNM03 = (cDTNM03 === undefined) ? 0: cDTNM03;\nlet cDTNM04 = flow.get('ccDTNM04');\ncDTNM04 = (cDTNM04 === undefined) ? 0: cDTNM04;\nlet cDTNM05 = flow.get('ccDTNM05');\ncDTNM05 = (cDTNM05 === undefined) ? 0: cDTNM05;\nlet cDTNM06 = flow.get('ccDTNM06');\ncDTNM06 = (cDTNM06 === undefined) ? 0: cDTNM06;\nlet cDTNM07 = flow.get('ccDTNM07');\ncDTNM07 = (cDTNM07 === undefined) ? 0: cDTNM07;\nlet cDTNM08 = flow.get('ccDTNM08');\ncDTNM08 = (cDTNM08 === undefined) ? 0: cDTNM08;\nlet cDTNM09 = flow.get('ccDTNM09');\ncDTNM09 = (cDTNM09 === undefined) ? 0: cDTNM09;\nlet cDTNM10 = flow.get('ccDTNM10');\ncDTNM10 = (cDTNM10 === undefined) ? 0: cDTNM10;\nlet cDTNM11 = flow.get('ccDTNM11');\ncDTNM11 = (cDTNM11 === undefined) ? 0: cDTNM11;\nlet cDTNM12 = flow.get('ccDTNM12');\ncDTNM12 = (cDTNM12 === undefined) ? 0: cDTNM12;\nlet cDTNM13 = flow.get('ccDTNM13');\ncDTNM13 = (cDTNM13 === undefined) ? 0: cDTNM13;\nlet cDTNM14 = flow.get('ccDTNM14');\ncDTNM14 = (cDTNM14 === undefined) ? 0: cDTNM14;\nlet cDTNM15 = flow.get('ccDTNM15');\ncDTNM15 = (cDTNM15 === undefined) ? 0: cDTNM15;\nlet cDTNM16 = flow.get('ccDTNM16');\ncDTNM16 = (cDTNM16 === undefined) ? 0: cDTNM16;\nlet cDTNM17 = flow.get('ccDTNM17');\ncDTNM17 = (cDTNM17 === undefined) ? 0: cDTNM17;\nlet cDTNM18 = flow.get('ccDTNM18');\ncDTNM18 = (cDTNM18 === undefined) ? 0: cDTNM18;\n\nlet cDTUN19 = flow.get('ccDTUN19');\ncDTUN19 = (cDTUN19 === undefined || flow.get('cUseFull19') == 0) ? 3600 - (cDTCO19 + cDTWM19 + cDTMT19 + cDTQI19 + cDTPS19 + cDTNM19): (3600 - (flow.get('cUseFull19')) - (cDTCO19 + cDTWM19 + cDTMT19 + cDTQI19 + cDTPS19 + cDTNM19)); \ncDTUN19 = (cDTUN19 < 0) ? 0 : cDTUN19;\nlet cDTUN20 = flow.get('ccDTUN20');\ncDTUN20 = (cDTUN20 === undefined || flow.get('cUseFull20') == 0) ? 3600 - (cDTCO20 + cDTWM20 + cDTMT20 + cDTQI20 + cDTPS20 + cDTNM20): (3600 - (flow.get('cUseFull20')) - (cDTCO20 + cDTWM20 + cDTMT20 + cDTQI20 + cDTPS20 + cDTNM20));\ncDTUN20 = (cDTUN20 < 0) ? 0 : cDTUN20;\nlet cDTUN21 = flow.get('ccDTUN21');\ncDTUN21 = (cDTUN21 === undefined || flow.get('cUseFull21') == 0) ? 3600 - (cDTCO21 + cDTWM21 + cDTMT21 + cDTQI21 + cDTPS21 + cDTNM21): (3600 - (flow.get('cUseFull21')) - (cDTCO21 + cDTWM21 + cDTMT21 + cDTQI21 + cDTPS21 + cDTNM21));\ncDTUN21 = (cDTUN21 < 0) ? 0 : cDTUN21;\nlet cDTUN22 = flow.get('ccDTUN22');\ncDTUN22 = (cDTUN22 === undefined || flow.get('cUseFull22') == 0) ? 3600 - (cDTCO22 + cDTWM22 + cDTMT22 + cDTQI22 + cDTPS22 + cDTNM22): (3600 - (flow.get('cUseFull22')) - (cDTCO22 + cDTWM22 + cDTMT22 + cDTQI22 + cDTPS22 + cDTNM22));\ncDTUN22 = (cDTUN22 < 0) ? 0 : cDTUN22;\nlet cDTUN23 = flow.get('ccDTUN23');\ncDTUN23 = (cDTUN23 === undefined || flow.get('cUseFull23') == 0) ? 3600 - (cDTCO23 + cDTWM23 + cDTMT23 + cDTQI23 + cDTPS23 + cDTNM23): (3600 - (flow.get('cUseFull23')) - (cDTCO23 + cDTWM23 + cDTMT23 + cDTQI23 + cDTPS23 + cDTNM23));\ncDTUN23 = (cDTUN23 < 0) ? 0 : cDTUN23;\nlet cDTUN00 = flow.get('ccDTUN00');\ncDTUN00 = (cDTUN00 === undefined || flow.get('cUseFull00') == 0) ? 3600 - (cDTCO00 + cDTWM00 + cDTMT00 + cDTQI00 + cDTPS00 + cDTNM00): (3600 - (flow.get('cUseFull00')) - (cDTCO00 + cDTWM00 + cDTMT00 + cDTQI00 + cDTPS00 + cDTNM00));\ncDTUN00 = (cDTUN00 < 0) ? 0 : cDTUN00;\nlet cDTUN01 = flow.get('ccDTUN01');\ncDTUN01 = (cDTUN01 === undefined || flow.get('cUseFull01') == 0) ? 3600 - (cDTCO01 + cDTWM01 + cDTMT01 + cDTQI01 + cDTPS01 + cDTNM01): (3600 - (flow.get('cUseFull01')) - (cDTCO01 + cDTWM01 + cDTMT01 + cDTQI01 + cDTPS01 + cDTNM01));\ncDTUN01 = (cDTUN01 < 0) ? 0 : cDTUN01;\nlet cDTUN02 = flow.get('ccDTUN02');\ncDTUN02 = (cDTUN02 === undefined || flow.get('cUseFull02') == 0) ? 3600 - (cDTCO02 + cDTWM02 + cDTMT02 + cDTQI02 + cDTPS02 + cDTNM02): (3600 - (flow.get('cUseFull02')) - (cDTCO02 + cDTWM02 + cDTMT02 + cDTQI02 + cDTPS02 + cDTNM02));\ncDTUN02 = (cDTUN02 < 0) ? 0 : cDTUN02;\nlet cDTUN03 = flow.get('ccDTUN03');\ncDTUN03 = (cDTUN03 === undefined || flow.get('cUseFull03') == 0) ? 3600 - (cDTCO03 + cDTWM03 + cDTMT03 + cDTQI03 + cDTPS03 + cDTNM03): (3600 - (flow.get('cUseFull03')) - (cDTCO03 + cDTWM03 + cDTMT03 + cDTQI03 + cDTPS03 + cDTNM03));\ncDTUN03 = (cDTUN03 < 0) ? 0 : cDTUN03;\nlet cDTUN04 = flow.get('ccDTUN04');\ncDTUN04 = (cDTUN04 === undefined || flow.get('cUseFull04') == 0) ? 3600 - (cDTCO04 + cDTWM04 + cDTMT04 + cDTQI04 + cDTPS04 + cDTNM04): (3600 - (flow.get('cUseFull04')) - (cDTCO04 + cDTWM04 + cDTMT04 + cDTQI04 + cDTPS04 + cDTNM04));\ncDTUN04 = (cDTUN04 < 0) ? 0 : cDTUN04;\nlet cDTUN05 = flow.get('ccDTUN05');\ncDTUN05 = (cDTUN05 === undefined || flow.get('cUseFull05') == 0) ? 3600 - (cDTCO05 + cDTWM05 + cDTMT05 + cDTQI05 + cDTPS05 + cDTNM05): (3600 - (flow.get('cUseFull05')) - (cDTCO05 + cDTWM05 + cDTMT05 + cDTQI05 + cDTPS05 + cDTNM05));\ncDTUN05 = (cDTUN05 < 0) ? 0 : cDTUN05;\nlet cDTUN06 = flow.get('ccDTUN06');\ncDTUN06 = (cDTUN06 === undefined || flow.get('cUseFull06') == 0) ? 3600 - (cDTCO06 + cDTWM06 + cDTMT06 + cDTQI06 + cDTPS06 + cDTNM06): (3600 - (flow.get('cUseFull06')) - (cDTCO06 + cDTWM06 + cDTMT06 + cDTQI06 + cDTPS06 + cDTNM06));\ncDTUN06 = (cDTUN06 < 0) ? 0 : cDTUN06;\nlet cDTUN07 = flow.get('ccDTUN07');\ncDTUN07 = (cDTUN07 === undefined || flow.get('cUseFull07') == 0) ? 3600 - (cDTCO07 + cDTWM07 + cDTMT07 + cDTQI07 + cDTPS07 + cDTNM07): (3600 - (flow.get('cUseFull07')) - (cDTCO07 + cDTWM07 + cDTMT07 + cDTQI07 + cDTPS07 + cDTNM07));\ncDTUN07 = (cDTUN07 < 0) ? 0 : cDTUN07;\nlet cDTUN08 = flow.get('ccDTUN08');\ncDTUN08 = (cDTUN08 === undefined || flow.get('cUseFull08') == 0) ? 3600 - (cDTCO08 + cDTWM08 + cDTMT08 + cDTQI08 + cDTPS08 + cDTNM08): (3600 - (flow.get('cUseFull08')) - (cDTCO08 + cDTWM08 + cDTMT08 + cDTQI08 + cDTPS08 + cDTNM08));\ncDTUN08 = (cDTUN08 < 0) ? 0 : cDTUN08;\nlet cDTUN09 = flow.get('ccDTUN09');\ncDTUN09 = (cDTUN09 === undefined || flow.get('cUseFull09') == 0) ? 3600 - (cDTCO09 + cDTWM09 + cDTMT09 + cDTQI09 + cDTPS09 + cDTNM09): (3600 - (flow.get('cUseFull09')) - (cDTCO09 + cDTWM09 + cDTMT09 + cDTQI09 + cDTPS09 + cDTNM09));\ncDTUN09 = (cDTUN09 < 0) ? 0 : cDTUN09;\nlet cDTUN10 = flow.get('ccDTUN10');\ncDTUN10 = (cDTUN10 === undefined || flow.get('cUseFull10') == 0) ? 3600 - (cDTCO10 + cDTWM10 + cDTMT10 + cDTQI10 + cDTPS10 + cDTNM10): (3600 - (flow.get('cUseFull10')) - (cDTCO10 + cDTWM10 + cDTMT10 + cDTQI10 + cDTPS10 + cDTNM10));\ncDTUN10 = (cDTUN10 < 0) ? 0 : cDTUN10;\nlet cDTUN11 = flow.get('ccDTUN11');\ncDTUN11 = (cDTUN11 === undefined || flow.get('cUseFull11') == 0) ? 3600 - (cDTCO11 + cDTWM11 + cDTMT11 + cDTQI11 + cDTPS11 + cDTNM11): (3600 - (flow.get('cUseFull11')) - (cDTCO11 + cDTWM11 + cDTMT11 + cDTQI11 + cDTPS11 + cDTNM11));\ncDTUN11 = (cDTUN11 < 0) ? 0 : cDTUN11;\nlet cDTUN12 = flow.get('ccDTUN12');\ncDTUN12 = (cDTUN12 === undefined || flow.get('cUseFull12') == 0) ? 3600 - (cDTCO12 + cDTWM12 + cDTMT12 + cDTQI12 + cDTPS12 + cDTNM12): (3600 - (flow.get('cUseFull12')) - (cDTCO12 + cDTWM12 + cDTMT12 + cDTQI12 + cDTPS12 + cDTNM12));\ncDTUN12 = (cDTUN12 < 0) ? 0 : cDTUN12;\nlet cDTUN13 = flow.get('ccDTUN13');\ncDTUN13 = (cDTUN13 === undefined || flow.get('cUseFull13') == 0) ? 3600 - (cDTCO13 + cDTWM13 + cDTMT13 + cDTQI13 + cDTPS13 + cDTNM13): (3600 - (flow.get('cUseFull13')) - (cDTCO13 + cDTWM13 + cDTMT13 + cDTQI13 + cDTPS13 + cDTNM13));\ncDTUN13 = (cDTUN13 < 0) ? 0 : cDTUN13;\nlet cDTUN14 = flow.get('ccDTUN14');\ncDTUN14 = (cDTUN14 === undefined || flow.get('cUseFull14') == 0) ? 3600 - (cDTCO14 + cDTWM14 + cDTMT14 + cDTQI14 + cDTPS14 + cDTNM14): (3600 - (flow.get('cUseFull14')) - (cDTCO14 + cDTWM14 + cDTMT14 + cDTQI14 + cDTPS14 + cDTNM14));\ncDTUN14 = (cDTUN14 < 0) ? 0 : cDTUN14;\nlet cDTUN15 = flow.get('ccDTUN15');\ncDTUN15 = (cDTUN15 === undefined || flow.get('cUseFull15') == 0) ? 3600 - (cDTCO15 + cDTWM15 + cDTMT15 + cDTQI15 + cDTPS15 + cDTNM15): (3600 - (flow.get('cUseFull15')) - (cDTCO15 + cDTWM15 + cDTMT15 + cDTQI15 + cDTPS15 + cDTNM15));\ncDTUN15 = (cDTUN15 < 0) ? 0 : cDTUN15;\nlet cDTUN16 = flow.get('ccDTUN16');\ncDTUN16 = (cDTUN16 === undefined || flow.get('cUseFull16') == 0) ? 3600 - (cDTCO16 + cDTWM16 + cDTMT16 + cDTQI16 + cDTPS16 + cDTNM16): (3600 - (flow.get('cUseFull16')) - (cDTCO16 + cDTWM16 + cDTMT16 + cDTQI16 + cDTPS16 + cDTNM16));\ncDTUN16 = (cDTUN16 < 0) ? 0 : cDTUN16;\nlet cDTUN17 = flow.get('ccDTUN17');\ncDTUN17 = (cDTUN17 === undefined || flow.get('cUseFull17') == 0) ? 3600 - (cDTCO17 + cDTWM17 + cDTMT17 + cDTQI17 + cDTPS17 + cDTNM17): (3600 - (flow.get('cUseFull17')) - (cDTCO17 + cDTWM17 + cDTMT17 + cDTQI17 + cDTPS17 + cDTNM17));\ncDTUN17 = (cDTUN17 < 0) ? 0 : cDTUN17;\nlet cDTUN18 = flow.get('ccDTUN18');\ncDTUN18 = (cDTUN18 === undefined || flow.get('cUseFull18') == 0) ? 3600 - (cDTCO18 + cDTWM18 + cDTMT18 + cDTQI18 + cDTPS18 + cDTNM18): (3600 - (flow.get('cUseFull18')) - (cDTCO18 + cDTWM18 + cDTMT18 + cDTQI18 + cDTPS18 + cDTNM18));\ncDTUN18 = (cDTUN18 < 0) ? 0 : cDTUN18;\n\nlet vSerial = \"DT: \";\nvar BarChart = [\n    {\n        \"series\" : [\"Change Over (Sec):\",\"Maintenance (Sec):\",\"Wait Material (Sec):\",\"Quality Issue (Sec):\",\"Plan Stop\",\"New Model\",\"UnKnow (Sec):\"],\n        \"data\": [[cDTCO19,cDTCO20,cDTCO21,cDTCO22,cDTCO23,cDTCO00,cDTCO01,cDTCO02,cDTCO03,cDTCO04,cDTCO05,cDTCO06,cDTCO07,cDTCO08,cDTCO09,cDTCO10,cDTCO11,cDTCO12,cDTCO13,cDTCO14,cDTCO15,cDTCO16,cDTCO17,cDTCO18]\n                ,[cDTMT19,cDTMT20,cDTMT21,cDTMT22,cDTMT23,cDTMT00,cDTMT01,cDTMT02,cDTMT03,cDTMT04,cDTMT05,cDTMT06,cDTMT07,cDTMT08,cDTMT09,cDTMT10,cDTMT11,cDTMT12,cDTMT13,cDTMT14,cDTMT15,cDTMT16,cDTMT17,cDTMT18]\n                ,[cDTWM19,cDTWM20,cDTWM21,cDTWM22,cDTWM23,cDTWM00,cDTWM01,cDTWM02,cDTWM03,cDTWM04,cDTWM05,cDTWM06,cDTWM07,cDTWM08,cDTWM09,cDTWM10,cDTWM11,cDTWM12,cDTWM13,cDTWM14,cDTWM15,cDTWM16,cDTWM17,cDTWM18]\n                ,[cDTQI19,cDTQI20,cDTQI21,cDTQI22,cDTQI23,cDTQI00,cDTQI01,cDTQI02,cDTQI03,cDTQI04,cDTQI05,cDTQI06,cDTQI07,cDTQI08,cDTQI09,cDTQI10,cDTQI11,cDTQI12,cDTQI13,cDTQI14,cDTQI15,cDTQI16,cDTQI17,cDTQI18]\n                ,[cDTPS19,cDTPS20,cDTPS21,cDTPS22,cDTPS23,cDTPS00,cDTPS01,cDTPS02,cDTPS03,cDTPS04,cDTPS05,cDTPS06,cDTPS07,cDTPS08,cDTPS09,cDTPS10,cDTPS11,cDTPS12,cDTPS13,cDTPS14,cDTPS15,cDTPS16,cDTPS17,cDTPS18]\n                ,[cDTNM19,cDTNM20,cDTNM21,cDTNM22,cDTNM23,cDTNM00,cDTNM01,cDTNM02,cDTNM03,cDTNM04,cDTNM05,cDTNM06,cDTNM07,cDTNM08,cDTNM09,cDTNM10,cDTNM11,cDTNM12,cDTNM13,cDTNM14,cDTNM15,cDTNM16,cDTNM17,cDTNM18]\n                ,[cDTUN19,cDTUN20,cDTUN21,cDTUN22,cDTUN23,cDTUN00,cDTUN01,cDTUN02,cDTUN03,cDTUN04,cDTUN05,cDTUN06,cDTUN07,cDTUN08,cDTUN09,cDTUN10,cDTUN11,cDTUN12,cDTUN13,cDTUN14,cDTUN15,cDTUN16,cDTUN17,cDTUN18]],\n        \"labels\" : [\"19\",\"20\",\"21\",\"22\",\"23\",\"00\",\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\"]\n    }\n]\n\nmsg.payload = BarChart;\n\nmsg.ui_control = {\n     options: {\n        scales: {\n            xAxes: [{\n                stacked: true\n            }],\n            yAxes: [{\n                stacked: true\n            }]\n        }\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 980,
        "wires": [
            [
                "366246f1864ae96c"
            ]
        ]
    },
    {
        "id": "e7e033dd50d1f902",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Availability",
        "func": "let vDataA = msg.payload;\nlet vTotalTimeA = vDataA[0].TotalTimeA;\nlet vSchTime = vDataA[0].SchTime;\nlet vAvailability = vDataA[0].Availability;\n\nlet pAvai = vAvailability.toFixed(2);\nflow.set('vAvailability',pAvai);\nflow.set('vSchTime',vSchTime);\nmsg.payload = pAvai;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 860,
        "wires": [
            [
                "c929dca2dca16ae7"
            ]
        ]
    },
    {
        "id": "8c9813b38915d835",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "mode": "link",
        "links": [
            "af5670edfb66a798"
        ],
        "x": 1425,
        "y": 480,
        "wires": []
    },
    {
        "id": "0e49010d0e6205b6",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "2f2b3fe690cf8c81"
        ],
        "x": 1575,
        "y": 380,
        "wires": [
            [
                "3a8aed1d3ac42a0e",
                "bf43f9c413eb66a5",
                "290a8964c271b071"
            ]
        ]
    },
    {
        "id": "2f2b3fe690cf8c81",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "mode": "link",
        "links": [
            "0e49010d0e6205b6"
        ],
        "x": 1515,
        "y": 260,
        "wires": []
    },
    {
        "id": "59bde37b351f93eb",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "1fea0bdde5bd23f6"
        ],
        "x": 75,
        "y": 320,
        "wires": [
            [
                "d78830adabfc0d4f"
            ]
        ]
    },
    {
        "id": "50cef594e3c07d86",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "1bae0f4bf23172dd",
            "1fea0bdde5bd23f6"
        ],
        "x": 635,
        "y": 280,
        "wires": [
            [
                "bfeed4250462619f",
                "b6382ccf485f2867"
            ]
        ]
    },
    {
        "id": "abcad3e448848502",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "mode": "link",
        "links": [
            "6b1d4ef56062b300"
        ],
        "x": 315,
        "y": 320,
        "wires": []
    },
    {
        "id": "1bae0f4bf23172dd",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "mode": "link",
        "links": [
            "50cef594e3c07d86"
        ],
        "x": 635,
        "y": 180,
        "wires": []
    },
    {
        "id": "fd033ff99cff782e",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "878689aa6dc71b01",
            "0546c48fb58a775d",
            "52af9cd76550fb21"
        ],
        "x": 755,
        "y": 520,
        "wires": [
            [
                "b0a880936df4ee05"
            ]
        ]
    },
    {
        "id": "878689aa6dc71b01",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "mode": "link",
        "links": [
            "fd033ff99cff782e"
        ],
        "x": 575,
        "y": 560,
        "wires": []
    },
    {
        "id": "0546c48fb58a775d",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "mode": "link",
        "links": [
            "fd033ff99cff782e",
            "22836460e2bd7975"
        ],
        "x": 315,
        "y": 280,
        "wires": []
    },
    {
        "id": "fad1b00266177816",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "52af9cd76550fb21"
        ],
        "x": 755,
        "y": 400,
        "wires": [
            [
                "36fc653f9f1cf124"
            ]
        ]
    },
    {
        "id": "40cf3ebff9ef19ee",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "52af9cd76550fb21"
        ],
        "x": 755,
        "y": 440,
        "wires": [
            [
                "cbe5c757918cd827"
            ]
        ]
    },
    {
        "id": "f44ea4a4b0ea8014",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "52af9cd76550fb21",
            "c04e5f162025a968"
        ],
        "x": 755,
        "y": 480,
        "wires": [
            [
                "4cccd9e991b579c8"
            ]
        ]
    },
    {
        "id": "c328138bc530d46a",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "52af9cd76550fb21"
        ],
        "x": 755,
        "y": 560,
        "wires": [
            [
                "72235399a384434d"
            ]
        ]
    },
    {
        "id": "816e66e62139cf30",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "52af9cd76550fb21"
        ],
        "x": 55,
        "y": 520,
        "wires": [
            [
                "2a6f3277d972bb05"
            ]
        ]
    },
    {
        "id": "c04e5f162025a968",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "mode": "link",
        "links": [
            "f44ea4a4b0ea8014"
        ],
        "x": 795,
        "y": 1200,
        "wires": []
    },
    {
        "id": "fb52859288611830",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "STBL_GET_PLAN_OEE",
        "func": "var vLine = flow.get('vLineGet');\nvar vStartDate = flow.get('vStartDateGet');\nlet vProcess = 'Reflow';\n\nvar t= \"EXEC [STBL_PLAN].[dbo].[STBL_GET_PLAN_OEE] \" + \"\\'\" + vLine + \"\\'\";\n\nmsg.payload = t; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 1060,
        "wires": [
            [
                "a1af5c37d6d7483a"
            ]
        ]
    },
    {
        "id": "a1af5c37d6d7483a",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "2781072e7707b6f3",
        "name": "SQL 228",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 2520,
        "y": 1060,
        "wires": [
            [
                "c733f3fc9f1b57f0"
            ]
        ]
    },
    {
        "id": "c733f3fc9f1b57f0",
        "type": "ui_table",
        "z": "654ceb9908184e3c",
        "group": "1afc4d72.0904bb",
        "name": "Plan OEE",
        "order": 5,
        "width": 30,
        "height": 5,
        "columns": [
            {
                "field": "SMT_line",
                "title": "#Line",
                "width": "5%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "STATUS",
                "title": "Status",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Priority",
                "title": "Priority",
                "width": "20%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Side",
                "title": "Side",
                "width": "5%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Model",
                "title": "Model",
                "width": "20%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Tracking",
                "title": "Tracking",
                "width": "10%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Lot",
                "title": "Lot",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Plans",
                "title": "Plans",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "PLAN_Start_Date",
                "title": "PLAN Start Date",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 2180,
        "y": 1100,
        "wires": [
            [
                "d76c07c0e5115905",
                "48154cd1758acb73"
            ]
        ]
    },
    {
        "id": "8ef7ed1263a0074d",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "1afc4d72.0904bb",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<H1>Plan</H1>",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2200,
        "y": 1020,
        "wires": []
    },
    {
        "id": "1e0102cda48ed2f7",
        "type": "ui_table",
        "z": "654ceb9908184e3c",
        "group": "1afc4d72.0904bb",
        "name": "Plan Start",
        "order": 10,
        "width": 10,
        "height": 2,
        "columns": [
            {
                "field": "ID",
                "title": "ID",
                "width": "5%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Tracking",
                "title": "Tracking",
                "width": "20%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Model",
                "title": "Model",
                "width": "30%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Lot",
                "title": "Lot",
                "width": "10%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Plans",
                "title": "Plans",
                "width": "15%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "TotalQty",
                "title": "Total",
                "width": "15%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 2660,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "8c5d20c80703ba06",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "1afc4d72.0904bb",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<H3>Plan Start</H3>",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2560,
        "y": 1020,
        "wires": []
    },
    {
        "id": "ae61c099babed6df",
        "type": "ui_text_input",
        "z": "654ceb9908184e3c",
        "name": "",
        "label": "Operator :",
        "tooltip": "",
        "group": "1afc4d72.0904bb",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2090,
        "y": 1280,
        "wires": [
            [
                "74cb580c4d4950ec",
                "5cb583409fbe594b"
            ]
        ]
    },
    {
        "id": "74cb580c4d4950ec",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "SQL STBL_GET_NAME_ENG",
        "func": "let vEmpCode = msg.payload\nif(vEmpCode.length == 6){\n    var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_GET_NAME_ENG] \" + \"\\'\" + vEmpCode + \"\\'\";\n    msg.payload = t; \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2390,
        "y": 1280,
        "wires": [
            [
                "869f1d295afd7ca8"
            ]
        ]
    },
    {
        "id": "5cb583409fbe594b",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set vEmpCode",
        "func": "let vEmpCode = msg.payload;\nflow.set('vOptCode',vEmpCode);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2340,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "869f1d295afd7ca8",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "ca212ce29061f8cb",
        "name": "Get Name",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 2620,
        "y": 1280,
        "wires": [
            [
                "109d366616190c70"
            ]
        ]
    },
    {
        "id": "109d366616190c70",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Get Name",
        "func": "let vDate = msg.payload;\nlet vName = vDate[0]['EmpName'];\n\nmsg.payload = vName;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2760,
        "y": 1280,
        "wires": [
            [
                "8f7fd62ff1d0e075"
            ]
        ]
    },
    {
        "id": "8f7fd62ff1d0e075",
        "type": "ui_text",
        "z": "654ceb9908184e3c",
        "group": "1afc4d72.0904bb",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Name :",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2940,
        "y": 1280,
        "wires": []
    },
    {
        "id": "a9e1ebfd7a09421a",
        "type": "ui_button",
        "z": "654ceb9908184e3c",
        "name": "",
        "group": "1afc4d72.0904bb",
        "order": 12,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2110,
        "y": 1400,
        "wires": [
            [
                "3fb8b9f3419fd839"
            ]
        ]
    },
    {
        "id": "3fb8b9f3419fd839",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "MAIN_PROD_UPD_Start",
        "func": "let vEmpCode = flow.get('vOptCode');\nlet vType = 'Start';\nlet vJobID = flow.get('vJobID');\n\nvar t= \"EXEC [STBL_PLAN].[dbo].[MAIN_PROD_UPD] \" + \"\\'\" + vType + \"\\'\" + \",\\'\" + vJobID + \"\\'\" + \",\\'\" + vEmpCode + \"\\'\" + \",\\'\" + \"0\" + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2330,
        "y": 1400,
        "wires": [
            [
                "aaef8db50ddd5bf1"
            ]
        ]
    },
    {
        "id": "aaef8db50ddd5bf1",
        "type": "MSSQL",
        "z": "654ceb9908184e3c",
        "mssqlCN": "64a947e8.aad318",
        "name": "Start Plan",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "params": [],
        "x": 2560,
        "y": 1440,
        "wires": [
            [
                "c3054af60d75af1e",
                "6df068cc14210aa7"
            ]
        ]
    },
    {
        "id": "d76c07c0e5115905",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set ID",
        "func": "var vJobID = msg.payload['ID'];\n\nflow.set('vJobID',vJobID);\n\nmsg.payload = vJobID;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2190,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "ca7ab1a3495b01da",
        "type": "ui_toast",
        "z": "654ceb9908184e3c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "",
        "x": 2910,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "c3054af60d75af1e",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Success",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult == 'Success'){\n    msg.payload = vResult;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2740,
        "y": 1400,
        "wires": [
            [
                "6387b5184cc9e627",
                "ca7ab1a3495b01da",
                "5b830b1eca4d102b"
            ]
        ]
    },
    {
        "id": "6df068cc14210aa7",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "False",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult != 'Success'){\n    msg.payload = 'Failed.';\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 1480,
        "wires": [
            [
                "6387b5184cc9e627",
                "bae538165f729871",
                "5b830b1eca4d102b"
            ]
        ]
    },
    {
        "id": "bae538165f729871",
        "type": "ui_toast",
        "z": "654ceb9908184e3c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "",
        "x": 2890,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "6387b5184cc9e627",
        "type": "change",
        "z": "654ceb9908184e3c",
        "name": "Clear Opt Text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3040,
        "y": 1440,
        "wires": [
            [
                "b919ab89efa172be"
            ]
        ]
    },
    {
        "id": "b919ab89efa172be",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "mode": "link",
        "links": [
            "67bd80575fb0d7e9",
            "b6aa5593f1b6687a",
            "c819ca7d68781227"
        ],
        "x": 3165,
        "y": 1440,
        "wires": []
    },
    {
        "id": "67bd80575fb0d7e9",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "b919ab89efa172be"
        ],
        "x": 2735,
        "y": 1340,
        "wires": [
            [
                "8f7fd62ff1d0e075",
                "869f1d295afd7ca8"
            ]
        ]
    },
    {
        "id": "b6aa5593f1b6687a",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "b919ab89efa172be"
        ],
        "x": 2355,
        "y": 1120,
        "wires": [
            [
                "48154cd1758acb73"
            ]
        ]
    },
    {
        "id": "c819ca7d68781227",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "b919ab89efa172be"
        ],
        "x": 1975,
        "y": 1280,
        "wires": [
            [
                "ae61c099babed6df"
            ]
        ]
    },
    {
        "id": "5b830b1eca4d102b",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "mode": "link",
        "links": [
            "effbea48e760dea3"
        ],
        "x": 2845,
        "y": 1440,
        "wires": []
    },
    {
        "id": "effbea48e760dea3",
        "type": "link in",
        "z": "654ceb9908184e3c",
        "name": "",
        "links": [
            "5b830b1eca4d102b",
            "e92490adaea79414"
        ],
        "x": 2045,
        "y": 1060,
        "wires": [
            [
                "fb52859288611830"
            ]
        ]
    },
    {
        "id": "dbe89226690ea819",
        "type": "ui_button",
        "z": "654ceb9908184e3c",
        "name": "",
        "group": "1afc4d72.0904bb",
        "order": 13,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Done",
        "tooltip": "",
        "color": "",
        "bgcolor": "Blue",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2110,
        "y": 1480,
        "wires": [
            [
                "126428eced1c5d53"
            ]
        ]
    },
    {
        "id": "126428eced1c5d53",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "MAIN_PROD_UPD_Start",
        "func": "let vEmpCode = flow.get('vOptCode');\nlet vType = 'End';\nlet vJobID = flow.get('vJobID');\nlet vQty = flow.get('vTotalQty');\n\n//if(vQty > 0)\n//{\n    var t= \"EXEC [STBL_PLAN].[dbo].[MAIN_PROD_UPD] \" + \"\\'\" + vType + \"\\'\" + \",\\'\" + vJobID + \"\\'\" + \",\\'\" + vEmpCode + \"\\'\" + \",\\'\" + vQty + \"\\'\";\n    \n    msg.payload = t; \n//}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2330,
        "y": 1480,
        "wires": [
            [
                "aaef8db50ddd5bf1"
            ]
        ]
    },
    {
        "id": "48154cd1758acb73",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Choose Data",
        "func": "var vData = [];\nvar tData = [];\nlet sData = [];\nlet vTotalQty = 0;\ntData = msg.payload;\n\nsData = flow.get('vHourlyData');\n\nlet LensData = sData.length;\n\nlet vTracking = tData['Tracking'];\n\nfor(i = 0; i < LensData; i++)\n{\n    if(sData[i].Tracking == vTracking)\n    {\n        vTotalQty = sData[i].Total;\n    }   \n}\n\nvar obj = {\"TotalQty\":vTotalQty};\nObject.assign(tData, obj);\nif(tData['ID'] != null)\n{\n       vData.push(tData);\n}\n\nmsg.payload = vData;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1100,
        "wires": [
            [
                "1e0102cda48ed2f7",
                "0421451d150952b7"
            ]
        ]
    },
    {
        "id": "0421451d150952b7",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Set TotalQty",
        "func": "var vTotalQty = msg.payload['0'].TotalQty;\n\nflow.set('vTotalQty',vTotalQty);\n\nmsg.payload = vTotalQty;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2670,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "66d5b443ca360cbe",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "",
        "func": "let vData = msg.payload;\n\nflow.set('vHourlyData',vData);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "8dea43b0d1a24338",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Alert OEE",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\nlet vOEE = flow.get('vOEEHrNoti');\nlet vOeeStatus = flow.get('vNotiStatus');\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\nvar vStatus = \"\";\n\nif(vOEE < 80 && (vOeeStatus != 'Plan Stop' && vOeeStatus != 'New Model'))\n{\n    vStatus = vOeeStatus + \" Lower < 80%\";\n    msg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer 8mMSFEBJoXDEpV8GmQu37grkoVx9Kv4s1Ns49VQElRk'};\n    msg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nLine::\" + vLine + \"\\nStatus::\" + vStatus + \"\\n\" + \"Performance::\" + vOEE + \"%\"};\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2760,
        "y": 380,
        "wires": [
            [
                "93107542de618b04"
            ]
        ]
    },
    {
        "id": "93107542de618b04",
        "type": "http request",
        "z": "654ceb9908184e3c",
        "name": "Line Noti OEE hourly",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 2980,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "4a1c41a2e42264f0",
        "type": "inject",
        "z": "654ceb9908184e3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2570,
        "y": 420,
        "wires": [
            [
                "8dea43b0d1a24338",
                "237a7b3e62d2828d",
                "1b338322f9e45539"
            ]
        ]
    },
    {
        "id": "237a7b3e62d2828d",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Alert OEE",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\nlet vOEE = flow.get('vOEEHrNoti');\nlet vOeeStatus = flow.get('vNotiStatus');\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\nvar vStatus = \"\";\n\nif(vOEE < 70 && (vOeeStatus != 'Plan Stop' && vOeeStatus != 'New Model'))\n{\n    vStatus = vOeeStatus + \" Lower < 70%\";\n    msg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer BRHPIzSEheUQKjnI3wxhU27B6HjtdXOfCFMXvIiMWVM'};\n    msg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nLine::\" + vLine + \"\\nStatus::\" + vStatus + \"\\n\" + \"Performance::\" + vOEE + \"%\"};\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2760,
        "y": 420,
        "wires": [
            [
                "93107542de618b04"
            ]
        ]
    },
    {
        "id": "1b338322f9e45539",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Alert OEE",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\nlet vOEE = flow.get('vOEEHrNoti');\nlet vOeeStatus = flow.get('vNotiStatus');\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\nvar vStatus = \"\";\n\nif(vOEE < 60 && (vOeeStatus != 'Plan Stop' && vOeeStatus != 'New Model'))\n{\n    vStatus = vOeeStatus + \" Lower < 60%\";\n    msg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer 185CUCqUnlSlEFpXRNSeE5CMWgLu1mqAhh5AJgnXpLK'};\n    msg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nLine::\" + vLine + \"\\nStatus::\" + vStatus + \"\\n\" + \"Performance::\" + vOEE + \"%\"};\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2760,
        "y": 460,
        "wires": [
            [
                "93107542de618b04"
            ]
        ]
    },
    {
        "id": "02cf9d6287fb43d6",
        "type": "function",
        "z": "654ceb9908184e3c",
        "name": "Send CT Check",
        "func": "let vSDTCT = flow.get('vSTDCT');\nif(vSDTCT == '')\n{\n    vSDTCT = 'No CT';\n}\nmsg.payload = vSDTCT;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2760,
        "y": 260,
        "wires": [
            [
                "c165587b6fabcd49"
            ]
        ]
    },
    {
        "id": "06ec0e9e5e088521",
        "type": "inject",
        "z": "654ceb9908184e3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2570,
        "y": 260,
        "wires": [
            [
                "02cf9d6287fb43d6"
            ]
        ]
    },
    {
        "id": "c165587b6fabcd49",
        "type": "tcp out",
        "z": "654ceb9908184e3c",
        "name": "Check CT #Line-19",
        "host": "200.100.100.228",
        "port": "19919",
        "beserver": "client",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 3010,
        "y": 260,
        "wires": []
    },
    {
        "id": "e92490adaea79414",
        "type": "link out",
        "z": "654ceb9908184e3c",
        "name": "",
        "mode": "link",
        "links": [
            "effbea48e760dea3"
        ],
        "x": 975,
        "y": 860,
        "wires": []
    },
    {
        "id": "cc51ff6208b43235",
        "type": "inject",
        "z": "654ceb9908184e3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1930,
        "y": 1100,
        "wires": [
            [
                "366246f1864ae96c"
            ]
        ]
    },
    {
        "id": "6a3949fae4191d14",
        "type": "inject",
        "z": "5b32b871d6bb2fd9",
        "name": "Srart!",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 200,
        "wires": [
            [
                "0df9f966ce70ab67",
                "b178c12aea85de65",
                "0a43fbb24e4805b7"
            ]
        ]
    },
    {
        "id": "0df9f966ce70ab67",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "GET List Machine",
        "func": "var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_MACHINE_LIST]\";\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 200,
        "wires": [
            [
                "c5192d2ace738c2b"
            ]
        ]
    },
    {
        "id": "c5192d2ace738c2b",
        "type": "MSSQL",
        "z": "5b32b871d6bb2fd9",
        "mssqlCN": "1be1e7eab6193824",
        "name": "Get Line",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 440,
        "y": 200,
        "wires": [
            [
                "2973ef9a05a90eaa"
            ]
        ]
    },
    {
        "id": "2973ef9a05a90eaa",
        "type": "change",
        "z": "5b32b871d6bb2fd9",
        "name": "Chg Data to Option",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "$.payload.Machine",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 200,
        "wires": [
            [
                "342ed3c15e4df1d7"
            ]
        ]
    },
    {
        "id": "5b956de9b2d54a39",
        "type": "ui_text_input",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "label": "Technical Request :",
        "tooltip": "",
        "group": "361d6ee7b1848896",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1180,
        "y": 340,
        "wires": [
            [
                "4bbda22c0babafb4",
                "29a3e37e40fda32e"
            ]
        ]
    },
    {
        "id": "342ed3c15e4df1d7",
        "type": "ui_dropdown",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "label": "Machine :",
        "tooltip": "",
        "place": "Select Machine",
        "group": "361d6ee7b1848896",
        "order": 5,
        "width": 8,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Machine",
                "value": "Machine",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 820,
        "y": 200,
        "wires": [
            [
                "f0fa9c4b3303250b",
                "3ce99971b3d86c0a"
            ]
        ]
    },
    {
        "id": "7a4e260eb7502c37",
        "type": "ui_text",
        "z": "5b32b871d6bb2fd9",
        "group": "361d6ee7b1848896",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Technical Name :",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 2010,
        "y": 340,
        "wires": []
    },
    {
        "id": "31bdfe1cca2446d4",
        "type": "ui_text",
        "z": "5b32b871d6bb2fd9",
        "group": "361d6ee7b1848896",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Line :",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 430,
        "y": 160,
        "wires": []
    },
    {
        "id": "b178c12aea85de65",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Get Line No.",
        "func": "let vLine = 'Line-19';\nflow.set('vLine',vLine);\nmsg.payload = vLine;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 160,
        "wires": [
            [
                "31bdfe1cca2446d4"
            ]
        ]
    },
    {
        "id": "9c9c75c55ef0c1cd",
        "type": "ui_dropdown",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "label": "Issue :",
        "tooltip": "",
        "place": "Select Issue",
        "group": "361d6ee7b1848896",
        "order": 6,
        "width": 11,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Issues",
                "value": "Issues",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1730,
        "y": 280,
        "wires": [
            [
                "b2b48badbfce43dc"
            ]
        ]
    },
    {
        "id": "f0fa9c4b3303250b",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "SQL STBL_ISSUE_LIST",
        "func": "let vMachine = msg.payload\nif(vMachine != ''){\n    var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_ISSUE_LIST] \" + \"\\'\" + vMachine + \"\\'\";\n    msg.payload = t; \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 280,
        "wires": [
            [
                "fc93dabdd506364b"
            ]
        ]
    },
    {
        "id": "fc93dabdd506364b",
        "type": "MSSQL",
        "z": "5b32b871d6bb2fd9",
        "mssqlCN": "1be1e7eab6193824",
        "name": "Get Issue",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1400,
        "y": 280,
        "wires": [
            [
                "28e180c1059f7283"
            ]
        ]
    },
    {
        "id": "28e180c1059f7283",
        "type": "change",
        "z": "5b32b871d6bb2fd9",
        "name": "Chg Data to Option",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "$.payload.Issues",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 280,
        "wires": [
            [
                "9c9c75c55ef0c1cd"
            ]
        ]
    },
    {
        "id": "3ce99971b3d86c0a",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Set vMachine",
        "func": "let vMachine = msg.payload;\nflow.set('vMachine',vMachine);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "0a43fbb24e4805b7",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Set Values",
        "func": "flow.set('vMachine','');\nflow.set('vIssue','');\nflow.set('vEngineerCode','');\nflow.set('vJobID','');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "b2b48badbfce43dc",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Set vIssue",
        "func": "let vIssue = msg.payload;\nflow.set('vIssue',vIssue);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1890,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "4bbda22c0babafb4",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "SQL STBL_GET_NAME_ENG",
        "func": "let vEmpCode = msg.payload\nif(vEmpCode.length == 6){\n    var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_GET_NAME_ENG] \" + \"\\'\" + vEmpCode + \"\\'\";\n    msg.payload = t; \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 340,
        "wires": [
            [
                "51e66e210702a27c"
            ]
        ]
    },
    {
        "id": "58acd73e0ce02d31",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Get Name",
        "func": "let vDate = msg.payload;\nlet vName = vDate[0]['EmpName'];\n\nmsg.payload = vName;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 340,
        "wires": [
            [
                "7a4e260eb7502c37"
            ]
        ]
    },
    {
        "id": "51e66e210702a27c",
        "type": "MSSQL",
        "z": "5b32b871d6bb2fd9",
        "mssqlCN": "1be1e7eab6193824",
        "name": "Get Name",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1680,
        "y": 340,
        "wires": [
            [
                "58acd73e0ce02d31"
            ]
        ]
    },
    {
        "id": "e5bee3936999d65b",
        "type": "ui_button",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "group": "361d6ee7b1848896",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Request",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 760,
        "wires": [
            [
                "7d494b5a9e5b0efc"
            ]
        ]
    },
    {
        "id": "d3500096c26923b0",
        "type": "ui_button",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "group": "361d6ee7b1848896",
        "order": 10,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Cancle",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": " ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 620,
        "y": 400,
        "wires": [
            [
                "4afc2f8e8332afb3",
                "da02b9bee9a41cd9",
                "705c15ed9cd152c5",
                "fb42cda3f0a39a38"
            ]
        ]
    },
    {
        "id": "4afc2f8e8332afb3",
        "type": "change",
        "z": "5b32b871d6bb2fd9",
        "name": "Clear EmpCode",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 420,
        "wires": [
            [
                "5b956de9b2d54a39"
            ]
        ]
    },
    {
        "id": "da02b9bee9a41cd9",
        "type": "change",
        "z": "5b32b871d6bb2fd9",
        "name": "Clear EmpName",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 540,
        "wires": [
            [
                "7a4e260eb7502c37"
            ]
        ]
    },
    {
        "id": "705c15ed9cd152c5",
        "type": "change",
        "z": "5b32b871d6bb2fd9",
        "name": "Clear Machine",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "null",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 460,
        "wires": [
            [
                "342ed3c15e4df1d7"
            ]
        ]
    },
    {
        "id": "fb42cda3f0a39a38",
        "type": "change",
        "z": "5b32b871d6bb2fd9",
        "name": "Clear Issue",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "null",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 500,
        "wires": [
            [
                "9c9c75c55ef0c1cd"
            ]
        ]
    },
    {
        "id": "7d494b5a9e5b0efc",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "SQL STBL_INS_MAINT",
        "func": "let vLine = flow.get('vLine');\nlet vLocation = 'SMT'\nlet vMachine = flow.get('vMachine');\nlet vIssue = flow.get('vIssue');\nlet vEmpCode = flow.get('vEmpCode');\n//msg.payload = vLine;\nvar t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_INS_MAINT] \" + \"\\'\" + vLocation + \"\\'\" + \",\\'\" + vLine + \"\\'\" + \",\\'\" + vMachine + \"\\'\" + \",\\'\" + vIssue + \"\\'\" + \",\\'\" + vEmpCode + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 760,
        "wires": [
            [
                "acfe9707175b90d9"
            ]
        ]
    },
    {
        "id": "acfe9707175b90d9",
        "type": "MSSQL",
        "z": "5b32b871d6bb2fd9",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 540,
        "y": 760,
        "wires": [
            [
                "73d258387bf7604d",
                "fa13473134d86137"
            ]
        ]
    },
    {
        "id": "29a3e37e40fda32e",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Set vEmpCode",
        "func": "let vEmpCode = msg.payload;\nflow.set('vEmpCode',vEmpCode);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1400,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "73d258387bf7604d",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "False",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult == 'False'){\n    msg.payload = 'Please enter detail.';\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 820,
        "wires": [
            [
                "e5851fc119b5504a"
            ]
        ]
    },
    {
        "id": "e5851fc119b5504a",
        "type": "ui_toast",
        "z": "5b32b871d6bb2fd9",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "",
        "x": 890,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "fa13473134d86137",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Success",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult == 'Success'){\n    msg.payload = vResult;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 760,
        "wires": [
            [
                "0a43fbb24e4805b7",
                "4afc2f8e8332afb3",
                "da02b9bee9a41cd9",
                "705c15ed9cd152c5",
                "fb42cda3f0a39a38",
                "fcca15a128ae7c12",
                "595fe2de31de8ef4"
            ]
        ]
    },
    {
        "id": "fcca15a128ae7c12",
        "type": "ui_toast",
        "z": "5b32b871d6bb2fd9",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "",
        "x": 890,
        "y": 760,
        "wires": [
            [
                "987acf0ee6bd06ca",
                "ecd329ed9dbcd6f3"
            ]
        ]
    },
    {
        "id": "595fe2de31de8ef4",
        "type": "tcp out",
        "z": "5b32b871d6bb2fd9",
        "name": "Maintennace Call TCP",
        "host": "200.100.100.228",
        "port": "8998",
        "beserver": "client",
        "base64": false,
        "end": true,
        "x": 940,
        "y": 600,
        "wires": []
    },
    {
        "id": "22869a83e19d0385",
        "type": "ui_table",
        "z": "5b32b871d6bb2fd9",
        "group": "361d6ee7b1848896",
        "name": "Main Task",
        "order": 16,
        "width": 22,
        "height": 4,
        "columns": [
            {
                "field": "ID",
                "title": "No#",
                "width": "6%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Location",
                "title": "Location",
                "width": "8%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Line",
                "title": "Line",
                "width": "6%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Machine",
                "title": "Machine",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Issue",
                "title": "Issue",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "TechCode",
                "title": "Technical",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Req_Date",
                "title": "Request Date",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Status",
                "title": "Status",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1120,
        "y": 60,
        "wires": [
            [
                "5708538d206af60c"
            ]
        ]
    },
    {
        "id": "3a2b0704441f546b",
        "type": "ui_date_picker",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "label": "Issue_Date",
        "group": "361d6ee7b1848896",
        "order": 13,
        "width": 5,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 60,
        "wires": [
            [
                "f33aa795f2414131"
            ]
        ]
    },
    {
        "id": "f33aa795f2414131",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Get Date",
        "func": "let vDate = msg.payload;\n\nconst monthNames = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\",\"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\nconst dateObj = new Date(vDate);\nconst month = monthNames[dateObj.getMonth()];\nconst day = String(dateObj.getDate()).padStart(2, '0');\nconst year = dateObj.getFullYear();\nconst output = year + '-' + month + '-' + day;\n\nflow.set('vStartDate',output);\n\nmsg.payload = output;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 60,
        "wires": [
            [
                "23c46f092c4a98b0"
            ]
        ]
    },
    {
        "id": "23c46f092c4a98b0",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "STBL_GET_ISSUE_MC",
        "func": "let vDate = msg.payload;\nlet vLine = flow.get('vLine');\nlet vLocation = 'SMT'\n\nvar t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_GET_ISSUE_MC_LINE] \" + \"\\'\" + vLocation + \"\\'\" + \",\\'\" + vLine + \"\\'\" + \",\\'\" + vDate + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "2a3249b3fee4c6b5"
            ]
        ]
    },
    {
        "id": "2a3249b3fee4c6b5",
        "type": "MSSQL",
        "z": "5b32b871d6bb2fd9",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 920,
        "y": 60,
        "wires": [
            [
                "22869a83e19d0385"
            ]
        ]
    },
    {
        "id": "987acf0ee6bd06ca",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Get Date",
        "func": "let vDate = msg.payload;\n\nlet dateObj = new Date();\n\nif(vDate != '' || typeof(vDate) != \"undefined\")\n{\n    dateObj = new Date(vDate);\n}\n\nconst monthNames = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\",\"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\nconst month = monthNames[dateObj.getMonth()];\nconst day = String(dateObj.getDate()).padStart(2, '0');\nconst year = dateObj.getFullYear();\nconst output = year + '-' + month + '-' + day;\n\nflow.set('vStartDate',output);\n\nmsg.payload = output;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 760,
        "wires": [
            [
                "b6a799be8623e08b"
            ]
        ]
    },
    {
        "id": "b6a799be8623e08b",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "STBL_GET_ISSUE_MC",
        "func": "let vDate = flow.get('vStartDate');\nlet vLine = flow.get('vLine');\nlet vLocation = 'SMT'\n\nvar t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_GET_ISSUE_MC_LINE] \" + \"\\'\" + vLocation + \"\\'\" + \",\\'\" + vLine + \"\\'\" + \",\\'\" + vDate + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 760,
        "wires": [
            [
                "884f2e7ec68a8281"
            ]
        ]
    },
    {
        "id": "884f2e7ec68a8281",
        "type": "MSSQL",
        "z": "5b32b871d6bb2fd9",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1540,
        "y": 760,
        "wires": [
            [
                "22869a83e19d0385"
            ]
        ]
    },
    {
        "id": "aa28d97ac95bca3f",
        "type": "ui_table",
        "z": "5b32b871d6bb2fd9",
        "group": "361d6ee7b1848896",
        "name": "Engineer Confirm",
        "order": 32,
        "width": 9,
        "height": 2,
        "columns": [
            {
                "field": "ID",
                "title": "No#",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Machine",
                "title": "Machine",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Issue",
                "title": "Issue",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 490,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1917d2bdeda4fc6a",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Choose Data",
        "func": "var vData = [];\nvar tData = [];\ntData = msg.payload;\n\nif(tData['ID'] != null && tData['Status'] != 'Done')\n{\n       vData.push(tData);\n}\n\nmsg.payload = vData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1060,
        "wires": [
            [
                "aa28d97ac95bca3f",
                "f413bc89a0e4b221"
            ]
        ]
    },
    {
        "id": "2e9371d44fe0cf7f",
        "type": "ui_text_input",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "label": "Engineer Confirm :",
        "tooltip": "",
        "group": "361d6ee7b1848896",
        "order": 26,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 770,
        "y": 1000,
        "wires": [
            [
                "e2671ee291107996",
                "d08aa9ed3882aada"
            ]
        ]
    },
    {
        "id": "d08aa9ed3882aada",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Set vEmpCode",
        "func": "let vEngineerCode = msg.payload;\nflow.set('vEngineerCode',vEngineerCode);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "e2671ee291107996",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "SQL STBL_GET_NAME_ENG",
        "func": "let vEmpCode = msg.payload\nif(vEmpCode.length == 6){\n    var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_GET_NAME_ENG] \" + \"\\'\" + vEmpCode + \"\\'\";\n    msg.payload = t; \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1000,
        "wires": [
            [
                "502a48c8a8377f85"
            ]
        ]
    },
    {
        "id": "502a48c8a8377f85",
        "type": "MSSQL",
        "z": "5b32b871d6bb2fd9",
        "mssqlCN": "1be1e7eab6193824",
        "name": "Get Name",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1280,
        "y": 1000,
        "wires": [
            [
                "e2c8694cdc2340c1"
            ]
        ]
    },
    {
        "id": "e2c8694cdc2340c1",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Get Name",
        "func": "let vData = msg.payload;\n\nif(typeof(vData) != \"undefined\"){\n    let vName = vData[0]['EmpName'];\n    msg.payload = vName;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 1000,
        "wires": [
            [
                "6561dde8df3d18eb"
            ]
        ]
    },
    {
        "id": "6561dde8df3d18eb",
        "type": "ui_text",
        "z": "5b32b871d6bb2fd9",
        "group": "361d6ee7b1848896",
        "order": 27,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Engineer Name :",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1670,
        "y": 1000,
        "wires": []
    },
    {
        "id": "bd63213365102116",
        "type": "ui_button",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "group": "361d6ee7b1848896",
        "order": 40,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Done Job",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 1180,
        "wires": [
            [
                "2ee94a7b5b9e235a"
            ]
        ]
    },
    {
        "id": "48e2e1d3fd3958c7",
        "type": "change",
        "z": "5b32b871d6bb2fd9",
        "name": "Clear EngineerName",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1320,
        "wires": [
            [
                "6561dde8df3d18eb"
            ]
        ]
    },
    {
        "id": "289ab54958c75b63",
        "type": "change",
        "z": "5b32b871d6bb2fd9",
        "name": "Clear EngineerCode",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1280,
        "wires": [
            [
                "2e9371d44fe0cf7f"
            ]
        ]
    },
    {
        "id": "3babc4ebe1ad7c37",
        "type": "ui_button",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "group": "361d6ee7b1848896",
        "order": 38,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Cancel",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 1320,
        "wires": [
            [
                "1917d2bdeda4fc6a",
                "48e2e1d3fd3958c7",
                "289ab54958c75b63",
                "45b38e4e282ae7af"
            ]
        ]
    },
    {
        "id": "31dbe639c72ae068",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Set ID",
        "func": "var vJobID = msg.payload['ID'];\n\nflow.set('vJobID',vJobID);\n\nmsg.payload = vJobID;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "45b38e4e282ae7af",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Set ID",
        "func": "var vJobID = \"\";\n\nflow.set('vJobID',vJobID);\n\nmsg.payload = vJobID;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "5708538d206af60c",
        "type": "link out",
        "z": "5b32b871d6bb2fd9",
        "name": "Select Job Out",
        "links": [
            "57d0f5dd8a929a93",
            "458a3126.fbdeb8"
        ],
        "x": 1215,
        "y": 60,
        "wires": []
    },
    {
        "id": "57d0f5dd8a929a93",
        "type": "link in",
        "z": "5b32b871d6bb2fd9",
        "name": "Selected Job In",
        "links": [
            "5708538d206af60c",
            "2c1465a6.1ad73a",
            "84968667bfdc2b76"
        ],
        "x": 155,
        "y": 1040,
        "wires": [
            [
                "1917d2bdeda4fc6a",
                "31dbe639c72ae068"
            ]
        ]
    },
    {
        "id": "2ee94a7b5b9e235a",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "STBL_UPD_DONE_JOB",
        "func": "var vEngCode = flow.get('vEngineerCode');\nvar vJobID = flow.get('vJobID');\n\n//if(vEngCode != '' && vJobID != ''){\n    var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_UPD_DONE_JOB] \" + \"\\'\" + vJobID + \"\\'\"  + \",\\'\" + vEngCode + \"\\'\";\n    msg.payload = t; \n//}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1180,
        "wires": [
            [
                "d8fe37493dad9bb2",
                "ae5e75561a587802"
            ]
        ]
    },
    {
        "id": "d8fe37493dad9bb2",
        "type": "MSSQL",
        "z": "5b32b871d6bb2fd9",
        "mssqlCN": "1be1e7eab6193824",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 560,
        "y": 1180,
        "wires": [
            [
                "44bf999353079d90",
                "4fd0ca2943647d89"
            ]
        ]
    },
    {
        "id": "44bf999353079d90",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "SQL Done",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult != ''){\n    msg.payload = vResult;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1180,
        "wires": [
            [
                "595fe2de31de8ef4",
                "b6a799be8623e08b",
                "1917d2bdeda4fc6a",
                "48e2e1d3fd3958c7",
                "289ab54958c75b63",
                "45b38e4e282ae7af"
            ]
        ]
    },
    {
        "id": "4fd0ca2943647d89",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "SQL False",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult == 'False'){\n    msg.payload = 'Please enter detail.';\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1240,
        "wires": [
            [
                "c9b5ad171eb62592"
            ]
        ]
    },
    {
        "id": "c9b5ad171eb62592",
        "type": "ui_toast",
        "z": "5b32b871d6bb2fd9",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "",
        "x": 970,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "ecd329ed9dbcd6f3",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Call Line",
        "func": "let vStatus = msg.payload[0].Status;\n\nif(vStatus == 'Success'){\n    msg.payload = vStatus;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 820,
        "wires": [
            [
                "3f7f5cb233db090e"
            ]
        ]
    },
    {
        "id": "3f7f5cb233db090e",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "TM Line",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\n\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\n\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\n\nvar vStatus = \"Req. Maintenance\";\nmsg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer VzDBC8PFDQImwC2YoUe5M0rA7QFcIKuMQAL8LqaquXv'};\nmsg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nLine::\" + vLine + \"\\nStatus::\" + vStatus + \"\\n\"};\n\n//msg.payload = vHH;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 820,
        "wires": [
            [
                "2f7cc0cfe0964cbe"
            ]
        ]
    },
    {
        "id": "2f7cc0cfe0964cbe",
        "type": "http request",
        "z": "5b32b871d6bb2fd9",
        "name": "Line Noti MT",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1450,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "3833f716adb578c5",
        "type": "link in",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "links": [
            "462c791.0d8be08"
        ],
        "x": 1175,
        "y": 700,
        "wires": [
            [
                "b6a799be8623e08b"
            ]
        ]
    },
    {
        "id": "ae5e75561a587802",
        "type": "debug",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 1260,
        "wires": []
    },
    {
        "id": "5ec6b4c72274747f",
        "type": "ui_text_input",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "label": "Accept Code. :",
        "tooltip": "",
        "group": "361d6ee7b1848896",
        "order": 29,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 140,
        "y": 1480,
        "wires": [
            [
                "0d7d950fb5355e5f",
                "0008d6a1124e3d1f"
            ]
        ]
    },
    {
        "id": "0d7d950fb5355e5f",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "SQL STBL_GET_NAME_ENG",
        "func": "let vEmpCode = msg.payload\nif(vEmpCode.length == 6){\n    var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_GET_NAME_ENG] \" + \"\\'\" + vEmpCode + \"\\'\";\n    msg.payload = t; \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1480,
        "wires": [
            [
                "e904e70c296ec31f"
            ]
        ]
    },
    {
        "id": "e904e70c296ec31f",
        "type": "MSSQL",
        "z": "5b32b871d6bb2fd9",
        "mssqlCN": "f5526a14a967110c",
        "name": "Get Name",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 660,
        "y": 1480,
        "wires": [
            [
                "8aed79a9657ae4e6"
            ]
        ]
    },
    {
        "id": "8aed79a9657ae4e6",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Get Name",
        "func": "let vData = msg.payload;\n\nif(typeof(vData) != \"undefined\"){\n    let vName = vData[0]['EmpName'];\n    flow.set('vEmgName',vName);\n    msg.payload = vName;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 840,
        "y": 1480,
        "wires": [
            [
                "2e5f9826aa3d8e87"
            ]
        ]
    },
    {
        "id": "2e5f9826aa3d8e87",
        "type": "ui_text",
        "z": "5b32b871d6bb2fd9",
        "group": "361d6ee7b1848896",
        "order": 30,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Accept Name :",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1040,
        "y": 1480,
        "wires": []
    },
    {
        "id": "0008d6a1124e3d1f",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Set vEngineerCode",
        "func": "let vEngineerCode = msg.payload;\nflow.set('vEngineerCode',vEngineerCode);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "d19a2c65534a3ae9",
        "type": "ui_button",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "group": "361d6ee7b1848896",
        "order": 44,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Accept",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 1600,
        "wires": [
            [
                "b6006db743997068"
            ]
        ]
    },
    {
        "id": "b6006db743997068",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "STBL_UPD_ACCP_JOB",
        "func": "var vEngCode = flow.get('vEngineerCode');\nvar vJobID = flow.get('vJobID');\n\n//if(vEngCode != '' && vJobID != ''){\n    var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_UPD_ACCP_JOB] \" + \"\\'\" + vJobID + \"\\'\"  + \",\\'\" + vEngCode + \"\\'\";\n    msg.payload = t; \n//}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1600,
        "wires": [
            [
                "d82d4b16c4361994"
            ]
        ]
    },
    {
        "id": "d82d4b16c4361994",
        "type": "MSSQL",
        "z": "5b32b871d6bb2fd9",
        "mssqlCN": "f5526a14a967110c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 560,
        "y": 1600,
        "wires": [
            [
                "ad25396fef7f331a",
                "8baa5af8cab16690"
            ]
        ]
    },
    {
        "id": "ad25396fef7f331a",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "SQL Done",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult != ''){\n    msg.payload = vResult;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 1660,
        "wires": [
            [
                "5154addef0d12ddd",
                "62dab8a7086e40c8",
                "1cddc03d26f3f601",
                "69e01d8ce7fc052f",
                "f0217576cd24dc7d",
                "84968667bfdc2b76"
            ]
        ]
    },
    {
        "id": "8baa5af8cab16690",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "SQL False",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult == 'False'){\n    msg.payload = 'Please enter detail.';\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 1580,
        "wires": [
            [
                "ecf48da6b3222b7a",
                "84968667bfdc2b76"
            ]
        ]
    },
    {
        "id": "ecf48da6b3222b7a",
        "type": "ui_toast",
        "z": "5b32b871d6bb2fd9",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "",
        "x": 970,
        "y": 1580,
        "wires": [
            [
                "70cdfe04d6e3500f"
            ]
        ]
    },
    {
        "id": "69e01d8ce7fc052f",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Call Line",
        "func": "let vStatus = msg.payload;\n\nif(vStatus == 'Success'){\n    msg.payload = vStatus;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 1660,
        "wires": [
            [
                "48b86de06eef6d08",
                "ee06b1e0929a9a39"
            ]
        ]
    },
    {
        "id": "f0217576cd24dc7d",
        "type": "ui_toast",
        "z": "5b32b871d6bb2fd9",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "",
        "x": 970,
        "y": 1620,
        "wires": [
            [
                "70cdfe04d6e3500f"
            ]
        ]
    },
    {
        "id": "48b86de06eef6d08",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "TM Line",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\n\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\nvar vdMachine = flow.get('vDMC');\nvar vdEngname = flow.get('vEmgName');\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\n\nvar vStatus = \"Req. Engineer\";\nmsg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer BFkxbeNoPSxGBOQ6Kw7gPFm1KWYIWfbG5ByhKtMEoiT'};\nmsg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nMachine::\" + vdMachine+ \"\\nEngineer::\" + vdEngname  + \"\\nStatus:: Accept\" + \"\\n\"};\n\n//msg.payload = vHH;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1660,
        "wires": [
            [
                "a591efb96a1259d4"
            ]
        ]
    },
    {
        "id": "74ea0af88f5dbc77",
        "type": "ui_button",
        "z": "5b32b871d6bb2fd9",
        "name": "Cancel Accept",
        "group": "361d6ee7b1848896",
        "order": 42,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Cancel",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 1660,
        "wires": [
            [
                "5154addef0d12ddd",
                "62dab8a7086e40c8",
                "1cddc03d26f3f601",
                "84968667bfdc2b76"
            ]
        ]
    },
    {
        "id": "5154addef0d12ddd",
        "type": "change",
        "z": "5b32b871d6bb2fd9",
        "name": "Clear EngineerCode",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1760,
        "wires": [
            [
                "d810a1ae45ec0db6"
            ]
        ]
    },
    {
        "id": "62dab8a7086e40c8",
        "type": "change",
        "z": "5b32b871d6bb2fd9",
        "name": "Clear EngineerName",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1800,
        "wires": [
            [
                "6e6cf767650c9cb7"
            ]
        ]
    },
    {
        "id": "1cddc03d26f3f601",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "Set ID",
        "func": "var vJobID = \"\";\n\nflow.set('vJobID',vJobID);\n\nmsg.payload = vJobID;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "d810a1ae45ec0db6",
        "type": "link out",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "links": [
            "a49b37f.d937e48",
            "a2bd8875d34ad7f3"
        ],
        "x": 1175,
        "y": 1760,
        "wires": []
    },
    {
        "id": "6e6cf767650c9cb7",
        "type": "link out",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "links": [
            "46e16cbd631f12c1"
        ],
        "x": 1175,
        "y": 1800,
        "wires": []
    },
    {
        "id": "46e16cbd631f12c1",
        "type": "link in",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "links": [
            "6e6cf767650c9cb7"
        ],
        "x": 895,
        "y": 1520,
        "wires": [
            [
                "2e5f9826aa3d8e87"
            ]
        ]
    },
    {
        "id": "84968667bfdc2b76",
        "type": "link out",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "mode": "link",
        "links": [
            "57d0f5dd8a929a93",
            "699b8bf5d498c3bf"
        ],
        "x": 935,
        "y": 1720,
        "wires": []
    },
    {
        "id": "ee06b1e0929a9a39",
        "type": "function",
        "z": "5b32b871d6bb2fd9",
        "name": "TM NEW Line",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\n\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\nvar vdMachine = flow.get('vDMC');\nvar vdEngname = flow.get('vEmgName');\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\n\nvar vStatus = \"Req. Engineer\";\nmsg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer ZMomgLuDOwnKrHkdROHKeT1ePZ51sCSbueky92zOqrN'};\nmsg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nMachine::\" + vdMachine+ \"\\nEngineer::\" + vdEngname  + \"\\nStatus:: Accept\" + \"\\n\"};\n\n//msg.payload = vHH;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1700,
        "wires": [
            [
                "a591efb96a1259d4"
            ]
        ]
    },
    {
        "id": "a591efb96a1259d4",
        "type": "http request",
        "z": "5b32b871d6bb2fd9",
        "name": "Line Noti CO",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1370,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "a2bd8875d34ad7f3",
        "type": "link in",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "links": [
            "d810a1ae45ec0db6"
        ],
        "x": 15,
        "y": 1460,
        "wires": [
            [
                "5ec6b4c72274747f"
            ]
        ]
    },
    {
        "id": "70cdfe04d6e3500f",
        "type": "link out",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "links": [
            "52f739ae.70654"
        ],
        "x": 1095,
        "y": 1600,
        "wires": []
    },
    {
        "id": "f413bc89a0e4b221",
        "type": "ui_table",
        "z": "5b32b871d6bb2fd9",
        "group": "361d6ee7b1848896",
        "name": "Engineer Accept",
        "order": 34,
        "width": 9,
        "height": 2,
        "columns": [
            {
                "field": "ID",
                "title": "No#",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Machine",
                "title": "Machine",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Issue",
                "title": "Issue",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 490,
        "y": 1080,
        "wires": []
    },
    {
        "id": "ac76665b79648312",
        "type": "link in",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "links": [],
        "x": 765,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "699b8bf5d498c3bf",
        "type": "link in",
        "z": "5b32b871d6bb2fd9",
        "name": "",
        "links": [
            "84968667bfdc2b76"
        ],
        "x": 575,
        "y": 120,
        "wires": [
            [
                "23c46f092c4a98b0"
            ]
        ]
    },
    {
        "id": "832fca9394869b95",
        "type": "inject",
        "z": "c7ed0efb6d85cb7d",
        "name": "Srart!",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "a8c656fbc72ddf9f",
                "2c69d109647558b3",
                "14d37315d9b3e806",
                "a9c3a33a3ee21d1c"
            ]
        ]
    },
    {
        "id": "a8c656fbc72ddf9f",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Get Line No.",
        "func": "let vLine = 'Line-19';\nflow.set('vLine',vLine);\nmsg.payload = vLine;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 100,
        "wires": [
            [
                "f23f2ff345e982ad"
            ]
        ]
    },
    {
        "id": "f23f2ff345e982ad",
        "type": "ui_text",
        "z": "c7ed0efb6d85cb7d",
        "group": "fbc0b65ecfcd7e53",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Line :",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 530,
        "y": 100,
        "wires": []
    },
    {
        "id": "53a35dc273e52adc",
        "type": "ui_text_input",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "label": "Technical Confirm:",
        "tooltip": "",
        "group": "b796a349f2424f4e",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 570,
        "y": 1380,
        "wires": [
            [
                "79d5e4b025fd7f63",
                "d55a22167d849053"
            ]
        ]
    },
    {
        "id": "79d5e4b025fd7f63",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "SQL STBL_GET_NAME_ENG",
        "func": "let vEmpCode = msg.payload\nif(vEmpCode.length == 6){\n    var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_GET_NAME_ENG] \" + \"\\'\" + vEmpCode + \"\\'\";\n    msg.payload = t; \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1380,
        "wires": [
            [
                "30f901b774bf12c9"
            ]
        ]
    },
    {
        "id": "d55a22167d849053",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Set vEmpCode",
        "func": "let vEmpCode = msg.payload;\nflow.set('vTechCode',vEmpCode);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "30f901b774bf12c9",
        "type": "MSSQL",
        "z": "c7ed0efb6d85cb7d",
        "mssqlCN": "bb1c9c69ee6bdadb",
        "name": "Get Name",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1080,
        "y": 1380,
        "wires": [
            [
                "6c41808c70832b69"
            ]
        ]
    },
    {
        "id": "6c41808c70832b69",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Get Name",
        "func": "let vDate = msg.payload;\nlet vName = vDate[0]['EmpName'];\n\nmsg.payload = vName;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1380,
        "wires": [
            [
                "8f84323ee77750de"
            ]
        ]
    },
    {
        "id": "8f84323ee77750de",
        "type": "ui_text",
        "z": "c7ed0efb6d85cb7d",
        "group": "b796a349f2424f4e",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Technical Name :",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1410,
        "y": 1420,
        "wires": []
    },
    {
        "id": "29ec6d1b4d61a703",
        "type": "change",
        "z": "c7ed0efb6d85cb7d",
        "name": "Clear EmpCode",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1420,
        "wires": [
            [
                "53a35dc273e52adc",
                "8f84323ee77750de"
            ]
        ]
    },
    {
        "id": "d32c5c2f3d38e6f4",
        "type": "ui_date_picker",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "label": "Issue_Date",
        "group": "b796a349f2424f4e",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "x": 350,
        "y": 1520,
        "wires": [
            [
                "c374a87da7cf89e9"
            ]
        ]
    },
    {
        "id": "c374a87da7cf89e9",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Get Date",
        "func": "let vDate = msg.payload;\n\nlet dateObj = new Date();\n\nif(vDate != '' || typeof(vDate) != \"undefined\")\n{\n    dateObj = new Date(vDate);\n}\n\nconst monthNames = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\",\"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\nconst month = monthNames[dateObj.getMonth()];\nconst day = String(dateObj.getDate()).padStart(2, '0');\nconst year = dateObj.getFullYear();\nconst output = year + '-' + month + '-' + day;\n\nflow.set('vOCDate',output);\n\nmsg.payload = vDate;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1520,
        "wires": [
            [
                "a0a193f368fdf34a"
            ]
        ]
    },
    {
        "id": "a0a193f368fdf34a",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "STBL_GET_ISSUE_OC_LINE",
        "func": "let vDate = flow.get('vOCDate');\nlet vLine = flow.get('vLine');\nlet vLocation = 'SMT'\n\nvar t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_GET_ISSUE_OC_LINE] \" + \"\\'\" + vLocation + \"\\'\" + \",\\'\" + vLine + \"\\'\" + \",\\'\" + vDate + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1520,
        "wires": [
            [
                "bddc2e367379e66e"
            ]
        ]
    },
    {
        "id": "bddc2e367379e66e",
        "type": "MSSQL",
        "z": "c7ed0efb6d85cb7d",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1000,
        "y": 1520,
        "wires": [
            [
                "586f6c462716db9b"
            ]
        ]
    },
    {
        "id": "1cbe1cb279dbaa22",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Choose Data",
        "func": "var vData = [];\nvar tData = [];\ntData = msg.payload;\n\nif(tData['ID'] != null && tData['Status'] != 'Done')\n{\n       vData.push(tData);\n}\n\nmsg.payload = vData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1560,
        "wires": [
            [
                "f62513ace7d7091d"
            ]
        ]
    },
    {
        "id": "f62513ace7d7091d",
        "type": "ui_table",
        "z": "c7ed0efb6d85cb7d",
        "group": "b796a349f2424f4e",
        "name": "Tech confirm",
        "order": 15,
        "width": 12,
        "height": 2,
        "columns": [
            {
                "field": "ID",
                "title": "No#",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Tracking",
                "title": "Tracking",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Model",
                "title": "Model",
                "width": "35%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Status",
                "title": "Status",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1590,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "376c9456e7660f1f",
        "type": "ui_button",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "group": "b796a349f2424f4e",
        "order": 20,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Done Job",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 1680,
        "wires": [
            [
                "3e08a0edfb599670"
            ]
        ]
    },
    {
        "id": "929c660fbd5d472d",
        "type": "ui_button",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "group": "b796a349f2424f4e",
        "order": 21,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Cancel",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 1740,
        "wires": [
            [
                "d0aee9c84fec27c9"
            ]
        ]
    },
    {
        "id": "3e08a0edfb599670",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "STBL_UPD_DONE_JOB",
        "func": "var vTechCode = flow.get('vTechCode');\nvar vJobID = flow.get('vJobID');\n\n//if(vTechCode != '' && vJobID != ''){\n    var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_UPD_DONE_JOB_OC] \" + \"\\'\" + vJobID + \"\\'\"  + \",\\'\" + vTechCode + \"\\'\";\n    msg.payload = t; \n//}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1680,
        "wires": [
            [
                "9779973b82751467"
            ]
        ]
    },
    {
        "id": "9779973b82751467",
        "type": "MSSQL",
        "z": "c7ed0efb6d85cb7d",
        "mssqlCN": "bb1c9c69ee6bdadb",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 780,
        "y": 1680,
        "wires": [
            [
                "6b023b43de43db8c",
                "87a3fba1d336cda3"
            ]
        ]
    },
    {
        "id": "6b023b43de43db8c",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "SQL Done",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult == 'Success'){\n    msg.payload = vResult;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1680,
        "wires": [
            [
                "e30602fa3970b2f7",
                "b0bf3d18bb495328"
            ]
        ]
    },
    {
        "id": "e30602fa3970b2f7",
        "type": "tcp out",
        "z": "c7ed0efb6d85cb7d",
        "name": "Maintennace Call TCP",
        "host": "200.100.100.228",
        "port": "8997",
        "beserver": "client",
        "base64": false,
        "end": true,
        "x": 1240,
        "y": 1680,
        "wires": []
    },
    {
        "id": "ed36f25c88238caf",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Set ID",
        "func": "var vJobID = msg.payload['ID'];\n\nflow.set('vJobID',vJobID);\n\nmsg.payload = vJobID;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "2c69d109647558b3",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Set Values",
        "func": "flow.set('vMachine','');\nflow.set('vIssue','');\nflow.set('vTechCode','');\nflow.set('vOptCode','');\nflow.set('vJobID','');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "87a3fba1d336cda3",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "SQL False",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult == 'False'){\n    msg.payload = 'Please enter detail.';\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1640,
        "wires": [
            [
                "78435b8a2a866a24"
            ]
        ]
    },
    {
        "id": "78435b8a2a866a24",
        "type": "ui_toast",
        "z": "c7ed0efb6d85cb7d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "",
        "x": 1210,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "c411dd6f31107904",
        "type": "link in",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "b0bf3d18bb495328"
        ],
        "x": 575,
        "y": 1560,
        "wires": [
            [
                "a0a193f368fdf34a"
            ]
        ]
    },
    {
        "id": "d0aee9c84fec27c9",
        "type": "link out",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "a7604c5efcc80bb9",
            "a0c885088d26a91b"
        ],
        "x": 475,
        "y": 1740,
        "wires": []
    },
    {
        "id": "a7604c5efcc80bb9",
        "type": "link in",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "d0aee9c84fec27c9",
            "b0bf3d18bb495328"
        ],
        "x": 1275,
        "y": 1560,
        "wires": [
            [
                "1cbe1cb279dbaa22"
            ]
        ]
    },
    {
        "id": "b0bf3d18bb495328",
        "type": "link out",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "a0c885088d26a91b",
            "a7604c5efcc80bb9",
            "c411dd6f31107904"
        ],
        "x": 1055,
        "y": 1740,
        "wires": []
    },
    {
        "id": "a0c885088d26a91b",
        "type": "link in",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "d0aee9c84fec27c9",
            "b0bf3d18bb495328",
            "a9c3a33a3ee21d1c"
        ],
        "x": 215,
        "y": 1420,
        "wires": [
            [
                "29ec6d1b4d61a703"
            ]
        ]
    },
    {
        "id": "14d37315d9b3e806",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "GET List Machine",
        "func": "var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_MACHINE_LIST]\";\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 160,
        "wires": [
            [
                "f54558df3d198618"
            ]
        ]
    },
    {
        "id": "f54558df3d198618",
        "type": "MSSQL",
        "z": "c7ed0efb6d85cb7d",
        "mssqlCN": "bb1c9c69ee6bdadb",
        "name": "Get Line",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 580,
        "y": 160,
        "wires": [
            [
                "676098233dfda4cd"
            ]
        ]
    },
    {
        "id": "676098233dfda4cd",
        "type": "change",
        "z": "c7ed0efb6d85cb7d",
        "name": "Chg Data to Option",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "$.payload.Machine",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 160,
        "wires": [
            [
                "aee66862508ba247"
            ]
        ]
    },
    {
        "id": "aee66862508ba247",
        "type": "ui_dropdown",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "label": "Machine :",
        "tooltip": "",
        "place": "Select Machine",
        "group": "fbc0b65ecfcd7e53",
        "order": 20,
        "width": 8,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Machine",
                "value": "Machine",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 960,
        "y": 160,
        "wires": [
            [
                "9735fd77202f4564",
                "6461a61b8a055ba9"
            ]
        ]
    },
    {
        "id": "9735fd77202f4564",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Set vMachine",
        "func": "let vMachine = msg.payload;\nflow.set('vMachine',vMachine);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6461a61b8a055ba9",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "SQL STBL_ISSUE_LIST",
        "func": "let vMachine = msg.payload\nif(vMachine != ''){\n    var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_ISSUE_LIST] \" + \"\\'\" + vMachine + \"\\'\";\n    msg.payload = t; \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 240,
        "wires": [
            [
                "b6203aa1e7f2b409"
            ]
        ]
    },
    {
        "id": "b6203aa1e7f2b409",
        "type": "MSSQL",
        "z": "c7ed0efb6d85cb7d",
        "mssqlCN": "bb1c9c69ee6bdadb",
        "name": "Get Issue",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1400,
        "y": 240,
        "wires": [
            [
                "dfe3cf1fd5bfa082"
            ]
        ]
    },
    {
        "id": "dfe3cf1fd5bfa082",
        "type": "change",
        "z": "c7ed0efb6d85cb7d",
        "name": "Chg Data to Option",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "$.payload.Issues",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 240,
        "wires": [
            [
                "1193e0103d77865a"
            ]
        ]
    },
    {
        "id": "1193e0103d77865a",
        "type": "ui_dropdown",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "label": "Issue :",
        "tooltip": "",
        "place": "Select Issue",
        "group": "fbc0b65ecfcd7e53",
        "order": 21,
        "width": 11,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Issues",
                "value": "Issues",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1730,
        "y": 240,
        "wires": [
            [
                "3a0b8665135c7f33"
            ]
        ]
    },
    {
        "id": "3a0b8665135c7f33",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Set vIssue",
        "func": "let vIssue = msg.payload;\nflow.set('vIssue',vIssue);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "f4b15dcc02de150f",
        "type": "ui_table",
        "z": "c7ed0efb6d85cb7d",
        "group": "fbc0b65ecfcd7e53",
        "name": "Tech Task",
        "order": 11,
        "width": 22,
        "height": 4,
        "columns": [
            {
                "field": "ID",
                "title": "No#",
                "width": "6%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Location",
                "title": "Location",
                "width": "8%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Line",
                "title": "Line",
                "width": "6%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Machine",
                "title": "Machine",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Issue",
                "title": "Issue",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "TechCode",
                "title": "Request",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Req_Date",
                "title": "Request Date",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Status",
                "title": "Status",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1200,
        "y": 400,
        "wires": [
            [
                "527be53aa6c47292"
            ]
        ]
    },
    {
        "id": "e4fd37895af61dc0",
        "type": "ui_text_input",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "label": "Operator Request :",
        "tooltip": "",
        "group": "fbc0b65ecfcd7e53",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 390,
        "y": 300,
        "wires": [
            [
                "c6b3537868184dc7",
                "f9bad17ee1256475"
            ]
        ]
    },
    {
        "id": "c6b3537868184dc7",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "SQL STBL_GET_NAME_ENG",
        "func": "let vEmpCode = msg.payload\nif(vEmpCode.length == 6){\n    var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_GET_NAME_ENG] \" + \"\\'\" + vEmpCode + \"\\'\";\n    msg.payload = t; \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 300,
        "wires": [
            [
                "0b57debbd5e3d5e6"
            ]
        ]
    },
    {
        "id": "f9bad17ee1256475",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Set vEmpCode",
        "func": "let vEmpCode = msg.payload;\nflow.set('vOptCode',vEmpCode);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "0b57debbd5e3d5e6",
        "type": "MSSQL",
        "z": "c7ed0efb6d85cb7d",
        "mssqlCN": "bb1c9c69ee6bdadb",
        "name": "Get Name",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 900,
        "y": 300,
        "wires": [
            [
                "1fced58c5afcbc6b"
            ]
        ]
    },
    {
        "id": "1fced58c5afcbc6b",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Get Name",
        "func": "let vDate = msg.payload;\nlet vName = vDate[0]['EmpName'];\n\nmsg.payload = vName;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 300,
        "wires": [
            [
                "3ccd125ac1a71fe0"
            ]
        ]
    },
    {
        "id": "3ccd125ac1a71fe0",
        "type": "ui_text",
        "z": "c7ed0efb6d85cb7d",
        "group": "fbc0b65ecfcd7e53",
        "order": 4,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Operator Name :",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1230,
        "y": 300,
        "wires": []
    },
    {
        "id": "c680dc7fbf22367b",
        "type": "ui_date_picker",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "label": "Issue_Date",
        "group": "fbc0b65ecfcd7e53",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 400,
        "wires": [
            [
                "aa27234b1b9c339b"
            ]
        ]
    },
    {
        "id": "aa27234b1b9c339b",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Get Date",
        "func": "let vDate = msg.payload;\n\nlet dateObj = new Date();\n\nif(vDate != '' || typeof(vDate) != \"undefined\")\n{\n    dateObj = new Date(vDate);\n}\n\nconst monthNames = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\",\"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\nconst month = monthNames[dateObj.getMonth()];\nconst day = String(dateObj.getDate()).padStart(2, '0');\nconst year = dateObj.getFullYear();\nconst output = year + '-' + month + '-' + day;\n\nflow.set('vStartDate',output);\n\nmsg.payload = output;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 400,
        "wires": [
            [
                "7aff623f43099abf"
            ]
        ]
    },
    {
        "id": "7aff623f43099abf",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "STBL_GET_ISSUE_MC_TECH_LINE",
        "func": "let vDate = flow.get('vStartDate');\nlet vLine = flow.get('vLine');\nlet vLocation = 'SMT'\n\nvar t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_GET_ISSUE_MC_TECH_LINE] \" + \"\\'\" + vLocation + \"\\'\" + \",\\'\" + vLine + \"\\'\" + \",\\'\" + vDate + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 400,
        "wires": [
            [
                "9a20abb4084b273e"
            ]
        ]
    },
    {
        "id": "9a20abb4084b273e",
        "type": "MSSQL",
        "z": "c7ed0efb6d85cb7d",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 1060,
        "y": 400,
        "wires": [
            [
                "f4b15dcc02de150f"
            ]
        ]
    },
    {
        "id": "e777fbc404c7fb4d",
        "type": "ui_button",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "group": "fbc0b65ecfcd7e53",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Cancle",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": " ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 360,
        "y": 660,
        "wires": [
            [
                "027519cf8f41739d"
            ]
        ]
    },
    {
        "id": "027519cf8f41739d",
        "type": "change",
        "z": "c7ed0efb6d85cb7d",
        "name": "Clear Opt Text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 660,
        "wires": [
            [
                "cfd1615701867446"
            ]
        ]
    },
    {
        "id": "999c159a6ee49d3b",
        "type": "link in",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "cfd1615701867446"
        ],
        "x": 255,
        "y": 300,
        "wires": [
            [
                "e4fd37895af61dc0"
            ]
        ]
    },
    {
        "id": "cfd1615701867446",
        "type": "link out",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "999c159a6ee49d3b",
            "a170863b71fdd9a7",
            "838dd1e86b6dbdbf",
            "a8fdb345c067d351",
            "ff6632f69f93393b",
            "2a6ce7c151f0f468",
            "e7ceeb5b.57a54",
            "870528be01636d82"
        ],
        "x": 1275,
        "y": 660,
        "wires": []
    },
    {
        "id": "a170863b71fdd9a7",
        "type": "link in",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "cfd1615701867446"
        ],
        "x": 1115,
        "y": 340,
        "wires": [
            [
                "3ccd125ac1a71fe0"
            ]
        ]
    },
    {
        "id": "838dd1e86b6dbdbf",
        "type": "link in",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "cfd1615701867446",
            "1c4c60ba100ab933"
        ],
        "x": 875,
        "y": 200,
        "wires": [
            [
                "aee66862508ba247",
                "f60ba7173d04e5ce"
            ]
        ]
    },
    {
        "id": "a8fdb345c067d351",
        "type": "link in",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "cfd1615701867446",
            "1c4c60ba100ab933"
        ],
        "x": 1635,
        "y": 300,
        "wires": [
            [
                "1193e0103d77865a"
            ]
        ]
    },
    {
        "id": "4dd9682793772220",
        "type": "ui_button",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "group": "fbc0b65ecfcd7e53",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Request",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 360,
        "y": 540,
        "wires": [
            [
                "d5938f61e517bf4e"
            ]
        ]
    },
    {
        "id": "d5938f61e517bf4e",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "STBL_INS_MAINT_TECH",
        "func": "let vLine = flow.get('vLine');\nlet vLocation = 'SMT'\nlet vMachine = flow.get('vMachine');\nlet vIssue = flow.get('vIssue');\nlet vEmpCode = flow.get('vOptCode');\n//msg.payload = vLine;\nvar t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_INS_MAINT_TECH] \" + \"\\'\" + vLocation + \"\\'\" + \",\\'\" + vLine + \"\\'\" + \",\\'\\'\" + \",\\'\\'\" + \",\\'\" + vEmpCode + \"\\'\";\n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 540,
        "wires": [
            [
                "05f639109b75bc9e"
            ]
        ]
    },
    {
        "id": "05f639109b75bc9e",
        "type": "MSSQL",
        "z": "c7ed0efb6d85cb7d",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 780,
        "y": 540,
        "wires": [
            [
                "af9d1a3d7c903a2b",
                "2e66778550696d8a"
            ]
        ]
    },
    {
        "id": "af9d1a3d7c903a2b",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "False",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult == 'False'){\n    msg.payload = 'Please enter detail.';\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 600,
        "wires": [
            [
                "027519cf8f41739d",
                "3d0db07fcb84d62e"
            ]
        ]
    },
    {
        "id": "3d0db07fcb84d62e",
        "type": "ui_toast",
        "z": "c7ed0efb6d85cb7d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "",
        "x": 1130,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "2e66778550696d8a",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Success",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult == 'Success'){\n    msg.payload = vResult;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 540,
        "wires": [
            [
                "7aff623f43099abf",
                "027519cf8f41739d",
                "faa0f67b07aba9e7",
                "63d75d4a2dcc6b2b"
            ]
        ]
    },
    {
        "id": "faa0f67b07aba9e7",
        "type": "ui_toast",
        "z": "c7ed0efb6d85cb7d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "",
        "x": 1130,
        "y": 460,
        "wires": [
            [
                "a7b2d186f66bab92"
            ]
        ]
    },
    {
        "id": "63d75d4a2dcc6b2b",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Call Line",
        "func": "let vStatus = msg.payload;\n\nif(vStatus == 'Success'){\n    msg.payload = vStatus;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 540,
        "wires": [
            [
                "45307c602747757a"
            ]
        ]
    },
    {
        "id": "865557da348fa7a4",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "TM Line",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\n\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\n\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\n\nvar vStatus = \"Req. Maintenance\";\nmsg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer VzDBC8PFDQImwC2YoUe5M0rA7QFcIKuMQAL8LqaquXv'};\nmsg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nLine::\" + vLine + \"\\nStatus::\" + vStatus + \"\\n\"};\n\n//msg.payload = vHH;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1220,
        "wires": [
            [
                "3e06fc49c6e125db"
            ]
        ]
    },
    {
        "id": "3e06fc49c6e125db",
        "type": "http request",
        "z": "c7ed0efb6d85cb7d",
        "name": "Line Noti MT",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1550,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "a7b2d186f66bab92",
        "type": "tcp out",
        "z": "c7ed0efb6d85cb7d",
        "name": "Maintennace Call TCP",
        "host": "200.100.100.228",
        "port": "8997",
        "beserver": "client",
        "base64": false,
        "end": true,
        "x": 1360,
        "y": 460,
        "wires": []
    },
    {
        "id": "0f6c44de5741968f",
        "type": "ui_table",
        "z": "c7ed0efb6d85cb7d",
        "group": "fbc0b65ecfcd7e53",
        "name": "Technician Confirm",
        "order": 36,
        "width": 9,
        "height": 2,
        "columns": [
            {
                "field": "ID",
                "title": "No#",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Machine",
                "title": "Machine",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Issue",
                "title": "Issue",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 590,
        "y": 860,
        "wires": []
    },
    {
        "id": "a0eb7561ceaf231e",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Choose Data",
        "func": "var vData = [];\nvar tData = [];\ntData = msg.payload;\n\nif(tData['ID'] != null && tData['Status'] != 'Done')\n{\n       vData.push(tData);\n}\n\nmsg.payload = vData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 860,
        "wires": [
            [
                "0f6c44de5741968f",
                "ce8698d0d2680afd"
            ]
        ]
    },
    {
        "id": "0adeb9fcc65fbd83",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Set ID",
        "func": "var vJobID = msg.payload['ID'];\n\nflow.set('vJobID',vJobID);\n\nmsg.payload = vJobID;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "870528be01636d82",
        "type": "link in",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "527be53aa6c47292",
            "cfd1615701867446",
            "1c4c60ba100ab933"
        ],
        "x": 235,
        "y": 840,
        "wires": [
            [
                "a0eb7561ceaf231e",
                "0adeb9fcc65fbd83"
            ]
        ]
    },
    {
        "id": "527be53aa6c47292",
        "type": "link out",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "870528be01636d82"
        ],
        "x": 1305,
        "y": 380,
        "wires": []
    },
    {
        "id": "a9c3a33a3ee21d1c",
        "type": "link out",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "a0c885088d26a91b",
            "e6d9a1edb03ad83c"
        ],
        "x": 155,
        "y": 160,
        "wires": []
    },
    {
        "id": "e6d9a1edb03ad83c",
        "type": "link in",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "a9c3a33a3ee21d1c",
            "ab34719b8647c9d3",
            "570564a9a6fafae5",
            "d98ebd41c1882c1c"
        ],
        "x": 1005,
        "y": 700,
        "wires": [
            [
                "027519cf8f41739d"
            ]
        ]
    },
    {
        "id": "33821ec05ed2d19c",
        "type": "ui_text_input",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "label": "Technical Done :",
        "tooltip": "",
        "group": "fbc0b65ecfcd7e53",
        "order": 27,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 370,
        "y": 780,
        "wires": [
            [
                "a3d1a951fd03d43b",
                "0ad42b5f5ca27c3d"
            ]
        ]
    },
    {
        "id": "a3d1a951fd03d43b",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "SQL STBL_GET_NAME_ENG",
        "func": "let vEmpCode = msg.payload\nif(vEmpCode.length == 6){\n    var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_GET_NAME_ENG] \" + \"\\'\" + vEmpCode + \"\\'\";\n    msg.payload = t; \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 780,
        "wires": [
            [
                "5c6b226a4c8839bd"
            ]
        ]
    },
    {
        "id": "0ad42b5f5ca27c3d",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Set vEmpCode",
        "func": "let vEmpCode = msg.payload;\nflow.set('vTechCode',vEmpCode);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "5c6b226a4c8839bd",
        "type": "MSSQL",
        "z": "c7ed0efb6d85cb7d",
        "mssqlCN": "bb1c9c69ee6bdadb",
        "name": "Get Name",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 880,
        "y": 780,
        "wires": [
            [
                "5227a12a308eb191"
            ]
        ]
    },
    {
        "id": "5227a12a308eb191",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Get Name",
        "func": "let vDate = msg.payload;\nlet vName = vDate[0]['EmpName'];\n\nmsg.payload = vName;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 780,
        "wires": [
            [
                "5b1abb060e2dfe3f"
            ]
        ]
    },
    {
        "id": "5b1abb060e2dfe3f",
        "type": "ui_text",
        "z": "c7ed0efb6d85cb7d",
        "group": "fbc0b65ecfcd7e53",
        "order": 28,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Technical Name :",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1210,
        "y": 780,
        "wires": []
    },
    {
        "id": "6d139783f59beb56",
        "type": "ui_button",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "group": "fbc0b65ecfcd7e53",
        "order": 42,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Done Job",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 940,
        "wires": [
            [
                "b44fd8c08ed15862"
            ]
        ]
    },
    {
        "id": "0edd70d46a17e640",
        "type": "ui_button",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "group": "fbc0b65ecfcd7e53",
        "order": 44,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Cancel",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 1180,
        "wires": [
            [
                "ab34719b8647c9d3"
            ]
        ]
    },
    {
        "id": "ff6632f69f93393b",
        "type": "link in",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "cfd1615701867446"
        ],
        "x": 1055,
        "y": 740,
        "wires": [
            [
                "5b1abb060e2dfe3f"
            ]
        ]
    },
    {
        "id": "2a6ce7c151f0f468",
        "type": "link in",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "cfd1615701867446"
        ],
        "x": 235,
        "y": 780,
        "wires": [
            [
                "33821ec05ed2d19c"
            ]
        ]
    },
    {
        "id": "ab34719b8647c9d3",
        "type": "link out",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "e6d9a1edb03ad83c"
        ],
        "x": 455,
        "y": 1180,
        "wires": []
    },
    {
        "id": "095ca12e476f0b62",
        "type": "ui_button",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "group": "fbc0b65ecfcd7e53",
        "order": 43,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Call Maintennace",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 1100,
        "wires": [
            [
                "f36af1670a7dd384"
            ]
        ]
    },
    {
        "id": "ded24e06e1b35330",
        "type": "MSSQL",
        "z": "c7ed0efb6d85cb7d",
        "mssqlCN": "bb1c9c69ee6bdadb",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 780,
        "y": 940,
        "wires": [
            [
                "367449c75afe575c",
                "8f637f57a43a04ec"
            ]
        ]
    },
    {
        "id": "8f637f57a43a04ec",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "SQL False",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult == 'False'){\n    msg.payload = 'Please enter detail.';\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 900,
        "wires": [
            [
                "687ce32bdc61eb01",
                "570564a9a6fafae5"
            ]
        ]
    },
    {
        "id": "367449c75afe575c",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "SQL Done",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult == 'Success'){\n    msg.payload = vResult;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 960,
        "wires": [
            [
                "7aff623f43099abf",
                "e5e4d9841788ce32",
                "687ce32bdc61eb01",
                "570564a9a6fafae5",
                "113d621a6daf6a91"
            ]
        ]
    },
    {
        "id": "e5e4d9841788ce32",
        "type": "tcp out",
        "z": "c7ed0efb6d85cb7d",
        "name": "Technician Call TCP",
        "host": "200.100.100.228",
        "port": "8997",
        "beserver": "client",
        "base64": false,
        "end": true,
        "x": 1280,
        "y": 960,
        "wires": []
    },
    {
        "id": "687ce32bdc61eb01",
        "type": "ui_toast",
        "z": "c7ed0efb6d85cb7d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "",
        "x": 1210,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "b44fd8c08ed15862",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "STBL_UPD_DONE_JOB",
        "func": "var vEngCode = flow.get('vTechCode');\nvar vJobID = flow.get('vJobID');\nlet vMachine = flow.get('vMachine');\nlet vIssue = flow.get('vIssue');\n//if(vEngCode != '' && vJobID != ''){\n    var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_UPD_DONE_JOB] \" + \"\\'\" + vJobID + \"\\'\"  + \",\\'\" + vEngCode + \"\\'\";\n    msg.payload = t; \n//}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 940,
        "wires": [
            [
                "ded24e06e1b35330"
            ]
        ]
    },
    {
        "id": "570564a9a6fafae5",
        "type": "link out",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "e6d9a1edb03ad83c",
            "2317c4db.97ee94",
            "35c26b4b.de8174"
        ],
        "x": 1115,
        "y": 940,
        "wires": []
    },
    {
        "id": "dcdbacd902519f6a",
        "type": "MSSQL",
        "z": "c7ed0efb6d85cb7d",
        "mssqlCN": "bb1c9c69ee6bdadb",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 800,
        "y": 1100,
        "wires": [
            [
                "3e7bda1670673acb",
                "b7ab91c9985696e0"
            ]
        ]
    },
    {
        "id": "b7ab91c9985696e0",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "SQL False",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult == 'False'){\n    msg.payload = 'Please enter detail.';\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1100,
        "wires": [
            [
                "175a282fa6841526",
                "d98ebd41c1882c1c"
            ]
        ]
    },
    {
        "id": "3e7bda1670673acb",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "SQL Done",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult == 'Success'){\n    msg.payload = vResult;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1160,
        "wires": [
            [
                "7aff623f43099abf",
                "e5e4d9841788ce32",
                "8decea33f4a2ef4b",
                "175a282fa6841526",
                "d98ebd41c1882c1c",
                "518f050c130b1171"
            ]
        ]
    },
    {
        "id": "8decea33f4a2ef4b",
        "type": "tcp out",
        "z": "c7ed0efb6d85cb7d",
        "name": "Engineer Call TCP",
        "host": "200.100.100.228",
        "port": "8998",
        "beserver": "client",
        "base64": false,
        "end": true,
        "x": 1250,
        "y": 1160,
        "wires": []
    },
    {
        "id": "175a282fa6841526",
        "type": "ui_toast",
        "z": "c7ed0efb6d85cb7d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "",
        "x": 1230,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "f36af1670a7dd384",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "STBL_UPD_SEND_JOB",
        "func": "var vEngCode = flow.get('vTechCode');\nvar vJobID = flow.get('vJobID');\nlet vMachine = flow.get('vMachine');\nlet vIssue = flow.get('vIssue');\n//if(vEngCode != '' && vJobID != ''){\n    var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_UPD_SEND_JOB] \" + \"\\'\" + vJobID + \"\\'\"  + \",\\'\" + vEngCode + \"\\'\";\n    msg.payload = t; \n//}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1100,
        "wires": [
            [
                "dcdbacd902519f6a"
            ]
        ]
    },
    {
        "id": "d98ebd41c1882c1c",
        "type": "link out",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "e6d9a1edb03ad83c",
            "e53b0729.722118",
            "d3f27cb8.de4cb8"
        ],
        "x": 1135,
        "y": 1140,
        "wires": []
    },
    {
        "id": "45307c602747757a",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "CO Line",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\n\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\n\nvar vStatus = \"Production Request\";\nmsg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer a9z3uYeAJ4sUKwwifRFyW2XjfzNgS5xKtfEStlW0Fw6'};\nmsg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nLine::\" + vLine + \"\\nStatus::\" + vStatus + \"\\n\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 540,
        "wires": [
            [
                "4fd49b8c2877a331"
            ]
        ]
    },
    {
        "id": "4fd49b8c2877a331",
        "type": "http request",
        "z": "c7ed0efb6d85cb7d",
        "name": "Line Noti CO",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1450,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "518f050c130b1171",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Call Line",
        "func": "let vStatus = msg.payload;\n\nif(vStatus == 'Success'){\n    msg.payload = vStatus;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1220,
        "wires": [
            [
                "865557da348fa7a4"
            ]
        ]
    },
    {
        "id": "113d621a6daf6a91",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Call Line",
        "func": "let vStatus = msg.payload;\n\nif(vStatus == 'Success'){\n    msg.payload = vStatus;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1020,
        "wires": [
            [
                "695aa4e8f2c3f42d"
            ]
        ]
    },
    {
        "id": "695aa4e8f2c3f42d",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "CO Line",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\n\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\n\nvar vStatus = \"Done Job\";\nmsg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer a9z3uYeAJ4sUKwwifRFyW2XjfzNgS5xKtfEStlW0Fw6'};\nmsg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nLine::\" + vLine + \"\\nStatus::\" + vStatus + \"\\n\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1020,
        "wires": [
            [
                "2b2a38ba7a2c925d"
            ]
        ]
    },
    {
        "id": "2b2a38ba7a2c925d",
        "type": "http request",
        "z": "c7ed0efb6d85cb7d",
        "name": "Line Noti CO",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1470,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "2be3f278bfdc4ca4",
        "type": "ui_text_input",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "label": "Technical Accept. :",
        "tooltip": "",
        "group": "fbc0b65ecfcd7e53",
        "order": 30,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 350,
        "y": 1860,
        "wires": [
            [
                "151834c0bb01dc69",
                "783e6f345f76dc05"
            ]
        ]
    },
    {
        "id": "151834c0bb01dc69",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "SQL STBL_GET_NAME_ENG",
        "func": "let vEmpCode = msg.payload\nif(vEmpCode.length == 6){\n    var t= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_GET_NAME_ENG] \" + \"\\'\" + vEmpCode + \"\\'\";\n    msg.payload = t; \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1860,
        "wires": [
            [
                "eb987ab3651f4243"
            ]
        ]
    },
    {
        "id": "eb987ab3651f4243",
        "type": "MSSQL",
        "z": "c7ed0efb6d85cb7d",
        "mssqlCN": "bb1c9c69ee6bdadb",
        "name": "Get Name",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 860,
        "y": 1860,
        "wires": [
            [
                "3329c1aea89677b2"
            ]
        ]
    },
    {
        "id": "3329c1aea89677b2",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Get Name",
        "func": "let vData = msg.payload;\n\nif(typeof(vData) != \"undefined\"){\n    let vName = vData[0]['EmpName'];\n    flow.set('vEmgName',vName);\n    msg.payload = vName;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1040,
        "y": 1860,
        "wires": [
            [
                "3b4f5bec8b77b129"
            ]
        ]
    },
    {
        "id": "3b4f5bec8b77b129",
        "type": "ui_text",
        "z": "c7ed0efb6d85cb7d",
        "group": "fbc0b65ecfcd7e53",
        "order": 31,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Technical Name :",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1250,
        "y": 1860,
        "wires": []
    },
    {
        "id": "783e6f345f76dc05",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Set vEngineerCode",
        "func": "let vEngineerCode = msg.payload;\nflow.set('vEngineerCode',vEngineerCode);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 590,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "05c8214ffce3e280",
        "type": "ui_button",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "group": "fbc0b65ecfcd7e53",
        "order": 46,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Accept",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 1980,
        "wires": [
            [
                "991a622e8c0f773f"
            ]
        ]
    },
    {
        "id": "991a622e8c0f773f",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "STBL_UPD_ACCP_JOB",
        "func": "var vEngCode = flow.get('vEngineerCode');\nvar vJobID = flow.get('vJobID');\nlet vMachine = flow.get('vMachine');\nlet vIssue = flow.get('vIssue');\nlet vOther = flow.get('vOther');\nvar t;\n\nt= \"EXEC [STBL_MAINTENNANCE].[dbo].[STBL_UPD_ACCP_JOB_I] \" \n+ \"\\'\" + vJobID + \"\\'\"  \n+ \",\\'\" + vEngCode + \"\\'\" \n+ \",\\'\" + vMachine + \"\\'\"\n+ \",\\'\" + vIssue + \"\\'\"\n+ \",\\'\" + vOther + \"\\'\";\n   \n\nmsg.payload = t; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1980,
        "wires": [
            [
                "754c098e62b907f0"
            ]
        ]
    },
    {
        "id": "754c098e62b907f0",
        "type": "MSSQL",
        "z": "c7ed0efb6d85cb7d",
        "mssqlCN": "bb1c9c69ee6bdadb",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "params": [],
        "x": 760,
        "y": 1980,
        "wires": [
            [
                "a608041e9096c389",
                "b46f81b4c865407b"
            ]
        ]
    },
    {
        "id": "a608041e9096c389",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "SQL Done",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult != ''){\n    msg.payload = vResult;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 950,
        "y": 2040,
        "wires": [
            [
                "f1d7114d9b735512",
                "3ca4748b9c8dd66a",
                "c4af4c29dd7d74f5",
                "3257bfc48bcc2021",
                "1a21a5464614912f",
                "1c4c60ba100ab933"
            ]
        ]
    },
    {
        "id": "b46f81b4c865407b",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "SQL False",
        "func": "let vResult = msg.payload[0]['Result'];\n\nif(vResult == 'False'){\n    msg.payload = 'Please enter detail.';\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 950,
        "y": 1960,
        "wires": [
            [
                "bdfca54bedd15f6e",
                "1c4c60ba100ab933"
            ]
        ]
    },
    {
        "id": "bdfca54bedd15f6e",
        "type": "ui_toast",
        "z": "c7ed0efb6d85cb7d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "",
        "x": 1170,
        "y": 1960,
        "wires": [
            [
                "f4e285f1d37e5825"
            ]
        ]
    },
    {
        "id": "3257bfc48bcc2021",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Call Line",
        "func": "let vStatus = msg.payload;\n\nif(vStatus == 'Success'){\n    msg.payload = vStatus;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1160,
        "y": 2040,
        "wires": [
            [
                "b4278e36222bf827",
                "06d0c3ad568dfba0"
            ]
        ]
    },
    {
        "id": "1a21a5464614912f",
        "type": "ui_toast",
        "z": "c7ed0efb6d85cb7d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "",
        "x": 1170,
        "y": 2000,
        "wires": [
            [
                "f4e285f1d37e5825"
            ]
        ]
    },
    {
        "id": "b4278e36222bf827",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "TM Line",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\n\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\nvar vdMachine = flow.get('vDMC');\nvar vdEngname = flow.get('vEmgName');\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\n\nvar vStatus = \"Req. Engineer\";\nmsg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer BFkxbeNoPSxGBOQ6Kw7gPFm1KWYIWfbG5ByhKtMEoiT'};\nmsg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nMachine::\" + vdMachine+ \"\\nEngineer::\" + vdEngname  + \"\\nStatus:: Accept\" + \"\\n\"};\n\n//msg.payload = vHH;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 2040,
        "wires": [
            [
                "9e3c6e950689fccb"
            ]
        ]
    },
    {
        "id": "28fd8f4d6adf705c",
        "type": "ui_button",
        "z": "c7ed0efb6d85cb7d",
        "name": "Cancel Accept",
        "group": "fbc0b65ecfcd7e53",
        "order": 47,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Cancel",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 2040,
        "wires": [
            [
                "f1d7114d9b735512",
                "3ca4748b9c8dd66a",
                "c4af4c29dd7d74f5",
                "1c4c60ba100ab933"
            ]
        ]
    },
    {
        "id": "f1d7114d9b735512",
        "type": "change",
        "z": "c7ed0efb6d85cb7d",
        "name": "Clear EngineerCode",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 2140,
        "wires": [
            [
                "1337301237f27b3f"
            ]
        ]
    },
    {
        "id": "3ca4748b9c8dd66a",
        "type": "change",
        "z": "c7ed0efb6d85cb7d",
        "name": "Clear EngineerName",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 2180,
        "wires": [
            [
                "a817970d3bab3054"
            ]
        ]
    },
    {
        "id": "c4af4c29dd7d74f5",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "Set ID",
        "func": "var vJobID = \"\";\n\nflow.set('vJobID',vJobID);\n\nmsg.payload = vJobID;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "1337301237f27b3f",
        "type": "link out",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "a49b37f.d937e48",
            "2e560d492b0cefc6"
        ],
        "x": 1375,
        "y": 2140,
        "wires": []
    },
    {
        "id": "a817970d3bab3054",
        "type": "link out",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "77b57eebae9b7289"
        ],
        "x": 1375,
        "y": 2180,
        "wires": []
    },
    {
        "id": "77b57eebae9b7289",
        "type": "link in",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "a817970d3bab3054"
        ],
        "x": 1095,
        "y": 1900,
        "wires": [
            [
                "3b4f5bec8b77b129"
            ]
        ]
    },
    {
        "id": "1c4c60ba100ab933",
        "type": "link out",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "mode": "link",
        "links": [
            "870528be01636d82",
            "e0b38902a999a339",
            "838dd1e86b6dbdbf",
            "a8fdb345c067d351"
        ],
        "x": 1135,
        "y": 2100,
        "wires": []
    },
    {
        "id": "06d0c3ad568dfba0",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "TM NEW Line",
        "func": "var vDate = new Date();\nvar DD = vDate.getDate();\nvar MM = vDate.getMonth();\nvar YY = vDate.getFullYear();\nvar HH = vDate.getHours();\nvar mm = vDate.getMinutes();\nvar ss = vDate.getSeconds();\n\nconst months = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec'\n}\n\nHH = (HH.toString().length == 1) ? \"0\" + HH : HH;\nmm = (mm.toString().length == 1) ? \"0\" + mm : mm;\nss = (ss.toString().length == 1) ? \"0\" + ss : ss;\n\nvar vLine = flow.get('vLine');\nvar vdMachine = flow.get('vDMC');\nvar vdEngname = flow.get('vEmgName');\nvar vDateShow = DD + \"-\" + months[MM] + \"-\" + YY;\nvar vTimeShow = HH + \":\" + mm + \":\" + ss;\n\nvar vStatus = \"Req. Engineer\";\nmsg.headers = {'content-type':'application/x-www-form-urlencoded','Authorization':'Bearer ZMomgLuDOwnKrHkdROHKeT1ePZ51sCSbueky92zOqrN'};\nmsg.payload = {\"message\":vDateShow + \" \" + vTimeShow + \"\\nMachine::\" + vdMachine+ \"\\nEngineer::\" + vdEngname  + \"\\nStatus:: Accept\" + \"\\n\"};\n\n//msg.payload = vHH;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 2080,
        "wires": [
            [
                "9e3c6e950689fccb"
            ]
        ]
    },
    {
        "id": "9e3c6e950689fccb",
        "type": "http request",
        "z": "c7ed0efb6d85cb7d",
        "name": "Line Noti CO",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1570,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "2e560d492b0cefc6",
        "type": "link in",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "1337301237f27b3f"
        ],
        "x": 215,
        "y": 1860,
        "wires": [
            [
                "2be3f278bfdc4ca4"
            ]
        ]
    },
    {
        "id": "f4e285f1d37e5825",
        "type": "link out",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "52f739ae.70654"
        ],
        "x": 1295,
        "y": 1980,
        "wires": []
    },
    {
        "id": "ce8698d0d2680afd",
        "type": "ui_table",
        "z": "c7ed0efb6d85cb7d",
        "group": "fbc0b65ecfcd7e53",
        "name": "Technician Accept",
        "order": 34,
        "width": 9,
        "height": 2,
        "columns": [
            {
                "field": "ID",
                "title": "No#",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Machine",
                "title": "Machine",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Issue",
                "title": "Issue",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 600,
        "y": 900,
        "wires": []
    },
    {
        "id": "e0b38902a999a339",
        "type": "link in",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "links": [
            "1c4c60ba100ab933"
        ],
        "x": 575,
        "y": 460,
        "wires": [
            [
                "7aff623f43099abf"
            ]
        ]
    },
    {
        "id": "586f6c462716db9b",
        "type": "ui_table",
        "z": "c7ed0efb6d85cb7d",
        "group": "b796a349f2424f4e",
        "name": "Change Over Task",
        "order": 6,
        "width": 22,
        "height": 4,
        "columns": [
            {
                "field": "ID",
                "title": "No#",
                "width": "6%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Line",
                "title": "Line",
                "width": "6%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Tracking",
                "title": "Tracking",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Model",
                "title": "Model",
                "width": "25%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Name",
                "title": "Technician",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Req_Date",
                "title": "Request Date",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Status",
                "title": "Status",
                "width": "8%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Accept_Date",
                "title": "Done Date",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1190,
        "y": 1520,
        "wires": [
            [
                "ed36f25c88238caf",
                "1cbe1cb279dbaa22"
            ]
        ]
    },
    {
        "id": "f60ba7173d04e5ce",
        "type": "ui_text-input",
        "z": "c7ed0efb6d85cb7d",
        "action": "set",
        "actionType": "str",
        "write": "payload",
        "writeType": "msg",
        "name": "",
        "label": "Other:",
        "tooltip": "",
        "group": "fbc0b65ecfcd7e53",
        "order": 24,
        "width": 11,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "change": true,
        "delay": 300,
        "topic": "",
        "x": 1740,
        "y": 200,
        "wires": [
            [
                "d308a4320c73dc3e"
            ]
        ]
    },
    {
        "id": "d308a4320c73dc3e",
        "type": "function",
        "z": "c7ed0efb6d85cb7d",
        "name": "",
        "func": "let vOther = msg.payload;\n\nflow.set('vOther',vOther);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b88eb0d9ca3c7062",
        "type": "function",
        "z": "189ee51bc6bd3bad",
        "name": "Date to Group",
        "func": "let vRST = msg.payload;\n\n//if(vRST == \"0\")\n//{\n    var d = new Date();\n    let vLine = flow.get('vLine');\n    \nlet t1 = String(d.getFullYear()) + String(addZero((d.getMonth() + 1)))\n  + String(addZero(d.getDate())) + String(addZero(d.getHours()))\n  + String(addZero(d.getMinutes())) + String(addZero(d.getSeconds()));\n\nmsg.payload = Buffer.from(vLine + t1).toString('base64');\n    \n    return msg\n//}\n\nfunction addZero(i) {\n  if (i < 10) {\n    i = \"0\" + i;\n  }\n  return i;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 140,
        "wires": [
            [
                "09eba5b7e9a91eb6"
            ]
        ]
    },
    {
        "id": "07261f2f999cee60",
        "type": "ui_table",
        "z": "189ee51bc6bd3bad",
        "group": "dde64d7488454a4b",
        "name": "Tracking_Detail",
        "order": 7,
        "width": 10,
        "height": 10,
        "columns": [
            {
                "field": "Line",
                "title": "Line",
                "width": "20%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "TrackingNo",
                "title": "Tracking",
                "width": "40%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "GroupID",
                "title": "Group",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1540,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "a02f07461ee258ea",
        "type": "ui_text_input",
        "z": "189ee51bc6bd3bad",
        "name": "",
        "label": "Tracking",
        "tooltip": "",
        "group": "dde64d7488454a4b",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 180,
        "y": 300,
        "wires": [
            [
                "40f8036642a95c4d"
            ]
        ]
    },
    {
        "id": "0a9d72b5410028b2",
        "type": "function",
        "z": "189ee51bc6bd3bad",
        "name": "Set Value",
        "func": "flow.set('vLine','Line-19');\nflow.set('vGroup','');\nflow.set('vChkModel','0');\nflow.set('vTracking','');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 60,
        "wires": [
            [
                "a2c03391f8886a29"
            ]
        ]
    },
    {
        "id": "58764ca1082e3548",
        "type": "inject",
        "z": "189ee51bc6bd3bad",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Started!",
        "payloadType": "str",
        "x": 200,
        "y": 60,
        "wires": [
            [
                "0a9d72b5410028b2"
            ]
        ]
    },
    {
        "id": "09eba5b7e9a91eb6",
        "type": "function",
        "z": "189ee51bc6bd3bad",
        "name": "Set Group",
        "func": "let vGroup = msg.payload;\nflow.set('vGroup',vGroup);\n\nmsg.payload = vGroup;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 140,
        "wires": [
            [
                "466565af42ba7d39"
            ]
        ]
    },
    {
        "id": "a6edbd2a54df6f59",
        "type": "function",
        "z": "189ee51bc6bd3bad",
        "name": "STBL_INS_TRACKING_GROUP",
        "func": "let vLine = flow.get('vLine');\nlet vGroup = flow.get('vGroup');\nlet vTracking = flow.get('vTracking');\nlet vChkModel = flow.get('vChkModel');\n\nif(vTracking.length >= 10 && vGroup != \"\" && vChkModel == \"1\")\n{\n    var t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_INS_TRACKING_GROUP] \" + \"\\'\" + vTracking + \"\\'\" + \",\\'\" + vLine + \"\\'\" + \",\\'\" + vGroup + \"\\'\";\n    \n    msg.payload = t; \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 300,
        "wires": [
            [
                "bc15a268e5020774"
            ]
        ]
    },
    {
        "id": "bc15a268e5020774",
        "type": "MSSQL",
        "z": "189ee51bc6bd3bad",
        "mssqlCN": "7fc3e3e5.61e93c",
        "name": "SQL 229",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP (1000) [Line]\n      ,[Model]\n      ,[Qty]\n      ,[OKQty]\n      ,[NGQty]\n      ,[ClycleTime]\n      --,[StartDate]\n      ,CONVERT(varchar,[UpdateDate],20) AS Date\n  FROM [AOI_LOG_MAIN].[dbo].[AOI_MONITOR]\n  WHERE [Line] = {{msg.payload}}\n  order by [UpdateDate] ASC",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 1280,
        "y": 300,
        "wires": [
            [
                "07261f2f999cee60",
                "9b866b7bad6f5cd9",
                "0905744ad2bc497a",
                "d11d6675f0b625e8"
            ]
        ]
    },
    {
        "id": "020587a854999a83",
        "type": "function",
        "z": "189ee51bc6bd3bad",
        "name": "CHK Result Group",
        "func": "let msg1 = {};\n\nlet vStatus = msg.payload[0].Status;\nlet vRTS  = msg.payload[0].RTS;\n\nmsg.payload = vStatus;\nmsg1.payload = vRTS;\n\nreturn [msg,msg1];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 540,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "466565af42ba7d39",
        "type": "ui_text",
        "z": "189ee51bc6bd3bad",
        "group": "dde64d7488454a4b",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Group",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 970,
        "y": 140,
        "wires": []
    },
    {
        "id": "8b37fd2939a90786",
        "type": "ui_button",
        "z": "189ee51bc6bd3bad",
        "name": "New Group",
        "group": "dde64d7488454a4b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "New",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "b88eb0d9ca3c7062",
                "021074b69a1009b1"
            ]
        ]
    },
    {
        "id": "b245d5bd906642be",
        "type": "function",
        "z": "189ee51bc6bd3bad",
        "name": "Set NULL",
        "func": "msg.payload = \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 180,
        "wires": [
            [
                "466565af42ba7d39",
                "282971994d58f203"
            ]
        ]
    },
    {
        "id": "0bc868b65db620c7",
        "type": "link in",
        "z": "189ee51bc6bd3bad",
        "name": "",
        "links": [
            "a2c03391f8886a29"
        ],
        "x": 615,
        "y": 180,
        "wires": [
            [
                "b245d5bd906642be"
            ]
        ]
    },
    {
        "id": "a2c03391f8886a29",
        "type": "link out",
        "z": "189ee51bc6bd3bad",
        "name": "",
        "links": [
            "0bc868b65db620c7",
            "d725d418adf41bdc",
            "7ba145838291866f",
            "edc586b88a65c581"
        ],
        "x": 495,
        "y": 60,
        "wires": []
    },
    {
        "id": "719c582f35c7486c",
        "type": "function",
        "z": "189ee51bc6bd3bad",
        "name": "STBL_CHK_TRACKING_GROUP",
        "func": "let vLine = flow.get('vLine');\nlet vTracking = msg.payload;\n\nif(vTracking.length >= 10)\n{\n    var t= \"EXEC [STBL_Counter_LOG].[dbo].[STBL_CHK_TRACKING_GROUP] \" + \"\\'\" + vTracking + \"\\'\" + \",\\'\" + vLine + \"\\'\";\n    \n    msg.payload = t; \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "40f8036642a95c4d",
        "type": "function",
        "z": "189ee51bc6bd3bad",
        "name": "SQL Chk_Model_Seiban",
        "func": "let vTracking = msg.payload.substring(0,10);\nlet vGroup = flow.get('vGroup');\nlet vSQLTexe = \"\";\nif(vTracking.length >= 10 && vGroup != \"\")\n{\n    vSQLTexe = \"EXEC [siix_check_serial].[dbo].[Chk_Model_Seiban] \\'\" + vTracking + \"\\'\";\n    msg.payload = vSQLTexe;\n\n    flow.set('vTracking',vTracking);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 300,
        "wires": [
            [
                "d69b26b58aec6d7c"
            ]
        ]
    },
    {
        "id": "d69b26b58aec6d7c",
        "type": "MSSQL",
        "z": "189ee51bc6bd3bad",
        "mssqlCN": "64a947e8.aad318",
        "name": "GET_Model",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 570,
        "y": 300,
        "wires": [
            [
                "123fe9538216e954"
            ]
        ]
    },
    {
        "id": "123fe9538216e954",
        "type": "function",
        "z": "189ee51bc6bd3bad",
        "name": "Get Model Name",
        "func": "let vCount = msg.payload.length;\n\nif(vCount > 0)\n{\n    var vModel = msg.payload[0].ITEMDESC;\n    var vITEMCODE = msg.payload[0].ITEMCODE;\n    msg.payload = vModel;\n    flow.set('vChkModel','1');\n}\nelse\n{\n    msg.payload = \"\";\n    flow.set('vChkModel','0');\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 300,
        "wires": [
            [
                "282971994d58f203",
                "a6edbd2a54df6f59",
                "9b866b7bad6f5cd9"
            ]
        ]
    },
    {
        "id": "282971994d58f203",
        "type": "ui_text",
        "z": "189ee51bc6bd3bad",
        "group": "dde64d7488454a4b",
        "order": 4,
        "width": 9,
        "height": 1,
        "name": "",
        "label": "Model",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 970,
        "y": 180,
        "wires": []
    },
    {
        "id": "9b866b7bad6f5cd9",
        "type": "function",
        "z": "189ee51bc6bd3bad",
        "name": "Clear Tracking",
        "func": "let vModel = msg.payload;\n\nif(vModel == \"\"){return msg;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 360,
        "wires": [
            [
                "27af16ae286bd2f5"
            ]
        ]
    },
    {
        "id": "27af16ae286bd2f5",
        "type": "change",
        "z": "189ee51bc6bd3bad",
        "name": "Clear Text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 360,
        "wires": [
            [
                "9140ebb612e5020b"
            ]
        ]
    },
    {
        "id": "9140ebb612e5020b",
        "type": "link out",
        "z": "189ee51bc6bd3bad",
        "name": "",
        "links": [
            "1c3c4144204de348"
        ],
        "x": 1295,
        "y": 360,
        "wires": []
    },
    {
        "id": "1c3c4144204de348",
        "type": "link in",
        "z": "189ee51bc6bd3bad",
        "name": "",
        "links": [
            "9140ebb612e5020b"
        ],
        "x": 75,
        "y": 300,
        "wires": [
            [
                "a02f07461ee258ea"
            ]
        ]
    },
    {
        "id": "0905744ad2bc497a",
        "type": "function",
        "z": "189ee51bc6bd3bad",
        "name": "Set Group From DB",
        "func": "let vGroup = msg.payload[0].GroupID;\nmsg.payload = vGroup;\nflow.set('vGroup',vGroup);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 140,
        "wires": [
            [
                "466565af42ba7d39"
            ]
        ]
    },
    {
        "id": "7ba145838291866f",
        "type": "link in",
        "z": "189ee51bc6bd3bad",
        "name": "",
        "links": [
            "a2c03391f8886a29",
            "021074b69a1009b1",
            "d11d6675f0b625e8"
        ],
        "x": 1075,
        "y": 400,
        "wires": [
            [
                "27af16ae286bd2f5"
            ]
        ]
    },
    {
        "id": "d725d418adf41bdc",
        "type": "link in",
        "z": "189ee51bc6bd3bad",
        "name": "",
        "links": [
            "a2c03391f8886a29",
            "6b9bd658.3b4f38",
            "021074b69a1009b1"
        ],
        "x": 835,
        "y": 60,
        "wires": [
            [
                "f83e83f904dd4287"
            ]
        ]
    },
    {
        "id": "f83e83f904dd4287",
        "type": "function",
        "z": "189ee51bc6bd3bad",
        "name": "Clare Table",
        "func": "var vData = [];\n\nmsg.payload = vData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 60,
        "wires": [
            [
                "07261f2f999cee60"
            ]
        ]
    },
    {
        "id": "d8f54af18db00f9d",
        "type": "function",
        "z": "189ee51bc6bd3bad",
        "name": "Set NULL",
        "func": "msg.payload = \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 220,
        "wires": [
            [
                "282971994d58f203"
            ]
        ]
    },
    {
        "id": "edc586b88a65c581",
        "type": "link in",
        "z": "189ee51bc6bd3bad",
        "name": "",
        "links": [
            "a2c03391f8886a29",
            "021074b69a1009b1"
        ],
        "x": 615,
        "y": 220,
        "wires": [
            [
                "d8f54af18db00f9d"
            ]
        ]
    },
    {
        "id": "021074b69a1009b1",
        "type": "link out",
        "z": "189ee51bc6bd3bad",
        "name": "",
        "links": [
            "edc586b88a65c581",
            "d725d418adf41bdc",
            "7ba145838291866f"
        ],
        "x": 315,
        "y": 180,
        "wires": []
    },
    {
        "id": "d11d6675f0b625e8",
        "type": "link out",
        "z": "189ee51bc6bd3bad",
        "name": "",
        "mode": "link",
        "links": [
            "7ba145838291866f"
        ],
        "x": 1425,
        "y": 300,
        "wires": []
    },
    {
        "id": "2416bfe2a7dd0d23",
        "type": "inject",
        "z": "189ee51bc6bd3bad",
        "name": "Auto reset 5 mins.",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "021074b69a1009b1",
                "57cabfa15aad56a0"
            ]
        ]
    },
    {
        "id": "57cabfa15aad56a0",
        "type": "function",
        "z": "189ee51bc6bd3bad",
        "name": "Bank",
        "func": "msg.payload = '';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "09eba5b7e9a91eb6"
            ]
        ]
    }
]
